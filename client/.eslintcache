[{"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\index.js":"1","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\serviceWorker.js":"2","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\App.js":"3","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\index.js":"4","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\NonAuthLayout.js":"5","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\HorizontalLayout\\index.js":"6","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\VerticalLayout\\index.js":"7","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\reducers.js":"8","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\sagas.js":"9","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\VerticalLayout\\Footer.js":"10","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\VerticalLayout\\Sidebar.js":"11","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\VerticalLayout\\Header.js":"12","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\User\\index.js":"13","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\index.js":"14","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-maintenance.js":"15","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-starter.js":"16","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-timeline.js":"17","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-404.js":"18","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-comingsoon.js":"19","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-pricing.js":"20","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-faqs.js":"21","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-500.js":"22","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiAlert.js":"23","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiCarousel.js":"24","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiColors.js":"25","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiImages.js":"26","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiCards.js":"27","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiButtons.js":"28","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiDropdown.js":"29","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiLightbox.js":"30","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiGrid.js":"31","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiGeneral.js":"32","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiProgressbar.js":"33","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiSweetAlert.js":"34","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiModal.js":"35","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiVideo.js":"36","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiTypography.js":"37","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiTabsAccordions.js":"38","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiSessionTimeout.js":"39","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiRangeSlider.js":"40","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiRating.js":"41","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\ui-notifications.js":"42","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormEditors.js":"43","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormLayouts.js":"44","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\ui-image-cropper.js":"45","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormUpload.js":"46","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\BasicElements.js":"47","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormRepeater.js":"48","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormValidations.js":"49","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormAdvanced.js":"50","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormMask.js":"51","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormXeditable.js":"52","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Tables\\EditableTables.js":"53","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormWizard.js":"54","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Tables\\BasicTables.js":"55","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Charts\\Apexcharts.js":"56","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Tables\\DatatableTables.js":"57","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Tables\\ResponsiveTables.js":"58","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Charts\\ChartjsChart.js":"59","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Charts\\charts-knob.js":"60","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Charts\\EChart.js":"61","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Charts\\SparklineChart.js":"62","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Icons\\IconUnicons.js":"63","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\CommonForBoth\\Rightbar.js":"64","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\actions.js":"65","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Footer.js":"66","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\localbody\\saga.js":"67","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\localbody\\reducer.js":"68","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\ward\\saga.js":"69","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Customers\\viewTariff\\index.js":"70","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Customers\\QrCode\\index.js":"71","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\MasterSettings\\Privilage\\index.js":"72","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\MasterSettings\\Company\\index.js":"73","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\HelperDrop\\index.js":"74","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\GroupWasteSpot\\index.js":"75","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\WastePlot\\index.js":"76","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\DriverCollection\\index.js":"77","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\DriverDrop\\index.js":"78","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\localbody\\actions.js":"79","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\ward\\actions.js":"80","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\Common\\Breadcrumb.js":"81","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\scatterchart.js":"82","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\candlestickchart.js":"83","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\bubblechart.js":"84","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\linebarchart.js":"85","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\piechart.js":"86","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\doughnutchart.js":"87","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\gaugechart.js":"88","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\linechart.js":"89","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\knob\\knob.js":"90","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\barchart.js":"91","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\radarchart.js":"92","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\dountchart.js":"93","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\polarchart.js":"94","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\piechart.js":"95","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\linechart.js":"96","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\dountchart.js":"97","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\LineColumnArea.js":"98","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\PieChart.js":"99","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\ColumnWithDataLabels.js":"100","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\SplineArea.js":"101","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\RadialChart.js":"102","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\barchart.js":"103","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\apaexlinecolumn.js":"104","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\chartapex.js":"105","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\dashedLine.js":"106","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\district\\actions.js":"107","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\companies\\actions.js":"108","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\branches\\actions.js":"109","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\privilages\\actions.js":"110","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\localbody\\actionTypes.js":"111","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\ward\\actionTypes.js":"112","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\helpers\\backend_helper.js":"113","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\companies\\actionTypes.js":"114","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\district\\actionTypes.js":"115","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\branches\\actionTypes.js":"116","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\privilages\\actionTypes.js":"117","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\helpers\\url_helper.js":"118","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\helpers\\api_helper.js":"119","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\helpers\\jwt-token-access\\accessToken.js":"120","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\users\\actions.js":"121","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\layout\\actions.js":"122","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\login\\actions.js":"123","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\profile\\actions.js":"124","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\actions.js":"125","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\register\\actions.js":"126","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slideindividual.js":"127","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithcontrol.js":"128","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithcaption.js":"129","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithfade.js":"130","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithindicator.js":"131","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slide.js":"132","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidedark.js":"133","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\card-pricing.js":"134","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\socialsource.js":"135","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\latest-transaction.js":"136","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\recent-activity.js":"137","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\topuser.js":"138","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\topselling-product.js":"139","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\salesanalytics-chart.js":"140","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\mini-widget.js":"141","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\users\\actionTypes.js":"142","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\district\\saga.js":"143","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\VerticalLayout\\SidebarContent.js":"144","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\branches\\saga.js":"145","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\register\\actionTypes.js":"146","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\NotificationDropdown.js":"147","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.js":"148","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\profile\\actionTypes.js":"149","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\actionTypes.js":"150","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\layout\\actionTypes.js":"151","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\login\\actionTypes.js":"152","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\privilages\\saga.js":"153","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\companies\\saga.js":"154","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\users\\saga.js":"155","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\layout\\saga.js":"156","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\saga.js":"157","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\register\\saga.js":"158","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\login\\saga.js":"159","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\profile\\saga.js":"160","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\ward\\reducer.js":"161","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\district\\reducer.js":"162","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\MegaMenu\\MegaMenu.jsx":"163","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\branches\\reducer.js":"164","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\privilages\\reducer.js":"165","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\companies\\reducer.js":"166","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\users\\reducer.js":"167","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\reducer.js":"168","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\profile\\reducer.js":"169","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\register\\reducer.js":"170","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\layout\\reducer.js":"171","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\login\\reducer.js":"172","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Header.js":"173","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Navbar.js":"174","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\helpers\\firebase_helper.js":"175","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\HelperCollection\\index.js":"176","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Receipt\\index.js":"177","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Invoice\\AutoInvoice\\index.js":"178","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Invoice\\ViewInvoice\\index.js":"179","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js":"180","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Package\\AddWaste\\index.js":"181","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Package\\AddTariff\\index.js":"182","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\IncomeExpenses\\index.js":"183","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\TransactionLog\\index.js":"184","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Authentication\\ForgetPassword.js":"185","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Authentication\\user-profile.js":"186","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Authentication\\Register.js":"187","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Authentication\\Logout.js":"188","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Authentication\\Login.js":"189","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Recoverpw.js":"190","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\auth-lock-screen.js":"191","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Login.js":"192","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Register.js":"193","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\MapsLeaflet.js":"194","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\CreditDebit\\index.js":"195","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\Chart\\index.js":"196","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\FundTransfer\\index.js":"197","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\AccountDetails\\index.js":"198","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\i18n.js":"199","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\Account-Type\\index.js":"200","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\common\\languages.js":"201","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Manage\\Group\\index.js":"202","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Manage\\Localbody\\index.js":"203","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Manage\\District\\index.js":"204","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Manage\\Ward\\index.js":"205","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapMarkerCustomIcons.js":"206","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapLayerControl.js":"207","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\LayerGroup.js":"208","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapVectorLayers.js":"209","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\SimpleMap.js":"210","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapWithPopup.js":"211","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\MapsVector.js":"212","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\MapsGoogle.js":"213","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Icons\\IconDripicons.js":"214","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Icons\\IconBoxicons.js":"215","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Icons\\IconMaterialdesign.js":"216","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Icons\\IconFontawesome.js":"217","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\Vectormap.js":"218","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\routes\\allRoutes.js":"219","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\routes\\middleware\\Authmiddleware.js":"220","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\group\\actions.js":"221","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\group\\actionTypes.js":"222","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\group\\reducer.js":"223","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Customers\\AddCustomer\\index.js":"224","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\customer\\actions.js":"225","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\customer\\actionTypes.js":"226","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\customer\\reducer.js":"227","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\customer\\saga.js":"228"},{"size":473,"mtime":1635143854768,"results":"229","hashOfConfig":"230"},{"size":5456,"mtime":1635143854859,"results":"231","hashOfConfig":"230"},{"size":2303,"mtime":1635143854617,"results":"232","hashOfConfig":"230"},{"size":468,"mtime":1635143854871,"results":"233","hashOfConfig":"230"},{"size":792,"mtime":1635143854763,"results":"234","hashOfConfig":"230"},{"size":3141,"mtime":1635143854763,"results":"235","hashOfConfig":"230"},{"size":3777,"mtime":1635143854765,"results":"236","hashOfConfig":"230"},{"size":1022,"mtime":1635509093415,"results":"237","hashOfConfig":"230"},{"size":1132,"mtime":1635509178771,"results":"238","hashOfConfig":"230"},{"size":945,"mtime":1635143854764,"results":"239","hashOfConfig":"230"},{"size":2297,"mtime":1635143854764,"results":"240","hashOfConfig":"230"},{"size":11139,"mtime":1635143854764,"results":"241","hashOfConfig":"230"},{"size":21518,"mtime":1635143854842,"results":"242","hashOfConfig":"230"},{"size":6161,"mtime":1635143854796,"results":"243","hashOfConfig":"230"},{"size":4614,"mtime":1635143854851,"results":"244","hashOfConfig":"230"},{"size":492,"mtime":1635143854851,"results":"245","hashOfConfig":"230"},{"size":8776,"mtime":1635143854851,"results":"246","hashOfConfig":"230"},{"size":1527,"mtime":1635143854848,"results":"247","hashOfConfig":"230"},{"size":3676,"mtime":1635143854848,"results":"248","hashOfConfig":"230"},{"size":2680,"mtime":1635143854851,"results":"249","hashOfConfig":"230"},{"size":16197,"mtime":1635143854851,"results":"250","hashOfConfig":"230"},{"size":1523,"mtime":1635143854848,"results":"251","hashOfConfig":"230"},{"size":14899,"mtime":1635143854828,"results":"252","hashOfConfig":"230"},{"size":4660,"mtime":1635143854834,"results":"253","hashOfConfig":"230"},{"size":10519,"mtime":1635143854834,"results":"254","hashOfConfig":"230"},{"size":6403,"mtime":1635143854836,"results":"255","hashOfConfig":"230"},{"size":26488,"mtime":1635143854833,"results":"256","hashOfConfig":"230"},{"size":29928,"mtime":1635143854829,"results":"257","hashOfConfig":"230"},{"size":30800,"mtime":1635143854835,"results":"258","hashOfConfig":"230"},{"size":16871,"mtime":1635143854837,"results":"259","hashOfConfig":"230"},{"size":5125,"mtime":1635143854836,"results":"260","hashOfConfig":"230"},{"size":26819,"mtime":1635143854835,"results":"261","hashOfConfig":"230"},{"size":8780,"mtime":1635143854838,"results":"262","hashOfConfig":"230"},{"size":21075,"mtime":1635143854838,"results":"263","hashOfConfig":"230"},{"size":36527,"mtime":1635143854837,"results":"264","hashOfConfig":"230"},{"size":3290,"mtime":1635143854841,"results":"265","hashOfConfig":"230"},{"size":12549,"mtime":1635143854840,"results":"266","hashOfConfig":"230"},{"size":54090,"mtime":1635143854839,"results":"267","hashOfConfig":"230"},{"size":4019,"mtime":1635143854838,"results":"268","hashOfConfig":"230"},{"size":8305,"mtime":1635143854838,"results":"269","hashOfConfig":"230"},{"size":14980,"mtime":1635143854838,"results":"270","hashOfConfig":"230"},{"size":25442,"mtime":1635143854842,"results":"271","hashOfConfig":"230"},{"size":1507,"mtime":1635143854802,"results":"272","hashOfConfig":"230"},{"size":14116,"mtime":1635143854802,"results":"273","hashOfConfig":"230"},{"size":33540,"mtime":1635143854841,"results":"274","hashOfConfig":"230"},{"size":4821,"mtime":1635143854804,"results":"275","hashOfConfig":"230"},{"size":30672,"mtime":1635143854802,"results":"276","hashOfConfig":"230"},{"size":13028,"mtime":1635143854803,"results":"277","hashOfConfig":"230"},{"size":26019,"mtime":1635143854804,"results":"278","hashOfConfig":"230"},{"size":39736,"mtime":1635143854802,"results":"279","hashOfConfig":"230"},{"size":6441,"mtime":1635143854803,"results":"280","hashOfConfig":"230"},{"size":6331,"mtime":1635143854807,"results":"281","hashOfConfig":"230"},{"size":2149,"mtime":1635143854826,"results":"282","hashOfConfig":"230"},{"size":35838,"mtime":1635143854805,"results":"283","hashOfConfig":"230"},{"size":24922,"mtime":1635143854825,"results":"284","hashOfConfig":"230"},{"size":3953,"mtime":1635143854792,"results":"285","hashOfConfig":"230"},{"size":13117,"mtime":1635143854825,"results":"286","hashOfConfig":"230"},{"size":24944,"mtime":1635143854826,"results":"287","hashOfConfig":"230"},{"size":2473,"mtime":1635143854793,"results":"288","hashOfConfig":"230"},{"size":7424,"mtime":1635143854794,"results":"289","hashOfConfig":"230"},{"size":3708,"mtime":1635143854793,"results":"290","hashOfConfig":"230"},{"size":7013,"mtime":1635143854793,"results":"291","hashOfConfig":"230"},{"size":208199,"mtime":1635143854813,"results":"292","hashOfConfig":"230"},{"size":13759,"mtime":1635143854760,"results":"293","hashOfConfig":"230"},{"size":568,"mtime":1635508932825,"results":"294","hashOfConfig":"230"},{"size":588,"mtime":1635143854762,"results":"295","hashOfConfig":"230"},{"size":2637,"mtime":1635143854872,"results":"296","hashOfConfig":"230"},{"size":4165,"mtime":1635334361552,"results":"297","hashOfConfig":"230"},{"size":2259,"mtime":1635143854877,"results":"298","hashOfConfig":"230"},{"size":14692,"mtime":1635143854796,"results":"299","hashOfConfig":"300"},{"size":13968,"mtime":1635143854794,"results":"301","hashOfConfig":"300"},{"size":14633,"mtime":1635143854822,"results":"302","hashOfConfig":"230"},{"size":17386,"mtime":1635143854822,"results":"303","hashOfConfig":"230"},{"size":11853,"mtime":1635143854856,"results":"304","hashOfConfig":"300"},{"size":14243,"mtime":1635143854855,"results":"305","hashOfConfig":"300"},{"size":14238,"mtime":1635143854857,"results":"306","hashOfConfig":"300"},{"size":11877,"mtime":1635143854853,"results":"307","hashOfConfig":"300"},{"size":11853,"mtime":1635143854853,"results":"308","hashOfConfig":"300"},{"size":2005,"mtime":1635143854872,"results":"309","hashOfConfig":"230"},{"size":1681,"mtime":1635143854876,"results":"310","hashOfConfig":"230"},{"size":951,"mtime":1635143854760,"results":"311","hashOfConfig":"230"},{"size":1427,"mtime":1635143854782,"results":"312","hashOfConfig":"230"},{"size":1543,"mtime":1635143854781,"results":"313","hashOfConfig":"230"},{"size":5083,"mtime":1635143854781,"results":"314","hashOfConfig":"230"},{"size":2705,"mtime":1635143854781,"results":"315","hashOfConfig":"230"},{"size":1418,"mtime":1635143854782,"results":"316","hashOfConfig":"230"},{"size":1667,"mtime":1635143854781,"results":"317","hashOfConfig":"230"},{"size":1670,"mtime":1635143854781,"results":"318","hashOfConfig":"230"},{"size":1271,"mtime":1635143854782,"results":"319","hashOfConfig":"230"},{"size":11156,"mtime":1635143854783,"results":"320","hashOfConfig":"230"},{"size":797,"mtime":1635143854779,"results":"321","hashOfConfig":"230"},{"size":1072,"mtime":1635143854780,"results":"322","hashOfConfig":"230"},{"size":467,"mtime":1635143854779,"results":"323","hashOfConfig":"230"},{"size":502,"mtime":1635143854780,"results":"324","hashOfConfig":"230"},{"size":453,"mtime":1635143854780,"results":"325","hashOfConfig":"230"},{"size":1971,"mtime":1635143854780,"results":"326","hashOfConfig":"230"},{"size":893,"mtime":1635143854776,"results":"327","hashOfConfig":"230"},{"size":2244,"mtime":1635143854774,"results":"328","hashOfConfig":"230"},{"size":847,"mtime":1635143854774,"results":"329","hashOfConfig":"230"},{"size":2448,"mtime":1635143854774,"results":"330","hashOfConfig":"230"},{"size":1195,"mtime":1635143854775,"results":"331","hashOfConfig":"230"},{"size":1056,"mtime":1635143854775,"results":"332","hashOfConfig":"230"},{"size":914,"mtime":1635143854776,"results":"333","hashOfConfig":"230"},{"size":1687,"mtime":1635143854775,"results":"334","hashOfConfig":"230"},{"size":1666,"mtime":1635143854776,"results":"335","hashOfConfig":"230"},{"size":1747,"mtime":1635143854776,"results":"336","hashOfConfig":"230"},{"size":1867,"mtime":1635334361550,"results":"337","hashOfConfig":"230"},{"size":458,"mtime":1635143854867,"results":"338","hashOfConfig":"230"},{"size":479,"mtime":1635143854865,"results":"339","hashOfConfig":"230"},{"size":469,"mtime":1635143854874,"results":"340","hashOfConfig":"230"},{"size":910,"mtime":1635143854872,"results":"341","hashOfConfig":"230"},{"size":748,"mtime":1635143854876,"results":"342","hashOfConfig":"230"},{"size":3051,"mtime":1635505254326,"results":"343","hashOfConfig":"230"},{"size":228,"mtime":1635143854867,"results":"344","hashOfConfig":"230"},{"size":874,"mtime":1635334361549,"results":"345","hashOfConfig":"230"},{"size":222,"mtime":1635143854865,"results":"346","hashOfConfig":"230"},{"size":234,"mtime":1635143854873,"results":"347","hashOfConfig":"230"},{"size":1508,"mtime":1635505181903,"results":"348","hashOfConfig":"230"},{"size":1448,"mtime":1635143854766,"results":"349","hashOfConfig":"230"},{"size":185,"mtime":1635143854767,"results":"350","hashOfConfig":"230"},{"size":1683,"mtime":1635143854875,"results":"351","hashOfConfig":"230"},{"size":1215,"mtime":1635143854871,"results":"352","hashOfConfig":"230"},{"size":1110,"mtime":1635143854861,"results":"353","hashOfConfig":"230"},{"size":522,"mtime":1635143854863,"results":"354","hashOfConfig":"230"},{"size":515,"mtime":1635143854861,"results":"355","hashOfConfig":"230"},{"size":465,"mtime":1635143854864,"results":"356","hashOfConfig":"230"},{"size":2718,"mtime":1635143854827,"results":"357","hashOfConfig":"230"},{"size":2592,"mtime":1635143854828,"results":"358","hashOfConfig":"230"},{"size":3104,"mtime":1635143854827,"results":"359","hashOfConfig":"230"},{"size":2799,"mtime":1635143854828,"results":"360","hashOfConfig":"230"},{"size":2786,"mtime":1635143854828,"results":"361","hashOfConfig":"230"},{"size":2253,"mtime":1635143854827,"results":"362","hashOfConfig":"230"},{"size":3407,"mtime":1635143854827,"results":"363","hashOfConfig":"230"},{"size":1626,"mtime":1635143854843,"results":"364","hashOfConfig":"230"},{"size":4305,"mtime":1635143854798,"results":"365","hashOfConfig":"230"},{"size":12539,"mtime":1635143854797,"results":"366","hashOfConfig":"230"},{"size":3770,"mtime":1635143854797,"results":"367","hashOfConfig":"230"},{"size":8791,"mtime":1635143854799,"results":"368","hashOfConfig":"230"},{"size":2978,"mtime":1635143854798,"results":"369","hashOfConfig":"230"},{"size":4890,"mtime":1635143854798,"results":"370","hashOfConfig":"230"},{"size":1420,"mtime":1635143854797,"results":"371","hashOfConfig":"230"},{"size":748,"mtime":1635143854875,"results":"372","hashOfConfig":"230"},{"size":2474,"mtime":1635334361551,"results":"373","hashOfConfig":"230"},{"size":28252,"mtime":1635143854765,"results":"374","hashOfConfig":"230"},{"size":720,"mtime":1635143854866,"results":"375","hashOfConfig":"230"},{"size":175,"mtime":1635143854864,"results":"376","hashOfConfig":"230"},{"size":6064,"mtime":1635143854761,"results":"377","hashOfConfig":"230"},{"size":3375,"mtime":1635143854761,"results":"378","hashOfConfig":"230"},{"size":195,"mtime":1635143854863,"results":"379","hashOfConfig":"230"},{"size":178,"mtime":1635143854860,"results":"380","hashOfConfig":"230"},{"size":567,"mtime":1635143854871,"results":"381","hashOfConfig":"230"},{"size":439,"mtime":1635143854861,"results":"382","hashOfConfig":"230"},{"size":694,"mtime":1635143854874,"results":"383","hashOfConfig":"230"},{"size":674,"mtime":1635143854869,"results":"384","hashOfConfig":"230"},{"size":2259,"mtime":1635143854876,"results":"385","hashOfConfig":"230"},{"size":4999,"mtime":1635143854871,"results":"386","hashOfConfig":"230"},{"size":2084,"mtime":1635143854861,"results":"387","hashOfConfig":"230"},{"size":1630,"mtime":1635143854865,"results":"388","hashOfConfig":"230"},{"size":1629,"mtime":1635143854863,"results":"389","hashOfConfig":"230"},{"size":1568,"mtime":1635143854864,"results":"390","hashOfConfig":"230"},{"size":3320,"mtime":1635143854877,"results":"391","hashOfConfig":"230"},{"size":3649,"mtime":1635334361551,"results":"392","hashOfConfig":"230"},{"size":886,"mtime":1635143854763,"results":"393","hashOfConfig":"230"},{"size":601,"mtime":1635143854866,"results":"394","hashOfConfig":"230"},{"size":561,"mtime":1635143854874,"results":"395","hashOfConfig":"230"},{"size":553,"mtime":1635143854867,"results":"396","hashOfConfig":"230"},{"size":3311,"mtime":1635143854875,"results":"397","hashOfConfig":"230"},{"size":771,"mtime":1635143854861,"results":"398","hashOfConfig":"230"},{"size":677,"mtime":1635143854863,"results":"399","hashOfConfig":"230"},{"size":950,"mtime":1635143854864,"results":"400","hashOfConfig":"230"},{"size":1700,"mtime":1635143854871,"results":"401","hashOfConfig":"230"},{"size":1324,"mtime":1635143854861,"results":"402","hashOfConfig":"230"},{"size":9543,"mtime":1635143854762,"results":"403","hashOfConfig":"230"},{"size":27417,"mtime":1635143854762,"results":"404","hashOfConfig":"230"},{"size":5156,"mtime":1635143854766,"results":"405","hashOfConfig":"230"},{"size":15703,"mtime":1635143854856,"results":"406","hashOfConfig":"300"},{"size":15682,"mtime":1635143854824,"results":"407","hashOfConfig":"300"},{"size":13485,"mtime":1635143854814,"results":"408","hashOfConfig":"300"},{"size":14785,"mtime":1635143854815,"results":"409","hashOfConfig":"300"},{"size":2066,"mtime":1635143854761,"results":"410","hashOfConfig":"230"},{"size":19904,"mtime":1635143854823,"results":"411","hashOfConfig":"300"},{"size":22035,"mtime":1635143854823,"results":"412","hashOfConfig":"300"},{"size":24050,"mtime":1635143854773,"results":"413","hashOfConfig":"300"},{"size":13069,"mtime":1635143854773,"results":"414","hashOfConfig":"300"},{"size":6512,"mtime":1635143854789,"results":"415","hashOfConfig":"230"},{"size":4119,"mtime":1635143854790,"results":"416","hashOfConfig":"230"},{"size":7423,"mtime":1635143854790,"results":"417","hashOfConfig":"230"},{"size":576,"mtime":1635143854789,"results":"418","hashOfConfig":"230"},{"size":7287,"mtime":1635143854789,"results":"419","hashOfConfig":"230"},{"size":3389,"mtime":1635143854791,"results":"420","hashOfConfig":"230"},{"size":5087,"mtime":1635143854791,"results":"421","hashOfConfig":"230"},{"size":5979,"mtime":1635143854790,"results":"422","hashOfConfig":"230"},{"size":5973,"mtime":1635143854791,"results":"423","hashOfConfig":"230"},{"size":3286,"mtime":1635143854820,"results":"424","hashOfConfig":"230"},{"size":15166,"mtime":1635143854772,"results":"425","hashOfConfig":"300"},{"size":14262,"mtime":1635143854771,"results":"426","hashOfConfig":"300"},{"size":15276,"mtime":1635143854773,"results":"427","hashOfConfig":"300"},{"size":13120,"mtime":1635143854771,"results":"428","hashOfConfig":"300"},{"size":1284,"mtime":1635143854767,"results":"429","hashOfConfig":"230"},{"size":12421,"mtime":1635143854771,"results":"430","hashOfConfig":"300"},{"size":611,"mtime":1635143854760,"results":"431","hashOfConfig":"230"},{"size":12728,"mtime":1635492020428,"results":"432","hashOfConfig":"230"},{"size":15531,"mtime":1635762518192,"results":"433","hashOfConfig":"230"},{"size":10533,"mtime":1635768863362,"results":"434","hashOfConfig":"230"},{"size":13843,"mtime":1635790340249,"results":"435","hashOfConfig":"230"},{"size":1638,"mtime":1635143854819,"results":"436","hashOfConfig":"230"},{"size":2942,"mtime":1635143854818,"results":"437","hashOfConfig":"230"},{"size":1922,"mtime":1635143854818,"results":"438","hashOfConfig":"230"},{"size":2258,"mtime":1635143854819,"results":"439","hashOfConfig":"230"},{"size":1143,"mtime":1635143854819,"results":"440","hashOfConfig":"230"},{"size":1199,"mtime":1635143854819,"results":"441","hashOfConfig":"230"},{"size":3054,"mtime":1635143854820,"results":"442","hashOfConfig":"230"},{"size":7750,"mtime":1635143854819,"results":"443","hashOfConfig":"230"},{"size":34408,"mtime":1635143854809,"results":"444","hashOfConfig":"230"},{"size":221905,"mtime":1635143854807,"results":"445","hashOfConfig":"230"},{"size":367746,"mtime":1635143854812,"results":"446","hashOfConfig":"230"},{"size":576039,"mtime":1635143854810,"results":"447","hashOfConfig":"230"},{"size":1105,"mtime":1635143854820,"results":"448","hashOfConfig":"230"},{"size":8818,"mtime":1635493826552,"results":"449","hashOfConfig":"230"},{"size":808,"mtime":1635143854858,"results":"450","hashOfConfig":"230"},{"size":383,"mtime":1635436428210,"results":"451","hashOfConfig":"230"},{"size":163,"mtime":1635407789115,"results":"452","hashOfConfig":"230"},{"size":642,"mtime":1635435740519,"results":"453","hashOfConfig":"230"},{"size":41150,"mtime":1635601714534,"results":"454","hashOfConfig":"230"},{"size":412,"mtime":1635508359403,"results":"455","hashOfConfig":"230"},{"size":184,"mtime":1635507053485,"results":"456","hashOfConfig":"230"},{"size":740,"mtime":1635508188787,"results":"457","hashOfConfig":"230"},{"size":642,"mtime":1635509317808,"results":"458","hashOfConfig":"230"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zzptcx",{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"600"},"845w4y",{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"600"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"600"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"600"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"600"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"600"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"600"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"755","messages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"791","messages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"795","messages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"797","messages":"798","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"799","messages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"801","messages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"803","messages":"804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"807","messages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"809","messages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"811","messages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"813","messages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"600"},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"822","usedDeprecatedRules":"600"},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"600"},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"600"},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"831","messages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833","usedDeprecatedRules":"600"},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"600"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"600"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"600"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"859","messages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"865","usedDeprecatedRules":"600"},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"868","usedDeprecatedRules":"600"},{"filePath":"869","messages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871","usedDeprecatedRules":"600"},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"874","usedDeprecatedRules":"600"},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"877","messages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"879","usedDeprecatedRules":"600"},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"890","messages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"900","messages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"902","messages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"904","messages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"908","messages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"910","messages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"912","messages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"914","messages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"918","messages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"924","messages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"930","messages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"932","messages":"933","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\index.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\serviceWorker.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\App.js",["936"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\index.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\NonAuthLayout.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\HorizontalLayout\\index.js",["937"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\VerticalLayout\\index.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\reducers.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\sagas.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\VerticalLayout\\Footer.js",["938"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\VerticalLayout\\Sidebar.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\VerticalLayout\\Header.js",["939"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\User\\index.js",["940","941","942","943","944","945","946","947","948","949"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\index.js",["950","951","952","953"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-maintenance.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-starter.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-timeline.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-404.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-comingsoon.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-pricing.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-faqs.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\pages-500.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiAlert.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiCarousel.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiColors.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiImages.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiCards.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiButtons.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiDropdown.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiLightbox.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiGrid.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiGeneral.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiProgressbar.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiSweetAlert.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiModal.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiVideo.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiTypography.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiTabsAccordions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiSessionTimeout.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiRangeSlider.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\UiRating.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\ui-notifications.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormEditors.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormLayouts.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\ui-image-cropper.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormUpload.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\BasicElements.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormRepeater.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormValidations.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormAdvanced.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormMask.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormXeditable.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Tables\\EditableTables.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Forms\\FormWizard.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Tables\\BasicTables.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Charts\\Apexcharts.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Tables\\DatatableTables.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Tables\\ResponsiveTables.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Charts\\ChartjsChart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Charts\\charts-knob.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Charts\\EChart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Charts\\SparklineChart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Icons\\IconUnicons.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\CommonForBoth\\Rightbar.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Footer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\localbody\\saga.js",["954"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\localbody\\reducer.js",["955","956","957","958"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\ward\\saga.js",["959"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Customers\\viewTariff\\index.js",["960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst ViewTraffic = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-eye\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Customer ID\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Package\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Validity\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Staff\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        label: \"Basic fee\t\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tAction\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"View Tariff\" />\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>District</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Localbody</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Group</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Package</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Status</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(ViewTraffic));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n",["993","994"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Customers\\QrCode\\index.js",["995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst QrCode = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Time\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Local Body\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Added By\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Qr Code\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Localbody</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Start</Label>\r\n                          <AvField\r\n                            name=\"Start\"\r\n                            placeholder=\"Start\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Start\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">End</Label>\r\n                          <AvField\r\n                            name=\"End\"\r\n                            placeholder=\"End\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter End\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"2\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Generate Qr Code\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                            onClick={() => setAccountType(\"\")}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(QrCode));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\MasterSettings\\Privilage\\index.js",["1024","1025"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\MasterSettings\\Company\\index.js",["1026","1027"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\HelperDrop\\index.js",["1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst HelperDrop = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-eye\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Time\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tSpot\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tTotal Bags\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tTotal Weight\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tAction\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Helper Drop\" />\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Spot</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(HelperDrop));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\GroupWasteSpot\\index.js",["1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst WasteCollection = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-eye\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Location\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"\tDistrict\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tLatitude\t\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Longitude\t\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tAction\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Group Waste Spot\" />\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <AvForm\r\n                  className=\"needs-validation\"\r\n                  // onValidSubmit={(e, v) => {\r\n                  //   handleValidSubmit(e, v);\r\n                  // }}\r\n                >\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom05\">Location</Label>\r\n                        <AvField\r\n                          name=\"Location\"\r\n                          placeholder=\"Location\"\r\n                          type=\"text\"\r\n                          errorMessage=\"Enter Location\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom05\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>District</Label>\r\n                        <Select\r\n                          name=\"customer_community_id\"\r\n                          //   value={selectCommunity}\r\n                          //   onChange={(value) => {\r\n                          //     handleSelectedCommunities(value);\r\n                          //   }}\r\n                          //   options={communitiesOptionsGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom05\">Latitude</Label>\r\n                        <AvField\r\n                          name=\"Latitude\"\r\n                          placeholder=\"Latitude\"\r\n                          type=\"text\"\r\n                          errorMessage=\"Enter Latitude\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom05\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom05\">Longitude</Label>\r\n                        <AvField\r\n                          name=\"Longitude\"\r\n                          placeholder=\"Longitude\"\r\n                          type=\"text\"\r\n                          errorMessage=\"Enter Longitude\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom05\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"1\">\r\n                      <div className=\"mt-4\">\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"1\">\r\n                      <div className=\"mt-4\">\r\n                        <Button\r\n                          color=\"danger\"\r\n                          type=\"reset\"\r\n                          onClick={() => setAccountType(\"\")}\r\n                        >\r\n                          Reset\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </AvForm>\r\n              </CardBody>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardBody>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { apiError })(WasteCollection)\r\n);\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\WastePlot\\index.js",["1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst WasteCollection = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-eye\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Location\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"\tDistrict\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tLatitude\t\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Longitude\t\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tAction\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Waste Plots\" />\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <AvForm\r\n                  className=\"needs-validation\"\r\n                  // onValidSubmit={(e, v) => {\r\n                  //   handleValidSubmit(e, v);\r\n                  // }}\r\n                >\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom05\">Location</Label>\r\n                        <AvField\r\n                          name=\"Location\"\r\n                          placeholder=\"Location\"\r\n                          type=\"text\"\r\n                          errorMessage=\"Enter Location\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom05\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>District</Label>\r\n                        <Select\r\n                          name=\"customer_community_id\"\r\n                          //   value={selectCommunity}\r\n                          //   onChange={(value) => {\r\n                          //     handleSelectedCommunities(value);\r\n                          //   }}\r\n                          //   options={communitiesOptionsGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom05\">Latitude</Label>\r\n                        <AvField\r\n                          name=\"Latitude\"\r\n                          placeholder=\"Latitude\"\r\n                          type=\"text\"\r\n                          errorMessage=\"Enter Latitude\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom05\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom05\">Longitude</Label>\r\n                        <AvField\r\n                          name=\"Longitude\"\r\n                          placeholder=\"Longitude\"\r\n                          type=\"text\"\r\n                          errorMessage=\"Enter Longitude\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom05\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"1\">\r\n                      <div className=\"mt-4\">\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"1\">\r\n                      <div className=\"mt-4\">\r\n                        <Button\r\n                          color=\"danger\"\r\n                          type=\"reset\"\r\n                          onClick={() => setAccountType(\"\")}\r\n                        >\r\n                          Reset\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </AvForm>\r\n              </CardBody>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardBody>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { apiError })(WasteCollection)\r\n);\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\DriverCollection\\index.js",["1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst DriverCollection = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-eye\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Time\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tSpot\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tTotal Bags\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tTotal Weight\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tAction\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Driver Collection\" />\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Spot</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { apiError })(DriverCollection)\r\n);\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\DriverDrop\\index.js",["1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst DriverDrop = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-eye\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Time\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tSpot\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tTotal Bags\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tTotal Weight\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tAction\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Driver Drop\" />\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Plot</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(DriverDrop));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\localbody\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\ward\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\Common\\Breadcrumb.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\scatterchart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\candlestickchart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\bubblechart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\linebarchart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\piechart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\doughnutchart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\gaugechart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\linechart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\knob\\knob.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\barchart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\radarchart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\dountchart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\polarchart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\piechart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\linechart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\dountchart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\LineColumnArea.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\PieChart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\ColumnWithDataLabels.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\SplineArea.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\RadialChart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\barchart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\apaexlinecolumn.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\chartapex.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\dashedLine.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\district\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\companies\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\branches\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\privilages\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\localbody\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\ward\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\helpers\\backend_helper.js",["1185"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\companies\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\district\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\branches\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\privilages\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\helpers\\url_helper.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\helpers\\api_helper.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\helpers\\jwt-token-access\\accessToken.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\users\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\layout\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\login\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\profile\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\register\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slideindividual.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithcontrol.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithcaption.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithfade.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithindicator.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slide.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidedark.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Utility\\card-pricing.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\socialsource.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\latest-transaction.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\recent-activity.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\topuser.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\topselling-product.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\salesanalytics-chart.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Dashboard\\mini-widget.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\users\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\district\\saga.js",["1186"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\VerticalLayout\\SidebarContent.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\branches\\saga.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\register\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\NotificationDropdown.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.js",["1187"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\profile\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\layout\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\login\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\privilages\\saga.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\companies\\saga.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\users\\saga.js",["1188"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\layout\\saga.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\saga.js",["1189","1190","1191","1192","1193","1194","1195"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\register\\saga.js",["1196","1197","1198","1199","1200","1201","1202"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\login\\saga.js",["1203","1204"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\profile\\saga.js",["1205","1206","1207","1208","1209","1210","1211"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\ward\\reducer.js",["1212","1213","1214","1215"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\district\\reducer.js",["1216","1217","1218","1219"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\MegaMenu\\MegaMenu.jsx",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\branches\\reducer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\privilages\\reducer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\companies\\reducer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\users\\reducer.js",["1220","1221","1222","1223"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\reducer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\profile\\reducer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\register\\reducer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\layout\\reducer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\auth\\login\\reducer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Header.js",["1224"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Navbar.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\helpers\\firebase_helper.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\WasteCollection\\HelperCollection\\index.js",["1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst HelperCollection = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-eye\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Receipt No\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Customer ID\t\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Name\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Group\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tWard\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        label: \"Amount\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tDue Amount\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Staff\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tAction\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Helper Collection\" />\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>District</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Localbody</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Ward</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Group</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Staff</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Row>\r\n                  <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"success\" type=\"submit\">\r\n                            Export\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                </Row>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(HelperCollection));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Receipt\\index.js",["1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst ViewReceipt = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-eye\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Receipt No\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Customer ID\t\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Name\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Group\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tWard\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        label: \"Amount\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tDue Amount\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Staff\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tAction\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"View Receipt\" />\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>District</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Localbody</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Ward</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Group</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Staff</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Row>\r\n                  <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"success\" type=\"submit\">\r\n                            Export\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                </Row>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(ViewReceipt));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Invoice\\AutoInvoice\\index.js",["1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst AutoInvoice = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"\tInvoice No\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Customer ID\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Name\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"State\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Group\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Ward\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tAmount\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Staff\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Transaction Log\" />\r\n\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"4\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"4\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Group</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"4\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Staff</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Col md=\"1\">\r\n                  <div className=\"mt-4\">\r\n                    <Button color=\"success\" type=\"submit\">\r\n                      Export\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(AutoInvoice));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Invoice\\ViewInvoice\\index.js",["1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst ViewInvoice = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n \t\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \" Customer ID\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"State\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tGroup\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Ward\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Total Invoice Amount\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Paid Amount\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Total Due\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"View Invoice\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>District</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Localbody</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Ward</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                     \r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Group</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"success\" type=\"submit\">\r\n                            Export\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {/* <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                 \r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row> */}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(ViewInvoice));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Package\\AddWaste\\index.js",["1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Modal,\r\n  Table,\r\n  Progress,\r\n} from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst AddWaste = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState();\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-eye\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Waste item\t \",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n\r\n      {\r\n        label: \"Category\t\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n\r\n      {\r\n        label: \"Type\t\t\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Bags\t\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"kg\t\t\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Amount\t\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Image\t\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Staff\t\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Active/Inactive\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Add Waste\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Waste Item</Label>\r\n                          <AvField\r\n                            name=\"WasteItem\"\r\n                            placeholder=\"Start\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Waste Item\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Waste Category</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Waste Type</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            No. of Pages\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"Pages\"\r\n                            placeholder=\"No. of Pages\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter No. of Pages\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">No. of Kg</Label>\r\n                          <AvField\r\n                            name=\"Kg\"\r\n                            placeholder=\"No. of Kg\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter No. of Kg\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Amount</Label>\r\n                          <AvField\r\n                            name=\"Amount\"\r\n                            placeholder=\"Amount\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Amount\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom03\">\r\n                             Image\r\n                          </Label>\r\n\r\n                          {/* {productObject.product_image_main &&\r\n                          productObject.product_image_main.length > 2 ? ( */}\r\n                            {/* <div className=\"img-wraps\"> */}\r\n                              {/* {productObject.product_image_main &&\r\n                              productObject.product_image_main.startsWith(\r\n                                'http'\r\n                              ) ? (\r\n                                <img\r\n                                  className=\"img-thumbnail\"\r\n                                  alt=\"\"\r\n                                  width=\"200\"\r\n                                //   src={`${productObject.product_image_main}`}\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  className=\"img-thumbnail\"\r\n                                  alt=\"\"\r\n                                  width=\"200\"\r\n                                //   src={`${API_URL}public/uploads/product-images/${productObject.product_image_main}`}\r\n                                />\r\n                              )}\r\n\r\n                              <button\r\n                                className=\"btn btn-danger btn-sm btn-block waves-effect waves-light btn btn-danger\"\r\n                                // onClick={deleteProductImage}\r\n                                style={{ width: '200px' }}\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div>\r\n                          ) : ( */}\r\n                            <AvField\r\n                              name=\"product_image_main\"\r\n                              type=\"file\"\r\n                              errorMessage=\"Select Image\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom04\"\r\n                              //  id=\"getFile\" style={{display:\"none\"}}\r\n                              // onChange={handleChangeInput}\r\n                            //   onChange={uploadImage}\r\n                            />\r\n                           {/* )} */}\r\n\r\n                          {uploadProgress && uploadProgress < 100 && (\r\n                            <div className=\"mt-4\">\r\n                              {' '}\r\n                              <Progress color=\"primary\" value={uploadProgress}>\r\n                                Uploading {uploadProgress}%\r\n                              </Progress>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                            onClick={() => setAccountType(\"\")}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(AddWaste));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Package\\AddTariff\\index.js",["1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Modal,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst AddTariff = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  const [values, setValues] = useState([{}]);\r\n\r\n  const addMore = () => {\r\n    setValues([...values, {}]);\r\n  };\r\n\r\n  const handleRemove = (index) => {\r\n    const list = [...values];\r\n    list.splice(index, 1);\r\n    setValues(list);\r\n  };\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-eye\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Localbody Type \",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n\r\n      {\r\n        label: \"Localbody Name\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n\r\n      {\r\n        label: \"Package\t\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Category\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Reg.Fee\t\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Basic Fee\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Package Validity in Days\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Visit/Month\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Free Bags\t\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Staff\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Add tariff\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Localbody</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Localbody</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Package Name\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"Start\"\r\n                            placeholder=\"Start\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Start\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Category</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Registration Fee\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"RegistrationFee\"\r\n                            placeholder=\"Registration Fee\"\r\n                            type=\"number\"\r\n                            errorMessage=\"Enter Registration Fee\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Basic Fee</Label>\r\n                          <AvField\r\n                            name=\"BasicFee\"\r\n                            placeholder=\"Basic Fee\"\r\n                            type=\"number\"\r\n                            errorMessage=\"Enter Basic Fee\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Package Validity in Days\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"package validity\"\r\n                            placeholder=\"Package Validity in Days\"\r\n                            type=\"number\"\r\n                            errorMessage=\"Enter Package Validity in Days\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Visit/Month\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"visit\"\r\n                            placeholder=\"Visit/Monthnd\"\r\n                            type=\"number\"\r\n                            errorMessage=\"Enter Visit/Month\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <div className=\"container\">\r\n                          <Table className=\"table table-bordered mb-0\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th>#</th>\r\n                                <th>Waste Item</th>\r\n                                <th>Free Bags</th>\r\n\r\n                                {values.length !== 1 ? <th>Action</th> : null}\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {values.map((item, index) => {\r\n                                return (\r\n                                  <tr>\r\n                                    <td>{index + 1}</td>\r\n\r\n                                    <td>\r\n                                      {\" \"}\r\n                                      <div className=\"mb-3\">\r\n                                        <Select\r\n                                          name=\"customer_community_id\"\r\n                                          //   value={selectCommunity}\r\n                                          //   onChange={(value) => {\r\n                                          //     handleSelectedCommunities(value);\r\n                                          //   }}\r\n                                          //   options={communitiesOptionsGroup}\r\n                                          classNamePrefix=\"select2-selection\"\r\n                                        />\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>{item.default_unit}</td>\r\n                                    <td>\r\n                                      {values.length !== 1 && (\r\n                                        <i\r\n                                          className=\"uil-trash-alt\"\r\n                                          style={{\r\n                                            fontSize: \"23px\",\r\n                                            cursor: \"pointer\",\r\n                                            paddingLeft: \"5px\",\r\n                                          }}\r\n                                          onClick={() => handleRemove(index)}\r\n                                        ></i>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </Table>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Button\r\n                      onClick={() => addMore()}\r\n                      color=\"success\"\r\n                      className=\"mt-1\"\r\n                    >\r\n                      Add New Item\r\n                    </Button>\r\n                    <br /> <br /> <br /> <br />\r\n                    <Row>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                            onClick={() => setAccountType(\"\")}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(AddTariff));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\IncomeExpenses\\index.js",["1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst IncomeExpense = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Account Detail Type\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Chart of Account\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Found Source\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Amount\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Total Amount\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Comment\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Staff\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Approved By\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Income/Expense\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                          <div className=\"col-md-10\">\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              defaultValue=\"2019-08-19\"\r\n                              id=\"example-date-input\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Amount</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Amount\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Amount\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Account Type</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label> Account Details Type</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Charts of Account</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Fund Source</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Amount</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Ammount\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Amount\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Comments</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Comments\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Comments\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Comments</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Comments\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Comments\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Comments</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Comments\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Comments\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      {/* <Col className=\"mb-3\">\r\n                        <label\r\n                          htmlFor=\"example-date-input\"\r\n                          className=\"col-md-2 col-form-label\"\r\n                        >\r\n                          Date\r\n                        </label>\r\n                        <div className=\"col-md-10\">\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            defaultValue=\"2019-08-19\"\r\n                            id=\"example-date-input\"\r\n                          />\r\n                        </div>\r\n                      </Col> */}\r\n\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                            onClick={() => setAccountType(\"\")}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                        <div className=\"col-md-10\">\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            defaultValue=\"2019-08-19\"\r\n                            id=\"example-date-input\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>Expense</Label>\r\n                        <Select\r\n                          name=\"customer_community_id\"\r\n                          //   value={selectCommunity}\r\n                          //   onChange={(value) => {\r\n                          //     handleSelectedCommunities(value);\r\n                          //   }}\r\n                          //   options={communitiesOptionsGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>Account Detail Type</Label>\r\n                        <Select\r\n                          name=\"customer_community_id\"\r\n                          //   value={selectCommunity}\r\n                          //   onChange={(value) => {\r\n                          //     handleSelectedCommunities(value);\r\n                          //   }}\r\n                          //   options={communitiesOptionsGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>Account Chart</Label>\r\n                        <Select\r\n                          name=\"customer_community_id\"\r\n                          //   value={selectCommunity}\r\n                          //   onChange={(value) => {\r\n                          //     handleSelectedCommunities(value);\r\n                          //   }}\r\n                          //   options={communitiesOptionsGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>Staff</Label>\r\n                        <Select\r\n                          name=\"customer_community_id\"\r\n                          //   value={selectCommunity}\r\n                          //   onChange={(value) => {\r\n                          //     handleSelectedCommunities(value);\r\n                          //   }}\r\n                          //   options={communitiesOptionsGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { apiError })(IncomeExpense)\r\n);\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\TransactionLog\\index.js",["1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst TransactionLog = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Time\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Acc Category\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Account\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Reference ID\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Debit\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tCredit\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Balance\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tRemark\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Transaction Log\" />\r\n\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"4\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Transaction Type</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col md=\"4\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Month</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"month\"\r\n                        defaultValue=\"2019-08\"\r\n                        id=\"example-month-input\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"4\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { apiError })(TransactionLog)\r\n);\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Authentication\\ForgetPassword.js",["1473"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Authentication\\user-profile.js",["1474"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Authentication\\Register.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Authentication\\Logout.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Authentication\\Login.js",["1475","1476","1477"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Recoverpw.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\auth-lock-screen.js",["1478"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Login.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Register.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\MapsLeaflet.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\CreditDebit\\index.js",["1479","1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst Credit = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Reference ID\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Chart Name\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Debit\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Credit\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Comment\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Added by\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Credit/Debit Fund\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Fund Source</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Type</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Amount</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Ammount\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Amount\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                     \r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Comments</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Comments\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Comments\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                            onClick={() => setAccountType(\"\")}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(Credit));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\Chart\\index.js",["1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst Chart = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const[accountType,setAccountType] = useState('');\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n//   let preUpdateUser = (item) => {\r\n//     if (item.privilage) {\r\n//       let privilage = {\r\n//         label: item.privilage.name,\r\n//         value: item.privilage._id,\r\n//       };\r\n//       handleSelectedPrivilage(privilage);\r\n//     }\r\n//     if (item.company) {\r\n//       let company = {\r\n//         label: item.company.name,\r\n//         value: item.company._id,\r\n//       };\r\n//       handleSelectedCompany(company);\r\n//     }\r\n//     if (item.branch) {\r\n//       let branch = {\r\n//         label: item.branch.name,\r\n//         value: item.branch._id,\r\n//       };\r\n//       handleSelectedBranch(branch);\r\n//     }\r\n\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setUserObject({ ...item, password: null });\r\n//   };\r\n\r\n//   let preUpdateUserPassword = (item) => {\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n            //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n            //   setUserIdToBeDeleted(item._id);\r\n            //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n    //   item.id = index + 1;\r\n    //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n    //   item.privilage1 = item.privilage && item.privilage.name;\r\n    //   item.company1 = item.company && item.company.name;\r\n    //   item.branch1 = item.branch && item.branch.name;\r\n    //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  // Account Type\tAccount Detail Type\tChart Name\tBalance\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Account Detail Type\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Chart Name\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Balance\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n//   let privilagesOptionsData =\r\n//     privilagesOptions &&\r\n//     privilagesOptions.data &&\r\n//     privilagesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let companiesOptionsData =\r\n//     companiesOptions &&\r\n//     companiesOptions.data &&\r\n//     companiesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let branchesOptionsData =\r\n//     branchesOptions &&\r\n//     branchesOptions.data &&\r\n//     branchesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   const privilagesOptionsGroup = [\r\n//     {\r\n//       options: privilagesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const companiesOptionsGroup = [\r\n//     {\r\n//       options: companiesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const branchesOptionsGroup = [\r\n//     {\r\n//       options: branchesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   function handleChangeUser(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setUserObject({ ...userObject, [name]: value });\r\n//   }\r\n\r\n//   function handleSelectedPrivilage(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedPrivilage(value);\r\n//     setUserObject({ ...userObject, privilage: newValue });\r\n//   }\r\n\r\n//   function handleSelectedCompany(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedCompany(value);\r\n//     setUserObject({ ...userObject, company: newValue });\r\n//   }\r\n//   function handleSelectedBranch(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedBranch(value);\r\n//     setUserObject({ ...userObject, branch: newValue });\r\n//   }\r\n\r\n//   function handleChangePassword(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setPasswordObject({ ...passwordObject, [name]: value });\r\n//   }\r\n\r\n//   const handleValidSubmit = (event, values) => {\r\n//     userIdTobeUpdated\r\n//       ? dispatch(updateUser(userObject))\r\n//       : dispatch(addUser(userObject));\r\n//   };\r\n\r\n//   const handleValidSubmitPassword = (event, values) => {\r\n//     if (passwordObject.password == passwordObject.confirmPassword) {\r\n//       let item = {\r\n//         _id: userIdTobeUpdated,\r\n//         password: passwordObject.password,\r\n//       };\r\n//       dispatch(updateUser(item));\r\n//     } else {\r\n//       toastr.error(\"Passwords are not matching\");\r\n//     }\r\n//   };\r\n\r\n//   let closeModal = () => {\r\n//     setShowModal(false);\r\n//     setUserIdToBeUpdated(null);\r\n//   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Chart of account\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                            <Label>Account Detail Type</Label>\r\n                            <Select\r\n                              name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                              classNamePrefix=\"select2-selection\"\r\n                            />\r\n                          </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Chart Name\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Chart Name\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter account type\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Balance\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"balance\"\r\n                            placeholder=\"Balance\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter balance\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                               onClick={() => setAccountType('')}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(Chart));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\FundTransfer\\index.js",["1535","1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst Fund = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Reference ID\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Transfer From\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Transfer To\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Amount\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Comment\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"status\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Fund Transfer\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>From Fund Source</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>To Fund Source</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Amount</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Ammount\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Amount\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Comments</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Comments\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Comments\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                            onClick={() => setAccountType(\"\")}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(Fund));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\AccountDetails\\index.js",["1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575","1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst AccountDetails = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const[accountType,setAccountType] = useState('');\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n//   let preUpdateUser = (item) => {\r\n//     if (item.privilage) {\r\n//       let privilage = {\r\n//         label: item.privilage.name,\r\n//         value: item.privilage._id,\r\n//       };\r\n//       handleSelectedPrivilage(privilage);\r\n//     }\r\n//     if (item.company) {\r\n//       let company = {\r\n//         label: item.company.name,\r\n//         value: item.company._id,\r\n//       };\r\n//       handleSelectedCompany(company);\r\n//     }\r\n//     if (item.branch) {\r\n//       let branch = {\r\n//         label: item.branch.name,\r\n//         value: item.branch._id,\r\n//       };\r\n//       handleSelectedBranch(branch);\r\n//     }\r\n\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setUserObject({ ...item, password: null });\r\n//   };\r\n\r\n//   let preUpdateUserPassword = (item) => {\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n            //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n            //   setUserIdToBeDeleted(item._id);\r\n            //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n    //   item.id = index + 1;\r\n    //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n    //   item.privilage1 = item.privilage && item.privilage.name;\r\n    //   item.company1 = item.company && item.company.name;\r\n    //   item.branch1 = item.branch && item.branch.name;\r\n    //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Account User\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n//   let privilagesOptionsData =\r\n//     privilagesOptions &&\r\n//     privilagesOptions.data &&\r\n//     privilagesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let companiesOptionsData =\r\n//     companiesOptions &&\r\n//     companiesOptions.data &&\r\n//     companiesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let branchesOptionsData =\r\n//     branchesOptions &&\r\n//     branchesOptions.data &&\r\n//     branchesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   const privilagesOptionsGroup = [\r\n//     {\r\n//       options: privilagesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const companiesOptionsGroup = [\r\n//     {\r\n//       options: companiesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const branchesOptionsGroup = [\r\n//     {\r\n//       options: branchesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   function handleChangeUser(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setUserObject({ ...userObject, [name]: value });\r\n//   }\r\n\r\n//   function handleSelectedPrivilage(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedPrivilage(value);\r\n//     setUserObject({ ...userObject, privilage: newValue });\r\n//   }\r\n\r\n//   function handleSelectedCompany(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedCompany(value);\r\n//     setUserObject({ ...userObject, company: newValue });\r\n//   }\r\n//   function handleSelectedBranch(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedBranch(value);\r\n//     setUserObject({ ...userObject, branch: newValue });\r\n//   }\r\n\r\n//   function handleChangePassword(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setPasswordObject({ ...passwordObject, [name]: value });\r\n//   }\r\n\r\n//   const handleValidSubmit = (event, values) => {\r\n//     userIdTobeUpdated\r\n//       ? dispatch(updateUser(userObject))\r\n//       : dispatch(addUser(userObject));\r\n//   };\r\n\r\n//   const handleValidSubmitPassword = (event, values) => {\r\n//     if (passwordObject.password == passwordObject.confirmPassword) {\r\n//       let item = {\r\n//         _id: userIdTobeUpdated,\r\n//         password: passwordObject.password,\r\n//       };\r\n//       dispatch(updateUser(item));\r\n//     } else {\r\n//       toastr.error(\"Passwords are not matching\");\r\n//     }\r\n//   };\r\n\r\n//   let closeModal = () => {\r\n//     setShowModal(false);\r\n//     setUserIdToBeUpdated(null);\r\n//   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Account Details\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                            <Label>Account Types</Label>\r\n                            <Select\r\n                              name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                              classNamePrefix=\"select2-selection\"\r\n                            />\r\n                          </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Account Type\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Account Type\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter account type\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                               onClick={() => setAccountType('')}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(AccountDetails));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\i18n.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Accounts\\Account-Type\\index.js",["1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst AccountType = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const[accountType,setAccountType] = useState('');\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n//   let preUpdateUser = (item) => {\r\n//     if (item.privilage) {\r\n//       let privilage = {\r\n//         label: item.privilage.name,\r\n//         value: item.privilage._id,\r\n//       };\r\n//       handleSelectedPrivilage(privilage);\r\n//     }\r\n//     if (item.company) {\r\n//       let company = {\r\n//         label: item.company.name,\r\n//         value: item.company._id,\r\n//       };\r\n//       handleSelectedCompany(company);\r\n//     }\r\n//     if (item.branch) {\r\n//       let branch = {\r\n//         label: item.branch.name,\r\n//         value: item.branch._id,\r\n//       };\r\n//       handleSelectedBranch(branch);\r\n//     }\r\n\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setUserObject({ ...item, password: null });\r\n//   };\r\n\r\n//   let preUpdateUserPassword = (item) => {\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n            //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n            //   setUserIdToBeDeleted(item._id);\r\n            //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n    //   item.id = index + 1;\r\n    //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n    //   item.privilage1 = item.privilage && item.privilage.name;\r\n    //   item.company1 = item.company && item.company.name;\r\n    //   item.branch1 = item.branch && item.branch.name;\r\n    //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Account User\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n//   let privilagesOptionsData =\r\n//     privilagesOptions &&\r\n//     privilagesOptions.data &&\r\n//     privilagesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let companiesOptionsData =\r\n//     companiesOptions &&\r\n//     companiesOptions.data &&\r\n//     companiesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let branchesOptionsData =\r\n//     branchesOptions &&\r\n//     branchesOptions.data &&\r\n//     branchesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   const privilagesOptionsGroup = [\r\n//     {\r\n//       options: privilagesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const companiesOptionsGroup = [\r\n//     {\r\n//       options: companiesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const branchesOptionsGroup = [\r\n//     {\r\n//       options: branchesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   function handleChangeUser(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setUserObject({ ...userObject, [name]: value });\r\n//   }\r\n\r\n//   function handleSelectedPrivilage(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedPrivilage(value);\r\n//     setUserObject({ ...userObject, privilage: newValue });\r\n//   }\r\n\r\n//   function handleSelectedCompany(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedCompany(value);\r\n//     setUserObject({ ...userObject, company: newValue });\r\n//   }\r\n//   function handleSelectedBranch(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedBranch(value);\r\n//     setUserObject({ ...userObject, branch: newValue });\r\n//   }\r\n\r\n//   function handleChangePassword(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setPasswordObject({ ...passwordObject, [name]: value });\r\n//   }\r\n\r\n//   const handleValidSubmit = (event, values) => {\r\n//     userIdTobeUpdated\r\n//       ? dispatch(updateUser(userObject))\r\n//       : dispatch(addUser(userObject));\r\n//   };\r\n\r\n//   const handleValidSubmitPassword = (event, values) => {\r\n//     if (passwordObject.password == passwordObject.confirmPassword) {\r\n//       let item = {\r\n//         _id: userIdTobeUpdated,\r\n//         password: passwordObject.password,\r\n//       };\r\n//       dispatch(updateUser(item));\r\n//     } else {\r\n//       toastr.error(\"Passwords are not matching\");\r\n//     }\r\n//   };\r\n\r\n//   let closeModal = () => {\r\n//     setShowModal(false);\r\n//     setUserIdToBeUpdated(null);\r\n//   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Account Type\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Account Type\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Account Type\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter account type\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                               onClick={() => setAccountType('')}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(AccountType));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\common\\languages.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Manage\\Group\\index.js",["1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Manage\\Localbody\\index.js",["1663","1664","1665","1666","1667","1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Manage\\District\\index.js",["1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700","1701","1702","1703","1704","1705","1706","1707"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Manage\\Ward\\index.js",["1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725","1726","1727","1728","1729","1730","1731","1732","1733","1734"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapMarkerCustomIcons.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapLayerControl.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\LayerGroup.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapVectorLayers.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\SimpleMap.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapWithPopup.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\MapsVector.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\MapsGoogle.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Icons\\IconDripicons.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Icons\\IconBoxicons.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Icons\\IconMaterialdesign.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Icons\\IconFontawesome.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Maps\\Vectormap.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\routes\\allRoutes.js",["1735"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\routes\\middleware\\Authmiddleware.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\group\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\group\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\group\\reducer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\pages\\Customers\\AddCustomer\\index.js",["1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750"],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\customer\\actions.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\customer\\actionTypes.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\customer\\reducer.js",[],"C:\\Users\\dilshana\\Documents\\GitHub\\hazelgreen\\client\\src\\store\\customer\\saga.js",["1751"],{"ruleId":"1752","severity":1,"message":"1753","line":48,"column":6,"nodeType":"1754","endLine":48,"endColumn":8,"suggestions":"1755"},{"ruleId":"1756","severity":1,"message":"1757","line":44,"column":9,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":19},{"ruleId":"1760","severity":1,"message":"1761","line":18,"column":19,"nodeType":"1762","messageId":"1763","endLine":22,"endColumn":20,"fix":"1764"},{"ruleId":"1756","severity":1,"message":"1765","line":90,"column":12,"nodeType":"1758","messageId":"1759","endLine":90,"endColumn":26},{"ruleId":"1752","severity":1,"message":"1766","line":74,"column":6,"nodeType":"1754","endLine":74,"endColumn":8,"suggestions":"1767"},{"ruleId":"1768","severity":1,"message":"1769","line":77,"column":21,"nodeType":"1770","messageId":"1771","endLine":77,"endColumn":35,"fix":"1772"},{"ruleId":"1768","severity":1,"message":"1769","line":83,"column":23,"nodeType":"1770","messageId":"1771","endLine":83,"endColumn":42,"fix":"1773"},{"ruleId":"1752","severity":1,"message":"1766","line":91,"column":6,"nodeType":"1754","endLine":91,"endColumn":23,"suggestions":"1774"},{"ruleId":"1752","severity":1,"message":"1775","line":102,"column":6,"nodeType":"1754","endLine":102,"endColumn":23,"suggestions":"1776"},{"ruleId":"1752","severity":1,"message":"1775","line":111,"column":6,"nodeType":"1754","endLine":111,"endColumn":26,"suggestions":"1777"},{"ruleId":"1752","severity":1,"message":"1775","line":122,"column":6,"nodeType":"1754","endLine":122,"endColumn":26,"suggestions":"1778"},{"ruleId":"1779","severity":1,"message":"1780","line":159,"column":29,"nodeType":"1781","messageId":"1782","endLine":159,"endColumn":31},{"ruleId":"1752","severity":1,"message":"1783","line":200,"column":6,"nodeType":"1754","endLine":200,"endColumn":13,"suggestions":"1784"},{"ruleId":"1785","severity":1,"message":"1786","line":354,"column":33,"nodeType":"1787","messageId":"1788","endLine":354,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1789","line":12,"column":8,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1790","line":13,"column":8,"nodeType":"1758","messageId":"1759","endLine":13,"endColumn":22},{"ruleId":"1756","severity":1,"message":"1791","line":14,"column":8,"nodeType":"1758","messageId":"1759","endLine":14,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1792","line":15,"column":8,"nodeType":"1758","messageId":"1759","endLine":15,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1793","line":1,"column":32,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":42},{"ruleId":"1785","severity":1,"message":"1794","line":103,"column":25,"nodeType":"1787","messageId":"1788","endLine":103,"endColumn":27},{"ruleId":"1795","severity":1,"message":"1796","line":109,"column":9,"nodeType":"1797","messageId":"1788","endLine":109,"endColumn":26},{"ruleId":"1785","severity":1,"message":"1786","line":137,"column":22,"nodeType":"1787","messageId":"1788","endLine":137,"endColumn":24},{"ruleId":"1795","severity":1,"message":"1798","line":147,"column":9,"nodeType":"1797","messageId":"1788","endLine":147,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1793","line":1,"column":32,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":42},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1800","line":6,"column":36,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":42},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1806","line":25,"column":10,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1807","line":25,"column":18,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1819","line":42,"column":23,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":37},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1825"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1826"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1827"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1828"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1829"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1831","replacedBy":"1832"},{"ruleId":"1833","replacedBy":"1834"},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1835"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1836"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1837"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1838"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1839"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1840","line":9,"column":3,"nodeType":"1758","messageId":"1759","endLine":9,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1841","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1842","line":8,"column":3,"nodeType":"1758","messageId":"1759","endLine":8,"endColumn":12},{"ruleId":"1756","severity":1,"message":"1840","line":9,"column":3,"nodeType":"1758","messageId":"1759","endLine":9,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1800","line":6,"column":36,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":42},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1806","line":25,"column":10,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1807","line":25,"column":18,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1819","line":42,"column":23,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":37},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1843"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1844"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1845"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1846"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1847"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1848"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1849"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1850"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1851"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1852"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1853"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1854"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1855"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1856"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1857"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1800","line":6,"column":36,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":42},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1806","line":25,"column":10,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1807","line":25,"column":18,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1819","line":42,"column":23,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":37},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1858"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1859"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1860"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1861"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1862"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1800","line":6,"column":36,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":42},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1806","line":25,"column":10,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1807","line":25,"column":18,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1819","line":42,"column":23,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":37},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1863"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1864"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1865"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1866"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1867"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1868","line":1,"column":8,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1793","line":1,"column":32,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":42},{"ruleId":"1756","severity":1,"message":"1869","line":14,"column":22,"nodeType":"1758","messageId":"1759","endLine":14,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1793","line":1,"column":32,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":42},{"ruleId":"1756","severity":1,"message":"1870","line":1,"column":27,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":30},{"ruleId":"1756","severity":1,"message":"1871","line":1,"column":37,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1872","line":5,"column":10,"nodeType":"1758","messageId":"1759","endLine":5,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1873","line":5,"column":37,"nodeType":"1758","messageId":"1759","endLine":5,"endColumn":60},{"ruleId":"1756","severity":1,"message":"1874","line":10,"column":3,"nodeType":"1758","messageId":"1759","endLine":10,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1875","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1876","line":14,"column":7,"nodeType":"1758","messageId":"1759","endLine":14,"endColumn":22},{"ruleId":"1756","severity":1,"message":"1870","line":1,"column":27,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":30},{"ruleId":"1756","severity":1,"message":"1871","line":1,"column":37,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1877","line":5,"column":10,"nodeType":"1758","messageId":"1759","endLine":5,"endColumn":32},{"ruleId":"1756","severity":1,"message":"1878","line":5,"column":34,"nodeType":"1758","messageId":"1759","endLine":5,"endColumn":52},{"ruleId":"1756","severity":1,"message":"1879","line":10,"column":3,"nodeType":"1758","messageId":"1759","endLine":10,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1880","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1876","line":15,"column":7,"nodeType":"1758","messageId":"1759","endLine":15,"endColumn":22},{"ruleId":"1756","severity":1,"message":"1793","line":1,"column":32,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":42},{"ruleId":"1756","severity":1,"message":"1881","line":31,"column":11,"nodeType":"1758","messageId":"1759","endLine":31,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1870","line":1,"column":27,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":30},{"ruleId":"1756","severity":1,"message":"1871","line":1,"column":37,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1882","line":5,"column":10,"nodeType":"1758","messageId":"1759","endLine":5,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1883","line":5,"column":26,"nodeType":"1758","messageId":"1759","endLine":5,"endColumn":38},{"ruleId":"1756","severity":1,"message":"1884","line":10,"column":3,"nodeType":"1758","messageId":"1759","endLine":10,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1885","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1876","line":14,"column":7,"nodeType":"1758","messageId":"1759","endLine":14,"endColumn":22},{"ruleId":"1785","severity":1,"message":"1794","line":83,"column":25,"nodeType":"1787","messageId":"1788","endLine":83,"endColumn":27},{"ruleId":"1795","severity":1,"message":"1886","line":89,"column":9,"nodeType":"1797","messageId":"1788","endLine":89,"endColumn":21},{"ruleId":"1785","severity":1,"message":"1786","line":117,"column":22,"nodeType":"1787","messageId":"1788","endLine":117,"endColumn":24},{"ruleId":"1795","severity":1,"message":"1887","line":127,"column":9,"nodeType":"1797","messageId":"1788","endLine":127,"endColumn":21},{"ruleId":"1785","severity":1,"message":"1794","line":87,"column":25,"nodeType":"1787","messageId":"1788","endLine":87,"endColumn":27},{"ruleId":"1795","severity":1,"message":"1888","line":93,"column":9,"nodeType":"1797","messageId":"1788","endLine":93,"endColumn":25},{"ruleId":"1785","severity":1,"message":"1786","line":121,"column":22,"nodeType":"1787","messageId":"1788","endLine":121,"endColumn":24},{"ruleId":"1795","severity":1,"message":"1889","line":131,"column":9,"nodeType":"1797","messageId":"1788","endLine":131,"endColumn":25},{"ruleId":"1785","severity":1,"message":"1794","line":83,"column":25,"nodeType":"1787","messageId":"1788","endLine":83,"endColumn":27},{"ruleId":"1795","severity":1,"message":"1890","line":89,"column":9,"nodeType":"1797","messageId":"1788","endLine":89,"endColumn":21},{"ruleId":"1785","severity":1,"message":"1786","line":117,"column":22,"nodeType":"1787","messageId":"1788","endLine":117,"endColumn":24},{"ruleId":"1795","severity":1,"message":"1891","line":127,"column":9,"nodeType":"1797","messageId":"1788","endLine":127,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1892","line":14,"column":8,"nodeType":"1758","messageId":"1759","endLine":14,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1806","line":25,"column":10,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1807","line":25,"column":18,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1819","line":42,"column":23,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":37},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1893"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1894"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1895"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1896"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1897"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1806","line":25,"column":10,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1807","line":25,"column":18,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1819","line":42,"column":23,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":37},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1898"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1899"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1900"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1901"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1902"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1806","line":25,"column":10,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1807","line":25,"column":18,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1819","line":42,"column":23,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":37},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1903"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1904"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1905"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1906"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1907"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1807","line":25,"column":18,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1819","line":42,"column":23,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":37},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1908"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1909"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1910"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1911"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1912"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":13,"column":3,"nodeType":"1758","messageId":"1759","endLine":13,"endColumn":8},{"ruleId":"1756","severity":1,"message":"1913","line":14,"column":3,"nodeType":"1758","messageId":"1759","endLine":14,"endColumn":8},{"ruleId":"1756","severity":1,"message":"1802","line":17,"column":8,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":21,"column":3,"nodeType":"1758","messageId":"1759","endLine":21,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":22,"column":3,"nodeType":"1758","messageId":"1759","endLine":22,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":27,"column":3,"nodeType":"1758","messageId":"1759","endLine":27,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1914","line":43,"column":26,"nodeType":"1758","messageId":"1759","endLine":43,"endColumn":43},{"ruleId":"1756","severity":1,"message":"1808","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":46,"column":10,"nodeType":"1758","messageId":"1759","endLine":46,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":47,"column":10,"nodeType":"1758","messageId":"1759","endLine":47,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":47,"column":22,"nodeType":"1758","messageId":"1759","endLine":47,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":48,"column":10,"nodeType":"1758","messageId":"1759","endLine":48,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":49,"column":10,"nodeType":"1758","messageId":"1759","endLine":49,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":50,"column":10,"nodeType":"1758","messageId":"1759","endLine":50,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":50,"column":30,"nodeType":"1758","messageId":"1759","endLine":50,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":51,"column":10,"nodeType":"1758","messageId":"1759","endLine":51,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":52,"column":25,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":53,"column":10,"nodeType":"1758","messageId":"1759","endLine":53,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1820","line":55,"column":10,"nodeType":"1758","messageId":"1759","endLine":55,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":63,"column":5,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":74,"column":9,"nodeType":"1758","messageId":"1759","endLine":74,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":77,"column":9,"nodeType":"1758","messageId":"1759","endLine":77,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":80,"column":9,"nodeType":"1758","messageId":"1759","endLine":80,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":91,"column":6,"nodeType":"1754","endLine":91,"endColumn":8,"suggestions":"1915"},{"ruleId":"1752","severity":1,"message":"1766","line":97,"column":6,"nodeType":"1754","endLine":97,"endColumn":23,"suggestions":"1916"},{"ruleId":"1752","severity":1,"message":"1775","line":109,"column":6,"nodeType":"1754","endLine":109,"endColumn":23,"suggestions":"1917"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1918"},{"ruleId":"1752","severity":1,"message":"1775","line":129,"column":6,"nodeType":"1754","endLine":129,"endColumn":26,"suggestions":"1919"},{"ruleId":"1756","severity":1,"message":"1830","line":164,"column":9,"nodeType":"1758","messageId":"1759","endLine":164,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":166,"column":29,"nodeType":"1781","messageId":"1782","endLine":166,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":13,"column":3,"nodeType":"1758","messageId":"1759","endLine":13,"endColumn":8},{"ruleId":"1756","severity":1,"message":"1802","line":16,"column":8,"nodeType":"1758","messageId":"1759","endLine":16,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":20,"column":3,"nodeType":"1758","messageId":"1759","endLine":20,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":21,"column":3,"nodeType":"1758","messageId":"1759","endLine":21,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":26,"column":3,"nodeType":"1758","messageId":"1759","endLine":26,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":45,"column":10,"nodeType":"1758","messageId":"1759","endLine":45,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":45,"column":22,"nodeType":"1758","messageId":"1759","endLine":45,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":46,"column":10,"nodeType":"1758","messageId":"1759","endLine":46,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":47,"column":10,"nodeType":"1758","messageId":"1759","endLine":47,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":48,"column":10,"nodeType":"1758","messageId":"1759","endLine":48,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":48,"column":30,"nodeType":"1758","messageId":"1759","endLine":48,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":49,"column":10,"nodeType":"1758","messageId":"1759","endLine":49,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":50,"column":25,"nodeType":"1758","messageId":"1759","endLine":50,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":51,"column":10,"nodeType":"1758","messageId":"1759","endLine":51,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1820","line":53,"column":10,"nodeType":"1758","messageId":"1759","endLine":53,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":61,"column":5,"nodeType":"1758","messageId":"1759","endLine":61,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":72,"column":9,"nodeType":"1758","messageId":"1759","endLine":72,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":75,"column":9,"nodeType":"1758","messageId":"1759","endLine":75,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":78,"column":9,"nodeType":"1758","messageId":"1759","endLine":78,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":89,"column":6,"nodeType":"1754","endLine":89,"endColumn":8,"suggestions":"1920"},{"ruleId":"1752","severity":1,"message":"1766","line":95,"column":6,"nodeType":"1754","endLine":95,"endColumn":23,"suggestions":"1921"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":23,"suggestions":"1922"},{"ruleId":"1752","severity":1,"message":"1775","line":116,"column":6,"nodeType":"1754","endLine":116,"endColumn":26,"suggestions":"1923"},{"ruleId":"1752","severity":1,"message":"1775","line":127,"column":6,"nodeType":"1754","endLine":127,"endColumn":26,"suggestions":"1924"},{"ruleId":"1756","severity":1,"message":"1830","line":173,"column":9,"nodeType":"1758","messageId":"1759","endLine":173,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":175,"column":29,"nodeType":"1781","messageId":"1782","endLine":175,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1925"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1926"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1927"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1928"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1929"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1800","line":6,"column":36,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":42},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1806","line":25,"column":10,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1807","line":25,"column":18,"nodeType":"1758","messageId":"1759","endLine":25,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1819","line":42,"column":23,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":37},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1930"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1931"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1932"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1933"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1934"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1760","severity":1,"message":"1761","line":140,"column":23,"nodeType":"1762","messageId":"1763","endLine":144,"endColumn":24,"fix":"1935"},{"ruleId":"1756","severity":1,"message":"1936","line":31,"column":10,"nodeType":"1758","messageId":"1759","endLine":31,"endColumn":16},{"ruleId":"1752","severity":1,"message":"1937","line":30,"column":6,"nodeType":"1754","endLine":30,"endColumn":8,"suggestions":"1938"},{"ruleId":"1752","severity":1,"message":"1775","line":50,"column":6,"nodeType":"1754","endLine":50,"endColumn":21,"suggestions":"1939"},{"ruleId":"1760","severity":1,"message":"1761","line":168,"column":21,"nodeType":"1762","messageId":"1763","endLine":168,"endColumn":71,"fix":"1940"},{"ruleId":"1760","severity":1,"message":"1761","line":121,"column":21,"nodeType":"1762","messageId":"1763","endLine":121,"endColumn":71,"fix":"1941"},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1942"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1943"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1944"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1945"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1946"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1947"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1948"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1949"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1950"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1951"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1952"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1953"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1954"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1955"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1956"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1957"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1958"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1959"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1960"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1961"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1799","line":3,"column":8,"nodeType":"1758","messageId":"1759","endLine":3,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1962","line":8,"column":8,"nodeType":"1758","messageId":"1759","endLine":8,"endColumn":14},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1809","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1810","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":36,"column":22,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1813","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1814","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":39,"column":30,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1817","line":41,"column":25,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1820","line":44,"column":10,"nodeType":"1758","messageId":"1759","endLine":44,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1821","line":52,"column":5,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1822","line":63,"column":9,"nodeType":"1758","messageId":"1759","endLine":63,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":66,"column":9,"nodeType":"1758","messageId":"1759","endLine":66,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":69,"column":9,"nodeType":"1758","messageId":"1759","endLine":69,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":6,"nodeType":"1754","endLine":80,"endColumn":8,"suggestions":"1963"},{"ruleId":"1752","severity":1,"message":"1766","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"1964"},{"ruleId":"1752","severity":1,"message":"1775","line":98,"column":6,"nodeType":"1754","endLine":98,"endColumn":23,"suggestions":"1965"},{"ruleId":"1752","severity":1,"message":"1775","line":107,"column":6,"nodeType":"1754","endLine":107,"endColumn":26,"suggestions":"1966"},{"ruleId":"1752","severity":1,"message":"1775","line":118,"column":6,"nodeType":"1754","endLine":118,"endColumn":26,"suggestions":"1967"},{"ruleId":"1756","severity":1,"message":"1830","line":153,"column":9,"nodeType":"1758","messageId":"1759","endLine":153,"endColumn":17},{"ruleId":"1779","severity":1,"message":"1780","line":155,"column":29,"nodeType":"1781","messageId":"1782","endLine":155,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1968","line":5,"column":8,"nodeType":"1758","messageId":"1759","endLine":5,"endColumn":14},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1802","line":7,"column":8,"nodeType":"1758","messageId":"1759","endLine":7,"endColumn":18},{"ruleId":"1756","severity":1,"message":"1969","line":10,"column":3,"nodeType":"1758","messageId":"1759","endLine":10,"endColumn":11},{"ruleId":"1756","severity":1,"message":"1803","line":11,"column":3,"nodeType":"1758","messageId":"1759","endLine":11,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1804","line":12,"column":3,"nodeType":"1758","messageId":"1759","endLine":12,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1758","messageId":"1759","endLine":14,"endColumn":23},{"ruleId":"1756","severity":1,"message":"1971","line":15,"column":3,"nodeType":"1758","messageId":"1759","endLine":15,"endColumn":22},{"ruleId":"1756","severity":1,"message":"1972","line":16,"column":3,"nodeType":"1758","messageId":"1759","endLine":16,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1805","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":13},{"ruleId":"1756","severity":1,"message":"1808","line":34,"column":10,"nodeType":"1758","messageId":"1759","endLine":34,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1973","line":34,"column":29,"nodeType":"1758","messageId":"1759","endLine":34,"endColumn":49},{"ruleId":"1756","severity":1,"message":"1974","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1975","line":35,"column":27,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":45},{"ruleId":"1756","severity":1,"message":"1809","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1976","line":36,"column":26,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":43},{"ruleId":"1756","severity":1,"message":"1810","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1811","line":37,"column":22,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1812","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1977","line":38,"column":29,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":49},{"ruleId":"1756","severity":1,"message":"1813","line":39,"column":10,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1978","line":39,"column":29,"nodeType":"1758","messageId":"1759","endLine":39,"endColumn":49},{"ruleId":"1756","severity":1,"message":"1814","line":40,"column":10,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":28},{"ruleId":"1756","severity":1,"message":"1815","line":40,"column":30,"nodeType":"1758","messageId":"1759","endLine":40,"endColumn":51},{"ruleId":"1756","severity":1,"message":"1816","line":41,"column":10,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1979","line":41,"column":21,"nodeType":"1758","messageId":"1759","endLine":41,"endColumn":33},{"ruleId":"1756","severity":1,"message":"1817","line":42,"column":25,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":41},{"ruleId":"1756","severity":1,"message":"1818","line":43,"column":10,"nodeType":"1758","messageId":"1759","endLine":43,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1820","line":45,"column":10,"nodeType":"1758","messageId":"1759","endLine":45,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1980","line":45,"column":26,"nodeType":"1758","messageId":"1759","endLine":45,"endColumn":43},{"ruleId":"1756","severity":1,"message":"1821","line":53,"column":5,"nodeType":"1758","messageId":"1759","endLine":53,"endColumn":15},{"ruleId":"1756","severity":1,"message":"1981","line":54,"column":5,"nodeType":"1758","messageId":"1759","endLine":54,"endColumn":20},{"ruleId":"1756","severity":1,"message":"1982","line":55,"column":5,"nodeType":"1758","messageId":"1759","endLine":55,"endColumn":23},{"ruleId":"1756","severity":1,"message":"1983","line":56,"column":5,"nodeType":"1758","messageId":"1759","endLine":56,"endColumn":23},{"ruleId":"1756","severity":1,"message":"1984","line":57,"column":5,"nodeType":"1758","messageId":"1759","endLine":57,"endColumn":10},{"ruleId":"1756","severity":1,"message":"1985","line":60,"column":5,"nodeType":"1758","messageId":"1759","endLine":60,"endColumn":11},{"ruleId":"1756","severity":1,"message":"1822","line":67,"column":9,"nodeType":"1758","messageId":"1759","endLine":67,"endColumn":26},{"ruleId":"1756","severity":1,"message":"1823","line":70,"column":9,"nodeType":"1758","messageId":"1759","endLine":70,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1824","line":73,"column":9,"nodeType":"1758","messageId":"1759","endLine":73,"endColumn":24},{"ruleId":"1752","severity":1,"message":"1766","line":84,"column":8,"nodeType":"1754","endLine":84,"endColumn":10,"suggestions":"1986"},{"ruleId":"1756","severity":1,"message":"1830","line":127,"column":9,"nodeType":"1758","messageId":"1759","endLine":127,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1987","line":128,"column":5,"nodeType":"1758","messageId":"1759","endLine":128,"endColumn":15},{"ruleId":"1779","severity":1,"message":"1780","line":129,"column":29,"nodeType":"1781","messageId":"1782","endLine":129,"endColumn":31},{"ruleId":"1756","severity":1,"message":"1988","line":6,"column":44,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":49},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1962","line":8,"column":8,"nodeType":"1758","messageId":"1759","endLine":8,"endColumn":14},{"ruleId":"1756","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1758","messageId":"1759","endLine":14,"endColumn":23},{"ruleId":"1756","severity":1,"message":"1989","line":16,"column":3,"nodeType":"1758","messageId":"1759","endLine":16,"endColumn":29},{"ruleId":"1756","severity":1,"message":"1990","line":17,"column":3,"nodeType":"1758","messageId":"1759","endLine":17,"endColumn":22},{"ruleId":"1756","severity":1,"message":"1972","line":18,"column":3,"nodeType":"1758","messageId":"1759","endLine":18,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1991","line":21,"column":3,"nodeType":"1758","messageId":"1759","endLine":21,"endColumn":12},{"ruleId":"1756","severity":1,"message":"1808","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1974","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1809","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1816","line":43,"column":10,"nodeType":"1758","messageId":"1759","endLine":43,"endColumn":19},{"ruleId":"1752","severity":1,"message":"1766","line":80,"column":7,"nodeType":"1754","endLine":80,"endColumn":9,"suggestions":"1992"},{"ruleId":"1752","severity":1,"message":"1775","line":92,"column":6,"nodeType":"1754","endLine":92,"endColumn":28,"suggestions":"1993"},{"ruleId":"1752","severity":1,"message":"1775","line":101,"column":6,"nodeType":"1754","endLine":101,"endColumn":31,"suggestions":"1994"},{"ruleId":"1752","severity":1,"message":"1775","line":112,"column":6,"nodeType":"1754","endLine":112,"endColumn":31,"suggestions":"1995"},{"ruleId":"1756","severity":1,"message":"1996","line":128,"column":7,"nodeType":"1758","messageId":"1759","endLine":128,"endColumn":33},{"ruleId":"1779","severity":1,"message":"1780","line":136,"column":35,"nodeType":"1781","messageId":"1782","endLine":136,"endColumn":37},{"ruleId":"1756","severity":1,"message":"1997","line":278,"column":12,"nodeType":"1758","messageId":"1759","endLine":278,"endColumn":32},{"ruleId":"1756","severity":1,"message":"1998","line":296,"column":9,"nodeType":"1758","messageId":"1759","endLine":296,"endColumn":34},{"ruleId":"1785","severity":1,"message":"1786","line":297,"column":33,"nodeType":"1787","messageId":"1788","endLine":297,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1999","line":308,"column":7,"nodeType":"1758","messageId":"1759","endLine":308,"endColumn":17},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1962","line":8,"column":8,"nodeType":"1758","messageId":"1759","endLine":8,"endColumn":14},{"ruleId":"1756","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1758","messageId":"1759","endLine":14,"endColumn":23},{"ruleId":"1756","severity":1,"message":"1971","line":15,"column":3,"nodeType":"1758","messageId":"1759","endLine":15,"endColumn":22},{"ruleId":"1756","severity":1,"message":"1972","line":16,"column":3,"nodeType":"1758","messageId":"1759","endLine":16,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1808","line":31,"column":10,"nodeType":"1758","messageId":"1759","endLine":31,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1974","line":32,"column":10,"nodeType":"1758","messageId":"1759","endLine":32,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1809","line":33,"column":10,"nodeType":"1758","messageId":"1759","endLine":33,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1816","line":38,"column":10,"nodeType":"1758","messageId":"1759","endLine":38,"endColumn":19},{"ruleId":"1752","severity":1,"message":"1766","line":63,"column":6,"nodeType":"1754","endLine":63,"endColumn":8,"suggestions":"2000"},{"ruleId":"1752","severity":1,"message":"1775","line":79,"column":5,"nodeType":"1754","endLine":79,"endColumn":26,"suggestions":"2001"},{"ruleId":"1752","severity":1,"message":"1775","line":90,"column":6,"nodeType":"1754","endLine":90,"endColumn":30,"suggestions":"2002"},{"ruleId":"1752","severity":1,"message":"1775","line":101,"column":6,"nodeType":"1754","endLine":101,"endColumn":30,"suggestions":"2003"},{"ruleId":"1756","severity":1,"message":"2004","line":113,"column":7,"nodeType":"1758","messageId":"1759","endLine":113,"endColumn":32},{"ruleId":"1779","severity":1,"message":"1780","line":121,"column":33,"nodeType":"1781","messageId":"1782","endLine":121,"endColumn":35},{"ruleId":"1752","severity":1,"message":"2005","line":151,"column":6,"nodeType":"1754","endLine":151,"endColumn":17,"suggestions":"2006"},{"ruleId":"1756","severity":1,"message":"2007","line":186,"column":12,"nodeType":"1758","messageId":"1759","endLine":186,"endColumn":35},{"ruleId":"1756","severity":1,"message":"2008","line":195,"column":12,"nodeType":"1758","messageId":"1759","endLine":195,"endColumn":33},{"ruleId":"1756","severity":1,"message":"2009","line":203,"column":12,"nodeType":"1758","messageId":"1759","endLine":203,"endColumn":32},{"ruleId":"1756","severity":1,"message":"1997","line":213,"column":12,"nodeType":"1758","messageId":"1759","endLine":213,"endColumn":32},{"ruleId":"1756","severity":1,"message":"1998","line":227,"column":9,"nodeType":"1758","messageId":"1759","endLine":227,"endColumn":34},{"ruleId":"1785","severity":1,"message":"1786","line":228,"column":33,"nodeType":"1787","messageId":"1788","endLine":228,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1999","line":239,"column":7,"nodeType":"1758","messageId":"1759","endLine":239,"endColumn":17},{"ruleId":"1756","severity":1,"message":"2010","line":5,"column":18,"nodeType":"1758","messageId":"1759","endLine":5,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1988","line":6,"column":44,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":49},{"ruleId":"1756","severity":1,"message":"1801","line":6,"column":51,"nodeType":"1758","messageId":"1759","endLine":6,"endColumn":56},{"ruleId":"1756","severity":1,"message":"1962","line":8,"column":8,"nodeType":"1758","messageId":"1759","endLine":8,"endColumn":14},{"ruleId":"1756","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1758","messageId":"1759","endLine":14,"endColumn":23},{"ruleId":"1756","severity":1,"message":"1971","line":15,"column":3,"nodeType":"1758","messageId":"1759","endLine":15,"endColumn":22},{"ruleId":"1756","severity":1,"message":"1972","line":16,"column":3,"nodeType":"1758","messageId":"1759","endLine":16,"endColumn":21},{"ruleId":"1756","severity":1,"message":"2011","line":18,"column":3,"nodeType":"1758","messageId":"1759","endLine":18,"endColumn":24},{"ruleId":"1756","severity":1,"message":"2012","line":20,"column":3,"nodeType":"1758","messageId":"1759","endLine":20,"endColumn":15},{"ruleId":"1756","severity":1,"message":"2013","line":21,"column":3,"nodeType":"1758","messageId":"1759","endLine":21,"endColumn":22},{"ruleId":"1756","severity":1,"message":"1808","line":35,"column":10,"nodeType":"1758","messageId":"1759","endLine":35,"endColumn":27},{"ruleId":"1756","severity":1,"message":"1974","line":36,"column":10,"nodeType":"1758","messageId":"1759","endLine":36,"endColumn":25},{"ruleId":"1756","severity":1,"message":"1809","line":37,"column":10,"nodeType":"1758","messageId":"1759","endLine":37,"endColumn":24},{"ruleId":"1756","severity":1,"message":"1816","line":42,"column":10,"nodeType":"1758","messageId":"1759","endLine":42,"endColumn":19},{"ruleId":"1752","severity":1,"message":"1766","line":73,"column":6,"nodeType":"1754","endLine":73,"endColumn":8,"suggestions":"2014"},{"ruleId":"1752","severity":1,"message":"1775","line":86,"column":6,"nodeType":"1754","endLine":86,"endColumn":23,"suggestions":"2015"},{"ruleId":"1752","severity":1,"message":"1775","line":95,"column":6,"nodeType":"1754","endLine":95,"endColumn":26,"suggestions":"2016"},{"ruleId":"1752","severity":1,"message":"1775","line":106,"column":6,"nodeType":"1754","endLine":106,"endColumn":26,"suggestions":"2017"},{"ruleId":"1756","severity":1,"message":"2018","line":120,"column":7,"nodeType":"1758","messageId":"1759","endLine":120,"endColumn":28},{"ruleId":"1779","severity":1,"message":"1780","line":128,"column":29,"nodeType":"1781","messageId":"1782","endLine":128,"endColumn":31},{"ruleId":"1756","severity":1,"message":"2019","line":234,"column":12,"nodeType":"1758","messageId":"1759","endLine":234,"endColumn":39},{"ruleId":"1756","severity":1,"message":"2008","line":243,"column":12,"nodeType":"1758","messageId":"1759","endLine":243,"endColumn":33},{"ruleId":"1756","severity":1,"message":"2009","line":251,"column":12,"nodeType":"1758","messageId":"1759","endLine":251,"endColumn":32},{"ruleId":"1756","severity":1,"message":"1997","line":260,"column":12,"nodeType":"1758","messageId":"1759","endLine":260,"endColumn":32},{"ruleId":"1756","severity":1,"message":"1998","line":275,"column":9,"nodeType":"1758","messageId":"1759","endLine":275,"endColumn":34},{"ruleId":"1785","severity":1,"message":"1786","line":276,"column":33,"nodeType":"1787","messageId":"1788","endLine":276,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1999","line":287,"column":7,"nodeType":"1758","messageId":"1759","endLine":287,"endColumn":17},{"ruleId":"1756","severity":1,"message":"2020","line":110,"column":8,"nodeType":"1758","messageId":"1759","endLine":110,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1969","line":18,"column":3,"nodeType":"1758","messageId":"1759","endLine":18,"endColumn":11},{"ruleId":"1756","severity":1,"message":"1970","line":22,"column":3,"nodeType":"1758","messageId":"1759","endLine":22,"endColumn":23},{"ruleId":"1756","severity":1,"message":"1971","line":23,"column":3,"nodeType":"1758","messageId":"1759","endLine":23,"endColumn":22},{"ruleId":"1756","severity":1,"message":"1809","line":52,"column":10,"nodeType":"1758","messageId":"1759","endLine":52,"endColumn":24},{"ruleId":"1756","severity":1,"message":"2021","line":67,"column":5,"nodeType":"1758","messageId":"1759","endLine":67,"endColumn":10},{"ruleId":"1752","severity":1,"message":"1766","line":135,"column":6,"nodeType":"1754","endLine":135,"endColumn":8,"suggestions":"2022"},{"ruleId":"1752","severity":1,"message":"1766","line":141,"column":6,"nodeType":"1754","endLine":141,"endColumn":23,"suggestions":"2023"},{"ruleId":"1752","severity":1,"message":"1775","line":162,"column":6,"nodeType":"1754","endLine":162,"endColumn":23,"suggestions":"2024"},{"ruleId":"1752","severity":1,"message":"1775","line":171,"column":6,"nodeType":"1754","endLine":171,"endColumn":26,"suggestions":"2025"},{"ruleId":"1752","severity":1,"message":"1775","line":182,"column":6,"nodeType":"1754","endLine":182,"endColumn":26,"suggestions":"2026"},{"ruleId":"1779","severity":1,"message":"1780","line":280,"column":33,"nodeType":"1781","messageId":"1782","endLine":280,"endColumn":35},{"ruleId":"1752","severity":1,"message":"1783","line":324,"column":6,"nodeType":"1754","endLine":324,"endColumn":17,"suggestions":"2027"},{"ruleId":"1756","severity":1,"message":"2028","line":558,"column":9,"nodeType":"1758","messageId":"1759","endLine":558,"endColumn":29},{"ruleId":"1756","severity":1,"message":"1997","line":662,"column":12,"nodeType":"1758","messageId":"1759","endLine":662,"endColumn":32},{"ruleId":"1785","severity":1,"message":"1786","line":675,"column":33,"nodeType":"1787","messageId":"1788","endLine":675,"endColumn":35},{"ruleId":"1756","severity":1,"message":"1793","line":1,"column":32,"nodeType":"1758","messageId":"1759","endLine":1,"endColumn":42},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location'. Either include it or remove the dependency array.","ArrayExpression",["2029"],"no-unused-vars","'currentage' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"2030","text":"2031"},"'toggleMegaMenu' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["2032"],"no-useless-computed-key","Unnecessarily computed property ['addedby'] found.","Property","unnecessarilyComputedProperty",{"range":"2033","text":"2034"},{"range":"2035","text":"2034"},["2036"],"React Hook useEffect has a missing dependency: 'error.data.message'. Either include it or remove the dependency array.",["2037"],["2038"],["2039"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'preUpdateUser'. Either include it or remove the dependency array.",["2040"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TopUser' is defined but never used.","'RecentActivity' is defined but never used.","'SocialSource' is defined but never used.","'LatestTransaction' is defined but never used.","'takeLatest' is defined but never used.","Expected '!==' and instead saw '!='.","no-dupe-keys","Duplicate key 'deletingLocalbody'.","ObjectExpression","Duplicate key 'updatingLocalbody'.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SweetAlert' is defined but never used.","'addUser' is defined but never used.","'deleteUser' is defined but never used.","'updateUser' is defined but never used.","'AvForm' is defined but never used.","'AvField' is defined but never used.","'selectedPrivilage' is assigned a value but never used.","'selectedBranch' is assigned a value but never used.","'userObject' is assigned a value but never used.","'setUserObject' is assigned a value but never used.","'userIdTobeUpdated' is assigned a value but never used.","'userIdToBeDeleted' is assigned a value but never used.","'confirmDeleteAlert' is assigned a value but never used.","'setConfirmDeleteAlert' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setUsersForTable' is assigned a value but never used.","'accountType' is assigned a value but never used.","'setAccountType' is assigned a value but never used.","'passwordObject' is assigned a value but never used.","'addingUser' is assigned a value but never used.","'privilagesOptions' is assigned a value but never used.","'companiesOptions' is assigned a value but never used.","'branchesOptions' is assigned a value but never used.",["2041"],["2042"],["2043"],["2044"],["2045"],"'userData' is assigned a value but never used.","no-native-reassign",["2046"],"no-negated-in-lhs",["2047"],["2048"],["2049"],["2050"],["2051"],["2052"],"'CardSubtitle' is defined but never used.","'CardHeader' is defined but never used.","'CardTitle' is defined but never used.",["2053"],["2054"],["2055"],["2056"],["2057"],["2058"],["2059"],["2060"],["2061"],["2062"],["2063"],["2064"],["2065"],["2066"],["2067"],["2068"],["2069"],["2070"],["2071"],["2072"],["2073"],["2074"],["2075"],["2076"],["2077"],"'axios' is defined but never used.","'Link' is defined but never used.","'put' is defined but never used.","'call' is defined but never used.","'userForgetPasswordSuccess' is defined but never used.","'userForgetPasswordError' is defined but never used.","'postFakeForgetPwd' is defined but never used.","'postJwtForgetPwd' is defined but never used.","'fireBaseBackend' is assigned a value but never used.","'registerUserSuccessful' is defined but never used.","'registerUserFailed' is defined but never used.","'postFakeRegister' is defined but never used.","'postJwtRegister' is defined but never used.","'response' is assigned a value but never used.","'profileSuccess' is defined but never used.","'profileError' is defined but never used.","'postFakeProfile' is defined but never used.","'postJwtProfile' is defined but never used.","Duplicate key 'deletingWard'.","Duplicate key 'updatingWard'.","Duplicate key 'deletingDistrict'.","Duplicate key 'updatingDistrict'.","Duplicate key 'deletingUser'.","Duplicate key 'updatingUser'.","'LanguageDropdown' is defined but never used.",["2078"],["2079"],["2080"],["2081"],["2082"],["2083"],["2084"],["2085"],["2086"],["2087"],["2088"],["2089"],["2090"],["2091"],["2092"],["2093"],["2094"],["2095"],["2096"],["2097"],"'Table' is defined but never used.","'setUploadProgress' is assigned a value but never used.",["2098"],["2099"],["2100"],["2101"],["2102"],["2103"],["2104"],["2105"],["2106"],["2107"],["2108"],["2109"],["2110"],["2111"],["2112"],["2113"],["2114"],["2115"],["2116"],["2117"],{"range":"2118","text":"2031"},"'mobile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2119"],["2120"],{"range":"2121","text":"2031"},{"range":"2122","text":"2031"},["2123"],["2124"],["2125"],["2126"],["2127"],["2128"],["2129"],["2130"],["2131"],["2132"],["2133"],["2134"],["2135"],["2136"],["2137"],["2138"],["2139"],["2140"],["2141"],["2142"],"'Select' is defined but never used.",["2143"],["2144"],["2145"],["2146"],["2147"],"'toastr' is defined but never used.","'getUsers' is defined but never used.","'getPrivilagesOptions' is defined but never used.","'getCompaniesOptions' is defined but never used.","'getBranchesOptions' is defined but never used.","'setSelectedPrivilage' is assigned a value but never used.","'selectedCompany' is assigned a value but never used.","'setSelectedCompany' is assigned a value but never used.","'setSelectedBranch' is assigned a value but never used.","'setUserIdToBeUpdated' is assigned a value but never used.","'setUserIdToBeDeleted' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","'setPasswordObject' is assigned a value but never used.","'addUserResponse' is assigned a value but never used.","'deleteUserResponse' is assigned a value but never used.","'updateUserResponse' is assigned a value but never used.","'error' is assigned a value but never used.","'groups' is assigned a value but never used.",["2148"],"'groupsData' is assigned a value but never used.","'Label' is defined but never used.","'getCompaniesOptionsSuccess' is defined but never used.","'getDistrictsSuccess' is defined but never used.","'formreset' is defined but never used.",["2149"],["2150"],["2151"],["2152"],"'preUpdateLocalbodyPassword' is assigned a value but never used.","'handleChangePassword' is defined but never used.","'handleValidSubmitPassword' is assigned a value but never used.","'closeModal' is assigned a value but never used.",["2153"],["2154"],["2155"],["2156"],"'preUpdateDistrictPassword' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'districtsForTable' and 'preUpdateDistrict'. Either include them or remove the dependency array.",["2157"],"'handleSelectedPrivilage' is defined but never used.","'handleSelectedCompany' is defined but never used.","'handleSelectedBranch' is defined but never used.","'options' is defined but never used.","'getLocalbodiesSuccess' is defined but never used.","'getLocalbody' is defined but never used.","'getLocalbodySuccess' is defined but never used.",["2158"],["2159"],["2160"],["2161"],"'preUpdateWardPassword' is assigned a value but never used.","'handleSelectedlocalbodyname' is defined but never used.","'Customer' is defined but never used.","'users' is assigned a value but never used.",["2162"],["2163"],["2164"],["2165"],["2166"],["2167"],"'branchesOptionsGroup' is assigned a value but never used.",{"desc":"2168","fix":"2169"},[666,666]," rel=\"noreferrer\"",{"desc":"2170","fix":"2171"},[2342,2353],"'addedby'",[2549,2560],{"desc":"2172","fix":"2173"},{"desc":"2174","fix":"2175"},{"desc":"2176","fix":"2177"},{"desc":"2178","fix":"2179"},{"desc":"2180","fix":"2181"},{"desc":"2170","fix":"2182"},{"desc":"2172","fix":"2183"},{"desc":"2174","fix":"2184"},{"desc":"2176","fix":"2185"},{"desc":"2178","fix":"2186"},"no-global-assign","no-unsafe-negation",{"desc":"2170","fix":"2187"},{"desc":"2172","fix":"2188"},{"desc":"2174","fix":"2189"},{"desc":"2176","fix":"2190"},{"desc":"2178","fix":"2191"},{"desc":"2170","fix":"2192"},{"desc":"2172","fix":"2193"},{"desc":"2174","fix":"2194"},{"desc":"2176","fix":"2195"},{"desc":"2178","fix":"2196"},{"desc":"2170","fix":"2197"},{"desc":"2172","fix":"2198"},{"desc":"2174","fix":"2199"},{"desc":"2176","fix":"2200"},{"desc":"2178","fix":"2201"},{"desc":"2170","fix":"2202"},{"desc":"2172","fix":"2203"},{"desc":"2174","fix":"2204"},{"desc":"2176","fix":"2205"},{"desc":"2178","fix":"2206"},{"desc":"2170","fix":"2207"},{"desc":"2172","fix":"2208"},{"desc":"2174","fix":"2209"},{"desc":"2176","fix":"2210"},{"desc":"2178","fix":"2211"},{"desc":"2170","fix":"2212"},{"desc":"2172","fix":"2213"},{"desc":"2174","fix":"2214"},{"desc":"2176","fix":"2215"},{"desc":"2178","fix":"2216"},{"desc":"2170","fix":"2217"},{"desc":"2172","fix":"2218"},{"desc":"2174","fix":"2219"},{"desc":"2176","fix":"2220"},{"desc":"2178","fix":"2221"},{"desc":"2170","fix":"2222"},{"desc":"2172","fix":"2223"},{"desc":"2174","fix":"2224"},{"desc":"2176","fix":"2225"},{"desc":"2178","fix":"2226"},{"desc":"2170","fix":"2227"},{"desc":"2172","fix":"2228"},{"desc":"2174","fix":"2229"},{"desc":"2176","fix":"2230"},{"desc":"2178","fix":"2231"},{"desc":"2170","fix":"2232"},{"desc":"2172","fix":"2233"},{"desc":"2174","fix":"2234"},{"desc":"2176","fix":"2235"},{"desc":"2178","fix":"2236"},{"desc":"2170","fix":"2237"},{"desc":"2172","fix":"2238"},{"desc":"2174","fix":"2239"},{"desc":"2176","fix":"2240"},{"desc":"2178","fix":"2241"},{"desc":"2170","fix":"2242"},{"desc":"2172","fix":"2243"},{"desc":"2174","fix":"2244"},{"desc":"2176","fix":"2245"},{"desc":"2178","fix":"2246"},{"desc":"2170","fix":"2247"},{"desc":"2172","fix":"2248"},{"desc":"2174","fix":"2249"},{"desc":"2176","fix":"2250"},{"desc":"2178","fix":"2251"},{"desc":"2170","fix":"2252"},{"desc":"2172","fix":"2253"},{"desc":"2174","fix":"2254"},{"desc":"2176","fix":"2255"},{"desc":"2178","fix":"2256"},[5758,5758],{"desc":"2257","fix":"2258"},{"desc":"2259","fix":"2260"},[6681,6681],[4611,4611],{"desc":"2170","fix":"2261"},{"desc":"2172","fix":"2262"},{"desc":"2174","fix":"2263"},{"desc":"2176","fix":"2264"},{"desc":"2178","fix":"2265"},{"desc":"2170","fix":"2266"},{"desc":"2172","fix":"2267"},{"desc":"2174","fix":"2268"},{"desc":"2176","fix":"2269"},{"desc":"2178","fix":"2270"},{"desc":"2170","fix":"2271"},{"desc":"2172","fix":"2272"},{"desc":"2174","fix":"2273"},{"desc":"2176","fix":"2274"},{"desc":"2178","fix":"2275"},{"desc":"2170","fix":"2276"},{"desc":"2172","fix":"2277"},{"desc":"2174","fix":"2278"},{"desc":"2176","fix":"2279"},{"desc":"2178","fix":"2280"},{"desc":"2170","fix":"2281"},{"desc":"2172","fix":"2282"},{"desc":"2174","fix":"2283"},{"desc":"2176","fix":"2284"},{"desc":"2178","fix":"2285"},{"desc":"2170","fix":"2286"},{"desc":"2170","fix":"2287"},{"desc":"2288","fix":"2289"},{"desc":"2290","fix":"2291"},{"desc":"2292","fix":"2293"},{"desc":"2170","fix":"2294"},{"desc":"2295","fix":"2296"},{"desc":"2297","fix":"2298"},{"desc":"2299","fix":"2300"},{"desc":"2301","fix":"2302"},{"desc":"2170","fix":"2303"},{"desc":"2304","fix":"2305"},{"desc":"2306","fix":"2307"},{"desc":"2308","fix":"2309"},{"desc":"2170","fix":"2310"},{"desc":"2172","fix":"2311"},{"desc":"2174","fix":"2312"},{"desc":"2176","fix":"2313"},{"desc":"2178","fix":"2314"},{"desc":"2315","fix":"2316"},"Update the dependencies array to be: [props.location]",{"range":"2317","text":"2318"},"Update the dependencies array to be: [dispatch]",{"range":"2319","text":"2320"},"Update the dependencies array to be: [dispatch, selectedCompany]",{"range":"2321","text":"2322"},"Update the dependencies array to be: [addUserResponse, error.data.message]",{"range":"2323","text":"2324"},"Update the dependencies array to be: [deleteUserResponse, error.data.message]",{"range":"2325","text":"2326"},"Update the dependencies array to be: [error.data.message, updateUserResponse]",{"range":"2327","text":"2328"},"Update the dependencies array to be: [preUpdateUser, users]",{"range":"2329","text":"2330"},{"range":"2331","text":"2320"},{"range":"2332","text":"2322"},{"range":"2333","text":"2324"},{"range":"2334","text":"2326"},{"range":"2335","text":"2328"},{"range":"2336","text":"2320"},{"range":"2337","text":"2322"},{"range":"2338","text":"2324"},{"range":"2339","text":"2326"},{"range":"2340","text":"2328"},{"range":"2341","text":"2320"},{"range":"2342","text":"2322"},{"range":"2343","text":"2324"},{"range":"2344","text":"2326"},{"range":"2345","text":"2328"},{"range":"2346","text":"2320"},{"range":"2347","text":"2322"},{"range":"2348","text":"2324"},{"range":"2349","text":"2326"},{"range":"2350","text":"2328"},{"range":"2351","text":"2320"},{"range":"2352","text":"2322"},{"range":"2353","text":"2324"},{"range":"2354","text":"2326"},{"range":"2355","text":"2328"},{"range":"2356","text":"2320"},{"range":"2357","text":"2322"},{"range":"2358","text":"2324"},{"range":"2359","text":"2326"},{"range":"2360","text":"2328"},{"range":"2361","text":"2320"},{"range":"2362","text":"2322"},{"range":"2363","text":"2324"},{"range":"2364","text":"2326"},{"range":"2365","text":"2328"},{"range":"2366","text":"2320"},{"range":"2367","text":"2322"},{"range":"2368","text":"2324"},{"range":"2369","text":"2326"},{"range":"2370","text":"2328"},{"range":"2371","text":"2320"},{"range":"2372","text":"2322"},{"range":"2373","text":"2324"},{"range":"2374","text":"2326"},{"range":"2375","text":"2328"},{"range":"2376","text":"2320"},{"range":"2377","text":"2322"},{"range":"2378","text":"2324"},{"range":"2379","text":"2326"},{"range":"2380","text":"2328"},{"range":"2381","text":"2320"},{"range":"2382","text":"2322"},{"range":"2383","text":"2324"},{"range":"2384","text":"2326"},{"range":"2385","text":"2328"},{"range":"2386","text":"2320"},{"range":"2387","text":"2322"},{"range":"2388","text":"2324"},{"range":"2389","text":"2326"},{"range":"2390","text":"2328"},{"range":"2391","text":"2320"},{"range":"2392","text":"2322"},{"range":"2393","text":"2324"},{"range":"2394","text":"2326"},{"range":"2395","text":"2328"},{"range":"2396","text":"2320"},{"range":"2397","text":"2322"},{"range":"2398","text":"2324"},{"range":"2399","text":"2326"},{"range":"2400","text":"2328"},{"range":"2401","text":"2320"},{"range":"2402","text":"2322"},{"range":"2403","text":"2324"},{"range":"2404","text":"2326"},{"range":"2405","text":"2328"},"Update the dependencies array to be: [props]",{"range":"2406","text":"2407"},"Update the dependencies array to be: [error.data.message, loginResponse]",{"range":"2408","text":"2409"},{"range":"2410","text":"2320"},{"range":"2411","text":"2322"},{"range":"2412","text":"2324"},{"range":"2413","text":"2326"},{"range":"2414","text":"2328"},{"range":"2415","text":"2320"},{"range":"2416","text":"2322"},{"range":"2417","text":"2324"},{"range":"2418","text":"2326"},{"range":"2419","text":"2328"},{"range":"2420","text":"2320"},{"range":"2421","text":"2322"},{"range":"2422","text":"2324"},{"range":"2423","text":"2326"},{"range":"2424","text":"2328"},{"range":"2425","text":"2320"},{"range":"2426","text":"2322"},{"range":"2427","text":"2324"},{"range":"2428","text":"2326"},{"range":"2429","text":"2328"},{"range":"2430","text":"2320"},{"range":"2431","text":"2322"},{"range":"2432","text":"2324"},{"range":"2433","text":"2326"},{"range":"2434","text":"2328"},{"range":"2435","text":"2320"},{"range":"2436","text":"2320"},"Update the dependencies array to be: [addLocalbodyResponse, error.data.message]",{"range":"2437","text":"2438"},"Update the dependencies array to be: [deleteLocalbodyResponse, error.data.message]",{"range":"2439","text":"2440"},"Update the dependencies array to be: [error.data.message, updateLocalbodyResponse]",{"range":"2441","text":"2442"},{"range":"2443","text":"2320"},"Update the dependencies array to be: [addDistrictResponse, error.data.message]",{"range":"2444","text":"2445"},"Update the dependencies array to be: [deleteDistrictResponse, error.data.message]",{"range":"2446","text":"2447"},"Update the dependencies array to be: [error.data.message, updateDistrictResponse]",{"range":"2448","text":"2449"},"Update the dependencies array to be: [districts, districtsForTable, preUpdateDistrict]",{"range":"2450","text":"2451"},{"range":"2452","text":"2320"},"Update the dependencies array to be: [addWardResponse, error.data.message]",{"range":"2453","text":"2454"},"Update the dependencies array to be: [deleteWardResponse, error.data.message]",{"range":"2455","text":"2456"},"Update the dependencies array to be: [error.data.message, updateWardResponse]",{"range":"2457","text":"2458"},{"range":"2459","text":"2320"},{"range":"2460","text":"2322"},{"range":"2461","text":"2324"},{"range":"2462","text":"2326"},{"range":"2463","text":"2328"},"Update the dependencies array to be: [customers, preUpdateUser]",{"range":"2464","text":"2465"},[1351,1353],"[props.location]",[2293,2295],"[dispatch]",[2730,2747],"[dispatch, selectedCompany]",[3099,3116],"[addUserResponse, error.data.message]",[3417,3437],"[deleteUserResponse, error.data.message]",[3796,3816],"[error.data.message, updateUserResponse]",[5959,5966],"[preUpdateUser, users]",[2528,2530],[2666,2683],[3073,3090],[3391,3411],[3770,3790],[2523,2525],[2661,2678],[3068,3085],[3386,3406],[3765,3785],[2527,2529],[2665,2682],[3072,3089],[3390,3410],[3769,3789],[2532,2534],[2670,2687],[3077,3094],[3395,3415],[3774,3794],[2532,2534],[2670,2687],[3077,3094],[3395,3415],[3774,3794],[2533,2535],[2671,2688],[3078,3095],[3396,3416],[3775,3795],[2527,2529],[2665,2682],[3072,3089],[3390,3410],[3769,3789],[2533,2535],[2671,2688],[3078,3095],[3396,3416],[3775,3795],[2522,2524],[2660,2677],[3067,3084],[3385,3405],[3764,3784],[2528,2530],[2666,2683],[3073,3090],[3391,3411],[3770,3790],[2528,2530],[2666,2683],[3073,3090],[3391,3411],[3770,3790],[2630,2632],[2768,2785],[3175,3192],[3493,3513],[3872,3892],[2559,2561],[2697,2714],[3104,3121],[3422,3442],[3801,3821],[2530,2532],[2668,2685],[3075,3092],[3393,3413],[3772,3792],[2531,2533],[2669,2686],[3076,3093],[3394,3414],[3773,3793],[1010,1012],"[props]",[1536,1551],"[error.data.message, loginResponse]",[2523,2525],[2661,2678],[3068,3085],[3386,3406],[3765,3785],[2520,2522],[2658,2675],[3065,3082],[3383,3403],[3762,3782],[2521,2523],[2659,2676],[3066,3083],[3384,3404],[3763,3783],[2529,2531],[2667,2684],[3074,3091],[3392,3412],[3771,3791],[2526,2528],[2664,2681],[3071,3088],[3389,3409],[3768,3788],[2518,2520],[2642,2644],[3019,3041],"[addLocalbodyResponse, error.data.message]",[3367,3392],"[deleteLocalbodyResponse, error.data.message]",[3776,3801],"[error.data.message, updateLocalbodyResponse]",[1999,2001],[2387,2408],"[addDistrictResponse, error.data.message]",[2778,2802],"[deleteDistrictResponse, error.data.message]",[3181,3205],"[error.data.message, updateDistrictResponse]",[4580,4591],"[districts, districtsForTable, preUpdateDistrict]",[2325,2327],[2685,2702],"[addWardResponse, error.data.message]",[3003,3023],"[deleteWardResponse, error.data.message]",[3382,3402],"[error.data.message, updateWardResponse]",[4075,4077],[4213,4230],[4848,4865],[5166,5186],[5545,5565],[9360,9371],"[customers, preUpdateUser]"]