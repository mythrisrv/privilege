[{"E:\\hazelgreen\\client\\src\\index.js":"1","E:\\hazelgreen\\client\\src\\App.js":"2","E:\\hazelgreen\\client\\src\\serviceWorker.js":"3","E:\\hazelgreen\\client\\src\\store\\index.js":"4","E:\\hazelgreen\\client\\src\\routes\\allRoutes.js":"5","E:\\hazelgreen\\client\\src\\routes\\middleware\\Authmiddleware.js":"6","E:\\hazelgreen\\client\\src\\components\\NonAuthLayout.js":"7","E:\\hazelgreen\\client\\src\\components\\VerticalLayout\\index.js":"8","E:\\hazelgreen\\client\\src\\components\\HorizontalLayout\\index.js":"9","E:\\hazelgreen\\client\\src\\store\\reducers.js":"10","E:\\hazelgreen\\client\\src\\store\\sagas.js":"11","E:\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Footer.js":"12","E:\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Header.js":"13","E:\\hazelgreen\\client\\src\\pages\\Dashboard\\index.js":"14","E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-maintenance.js":"15","E:\\hazelgreen\\client\\src\\pages\\User\\index.js":"16","E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-faqs.js":"17","E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-comingsoon.js":"18","E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-pricing.js":"19","E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-404.js":"20","E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-timeline.js":"21","E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-500.js":"22","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiButtons.js":"23","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiCards.js":"24","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiCarousel.js":"25","E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-starter.js":"26","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiAlert.js":"27","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiColors.js":"28","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiGrid.js":"29","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiDropdown.js":"30","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiGeneral.js":"31","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiLightbox.js":"32","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiImages.js":"33","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiProgressbar.js":"34","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiModal.js":"35","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiTypography.js":"36","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiSweetAlert.js":"37","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiTabsAccordions.js":"38","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiRating.js":"39","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiVideo.js":"40","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiSessionTimeout.js":"41","E:\\hazelgreen\\client\\src\\pages\\Ui\\UiRangeSlider.js":"42","E:\\hazelgreen\\client\\src\\pages\\Ui\\ui-notifications.js":"43","E:\\hazelgreen\\client\\src\\pages\\Ui\\ui-image-cropper.js":"44","E:\\hazelgreen\\client\\src\\pages\\Forms\\BasicElements.js":"45","E:\\hazelgreen\\client\\src\\pages\\Forms\\FormAdvanced.js":"46","E:\\hazelgreen\\client\\src\\pages\\Forms\\FormEditors.js":"47","E:\\hazelgreen\\client\\src\\pages\\Forms\\FormLayouts.js":"48","E:\\hazelgreen\\client\\src\\pages\\Forms\\FormValidations.js":"49","E:\\hazelgreen\\client\\src\\pages\\Forms\\FormMask.js":"50","E:\\hazelgreen\\client\\src\\pages\\Forms\\FormUpload.js":"51","E:\\hazelgreen\\client\\src\\pages\\Forms\\FormRepeater.js":"52","E:\\hazelgreen\\client\\src\\pages\\Forms\\FormXeditable.js":"53","E:\\hazelgreen\\client\\src\\pages\\Forms\\FormWizard.js":"54","E:\\hazelgreen\\client\\src\\pages\\Tables\\DatatableTables.js":"55","E:\\hazelgreen\\client\\src\\pages\\Tables\\BasicTables.js":"56","E:\\hazelgreen\\client\\src\\pages\\Tables\\ResponsiveTables.js":"57","E:\\hazelgreen\\client\\src\\pages\\Charts\\Apexcharts.js":"58","E:\\hazelgreen\\client\\src\\pages\\Tables\\EditableTables.js":"59","E:\\hazelgreen\\client\\src\\pages\\Charts\\ChartjsChart.js":"60","E:\\hazelgreen\\client\\src\\pages\\Charts\\EChart.js":"61","E:\\hazelgreen\\client\\src\\pages\\Charts\\SparklineChart.js":"62","E:\\hazelgreen\\client\\src\\pages\\Charts\\charts-knob.js":"63","E:\\hazelgreen\\client\\src\\pages\\Icons\\IconUnicons.js":"64","E:\\hazelgreen\\client\\src\\pages\\Icons\\IconBoxicons.js":"65","E:\\hazelgreen\\client\\src\\pages\\Icons\\IconDripicons.js":"66","E:\\hazelgreen\\client\\src\\pages\\Maps\\MapsGoogle.js":"67","E:\\hazelgreen\\client\\src\\pages\\Authentication\\user-profile.js":"68","E:\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\auth-lock-screen.js":"69","E:\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Recoverpw.js":"70","E:\\hazelgreen\\client\\src\\pages\\Icons\\IconMaterialdesign.js":"71","E:\\hazelgreen\\client\\src\\pages\\Icons\\IconFontawesome.js":"72","E:\\hazelgreen\\client\\src\\components\\CommonForBoth\\Rightbar.js":"73","E:\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Navbar.js":"74","E:\\hazelgreen\\client\\src\\store\\actions.js":"75","E:\\hazelgreen\\client\\src\\pages\\MasterSettings\\Privilage\\index.js":"76","E:\\hazelgreen\\client\\src\\pages\\MasterSettings\\Company\\index.js":"77","E:\\hazelgreen\\client\\src\\components\\Common\\Breadcrumb.js":"78","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\knob\\knob.js":"79","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\bubblechart.js":"80","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\candlestickchart.js":"81","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\scatterchart.js":"82","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\piechart.js":"83","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\gaugechart.js":"84","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\doughnutchart.js":"85","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\linebarchart.js":"86","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\linechart.js":"87","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\radarchart.js":"88","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\polarchart.js":"89","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\piechart.js":"90","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\dountchart.js":"91","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\barchart.js":"92","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\linechart.js":"93","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\PieChart.js":"94","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\dountchart.js":"95","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\RadialChart.js":"96","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\barchart.js":"97","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\LineColumnArea.js":"98","E:\\hazelgreen\\client\\src\\store\\companies\\actions.js":"99","E:\\hazelgreen\\client\\src\\store\\branches\\actions.js":"100","E:\\hazelgreen\\client\\src\\helpers\\backend_helper.js":"101","E:\\hazelgreen\\client\\src\\store\\privilages\\actions.js":"102","E:\\hazelgreen\\client\\src\\store\\users\\actions.js":"103","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\ColumnWithDataLabels.js":"104","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\apaexlinecolumn.js":"105","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\SplineArea.js":"106","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\chartapex.js":"107","E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\dashedLine.js":"108","E:\\hazelgreen\\client\\src\\store\\layout\\actions.js":"109","E:\\hazelgreen\\client\\src\\store\\auth\\profile\\actions.js":"110","E:\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\actions.js":"111","E:\\hazelgreen\\client\\src\\store\\auth\\login\\actions.js":"112","E:\\hazelgreen\\client\\src\\store\\auth\\register\\actions.js":"113","E:\\hazelgreen\\client\\src\\helpers\\url_helper.js":"114","E:\\hazelgreen\\client\\src\\helpers\\api_helper.js":"115","E:\\hazelgreen\\client\\src\\store\\users\\actionTypes.js":"116","E:\\hazelgreen\\client\\src\\store\\privilages\\actionTypes.js":"117","E:\\hazelgreen\\client\\src\\store\\branches\\actionTypes.js":"118","E:\\hazelgreen\\client\\src\\store\\companies\\actionTypes.js":"119","E:\\hazelgreen\\client\\src\\store\\layout\\actionTypes.js":"120","E:\\hazelgreen\\client\\src\\store\\auth\\register\\actionTypes.js":"121","E:\\hazelgreen\\client\\src\\store\\auth\\login\\actionTypes.js":"122","E:\\hazelgreen\\client\\src\\store\\auth\\profile\\actionTypes.js":"123","E:\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\actionTypes.js":"124","E:\\hazelgreen\\client\\src\\helpers\\jwt-token-access\\accessToken.js":"125","E:\\hazelgreen\\client\\src\\pages\\Utility\\card-pricing.js":"126","E:\\hazelgreen\\client\\src\\pages\\Dashboard\\latest-transaction.js":"127","E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidedark.js":"128","E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slideindividual.js":"129","E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithfade.js":"130","E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithindicator.js":"131","E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithcaption.js":"132","E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slide.js":"133","E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithcontrol.js":"134","E:\\hazelgreen\\client\\src\\pages\\Dashboard\\socialsource.js":"135","E:\\hazelgreen\\client\\src\\pages\\Dashboard\\recent-activity.js":"136","E:\\hazelgreen\\client\\src\\pages\\Dashboard\\topuser.js":"137","E:\\hazelgreen\\client\\src\\pages\\Dashboard\\salesanalytics-chart.js":"138","E:\\hazelgreen\\client\\src\\pages\\Dashboard\\topselling-product.js":"139","E:\\hazelgreen\\client\\src\\pages\\Dashboard\\mini-widget.js":"140","E:\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.js":"141","E:\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\NotificationDropdown.js":"142","E:\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js":"143","E:\\hazelgreen\\client\\src\\store\\companies\\saga.js":"144","E:\\hazelgreen\\client\\src\\store\\branches\\saga.js":"145","E:\\hazelgreen\\client\\src\\store\\privilages\\saga.js":"146","E:\\hazelgreen\\client\\src\\store\\users\\saga.js":"147","E:\\hazelgreen\\client\\src\\store\\layout\\saga.js":"148","E:\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\saga.js":"149","E:\\hazelgreen\\client\\src\\store\\auth\\profile\\saga.js":"150","E:\\hazelgreen\\client\\src\\store\\auth\\login\\saga.js":"151","E:\\hazelgreen\\client\\src\\store\\auth\\register\\saga.js":"152","E:\\hazelgreen\\client\\src\\store\\branches\\reducer.js":"153","E:\\hazelgreen\\client\\src\\store\\companies\\reducer.js":"154","E:\\hazelgreen\\client\\src\\store\\users\\reducer.js":"155","E:\\hazelgreen\\client\\src\\store\\privilages\\reducer.js":"156","E:\\hazelgreen\\client\\src\\store\\auth\\profile\\reducer.js":"157","E:\\hazelgreen\\client\\src\\store\\auth\\register\\reducer.js":"158","E:\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\reducer.js":"159","E:\\hazelgreen\\client\\src\\store\\auth\\login\\reducer.js":"160","E:\\hazelgreen\\client\\src\\store\\layout\\reducer.js":"161","E:\\hazelgreen\\client\\src\\components\\VerticalLayout\\Footer.js":"162","E:\\hazelgreen\\client\\src\\components\\VerticalLayout\\Header.js":"163","E:\\hazelgreen\\client\\src\\components\\VerticalLayout\\Sidebar.js":"164","E:\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Register.js":"165","E:\\hazelgreen\\client\\src\\pages\\Authentication\\ForgetPassword.js":"166","E:\\hazelgreen\\client\\src\\pages\\Authentication\\Register.js":"167","E:\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Login.js":"168","E:\\hazelgreen\\client\\src\\pages\\Authentication\\Logout.js":"169","E:\\hazelgreen\\client\\src\\pages\\Authentication\\Login.js":"170","E:\\hazelgreen\\client\\src\\pages\\Maps\\MapsVector.js":"171","E:\\hazelgreen\\client\\src\\pages\\Maps\\MapsLeaflet.js":"172","E:\\hazelgreen\\client\\src\\common\\languages.js":"173","E:\\hazelgreen\\client\\src\\helpers\\firebase_helper.js":"174","E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\LayerGroup.js":"175","E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapLayerControl.js":"176","E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapMarkerCustomIcons.js":"177","E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapVectorLayers.js":"178","E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapWithPopup.js":"179","E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\SimpleMap.js":"180","E:\\hazelgreen\\client\\src\\pages\\Maps\\Vectormap.js":"181","E:\\hazelgreen\\client\\src\\components\\VerticalLayout\\SidebarContent.js":"182","E:\\hazelgreen\\client\\src\\i18n.js":"183","E:\\hazelgreen\\client\\src\\components\\MegaMenu\\MegaMenu.jsx":"184","E:\\hazelgreen\\client\\src\\pages\\Accounts\\AccountDetails\\index.js":"185","E:\\hazelgreen\\client\\src\\pages\\Accounts\\Account-Type\\index.js":"186","E:\\hazelgreen\\client\\src\\pages\\Accounts\\Chart\\index.js":"187","E:\\hazelgreen\\client\\src\\pages\\Accounts\\FundTransfer\\index.js":"188","E:\\hazelgreen\\client\\src\\pages\\Accounts\\CreditDebit\\index.js":"189","E:\\hazelgreen\\client\\src\\pages\\Accounts\\IncomeExpenses\\index.js":"190","E:\\hazelgreen\\client\\src\\pages\\Accounts\\TransactionLog\\index.js":"191"},{"size":473,"mtime":1633518610801,"results":"192","hashOfConfig":"193"},{"size":2303,"mtime":1633518610578,"results":"194","hashOfConfig":"193"},{"size":5456,"mtime":1633518610895,"results":"195","hashOfConfig":"193"},{"size":468,"mtime":1633518610902,"results":"196","hashOfConfig":"193"},{"size":9022,"mtime":1633608212175,"results":"197","hashOfConfig":"193"},{"size":808,"mtime":1633518610894,"results":"198","hashOfConfig":"193"},{"size":792,"mtime":1633518610796,"results":"199","hashOfConfig":"193"},{"size":3773,"mtime":1633607678114,"results":"200","hashOfConfig":"193"},{"size":3141,"mtime":1633518610796,"results":"201","hashOfConfig":"193"},{"size":693,"mtime":1633607678121,"results":"202","hashOfConfig":"193"},{"size":752,"mtime":1633607678123,"results":"203","hashOfConfig":"193"},{"size":588,"mtime":1633518610795,"results":"204","hashOfConfig":"193"},{"size":9543,"mtime":1633518610795,"results":"205","hashOfConfig":"193"},{"size":6161,"mtime":1633518610847,"results":"206","hashOfConfig":"193"},{"size":4614,"mtime":1633518610893,"results":"207","hashOfConfig":"193"},{"size":21137,"mtime":1633607678119,"results":"208","hashOfConfig":"193"},{"size":16197,"mtime":1633518610893,"results":"209","hashOfConfig":"193"},{"size":3676,"mtime":1633518610892,"results":"210","hashOfConfig":"193"},{"size":2680,"mtime":1633518610893,"results":"211","hashOfConfig":"193"},{"size":1527,"mtime":1633518610891,"results":"212","hashOfConfig":"193"},{"size":8776,"mtime":1633518610894,"results":"213","hashOfConfig":"193"},{"size":1523,"mtime":1633518610891,"results":"214","hashOfConfig":"193"},{"size":29928,"mtime":1633518610884,"results":"215","hashOfConfig":"193"},{"size":26488,"mtime":1633518610884,"results":"216","hashOfConfig":"193"},{"size":4660,"mtime":1633518610884,"results":"217","hashOfConfig":"193"},{"size":492,"mtime":1633518610893,"results":"218","hashOfConfig":"193"},{"size":14899,"mtime":1633518610883,"results":"219","hashOfConfig":"193"},{"size":10519,"mtime":1633518610884,"results":"220","hashOfConfig":"193"},{"size":5125,"mtime":1633518610885,"results":"221","hashOfConfig":"193"},{"size":30800,"mtime":1633518610885,"results":"222","hashOfConfig":"193"},{"size":26819,"mtime":1633518610885,"results":"223","hashOfConfig":"193"},{"size":16871,"mtime":1633518610886,"results":"224","hashOfConfig":"193"},{"size":6403,"mtime":1633518610885,"results":"225","hashOfConfig":"193"},{"size":8780,"mtime":1633518610886,"results":"226","hashOfConfig":"193"},{"size":36527,"mtime":1633518610886,"results":"227","hashOfConfig":"193"},{"size":12549,"mtime":1633518610888,"results":"228","hashOfConfig":"193"},{"size":21075,"mtime":1633518610887,"results":"229","hashOfConfig":"193"},{"size":54090,"mtime":1633518610888,"results":"230","hashOfConfig":"193"},{"size":14980,"mtime":1633518610887,"results":"231","hashOfConfig":"193"},{"size":3290,"mtime":1633518610888,"results":"232","hashOfConfig":"193"},{"size":4019,"mtime":1633518610887,"results":"233","hashOfConfig":"193"},{"size":8305,"mtime":1633518610887,"results":"234","hashOfConfig":"193"},{"size":25442,"mtime":1633518610889,"results":"235","hashOfConfig":"193"},{"size":33540,"mtime":1633518610889,"results":"236","hashOfConfig":"193"},{"size":30672,"mtime":1633518610857,"results":"237","hashOfConfig":"193"},{"size":39736,"mtime":1633518610858,"results":"238","hashOfConfig":"193"},{"size":1507,"mtime":1633518610858,"results":"239","hashOfConfig":"193"},{"size":14116,"mtime":1633518610858,"results":"240","hashOfConfig":"193"},{"size":26019,"mtime":1633518610860,"results":"241","hashOfConfig":"193"},{"size":6441,"mtime":1633518610859,"results":"242","hashOfConfig":"193"},{"size":4821,"mtime":1633518610860,"results":"243","hashOfConfig":"193"},{"size":13028,"mtime":1633518610859,"results":"244","hashOfConfig":"193"},{"size":6331,"mtime":1633518610864,"results":"245","hashOfConfig":"193"},{"size":35838,"mtime":1633518610860,"results":"246","hashOfConfig":"193"},{"size":13117,"mtime":1633518610880,"results":"247","hashOfConfig":"193"},{"size":24922,"mtime":1633518610880,"results":"248","hashOfConfig":"193"},{"size":24944,"mtime":1633518610880,"results":"249","hashOfConfig":"193"},{"size":3953,"mtime":1633518610820,"results":"250","hashOfConfig":"193"},{"size":2149,"mtime":1633518610880,"results":"251","hashOfConfig":"193"},{"size":2473,"mtime":1633518610820,"results":"252","hashOfConfig":"193"},{"size":3708,"mtime":1633518610821,"results":"253","hashOfConfig":"193"},{"size":7013,"mtime":1633518610843,"results":"254","hashOfConfig":"193"},{"size":7424,"mtime":1633518610844,"results":"255","hashOfConfig":"193"},{"size":208199,"mtime":1633518610871,"results":"256","hashOfConfig":"193"},{"size":221905,"mtime":1633518610865,"results":"257","hashOfConfig":"193"},{"size":34408,"mtime":1633518610866,"results":"258","hashOfConfig":"193"},{"size":7750,"mtime":1633518610876,"results":"259","hashOfConfig":"193"},{"size":4119,"mtime":1633518610818,"results":"260","hashOfConfig":"193"},{"size":5087,"mtime":1633518610819,"results":"261","hashOfConfig":"193"},{"size":3389,"mtime":1633518610819,"results":"262","hashOfConfig":"193"},{"size":367746,"mtime":1633518610870,"results":"263","hashOfConfig":"193"},{"size":576039,"mtime":1633518610868,"results":"264","hashOfConfig":"193"},{"size":13759,"mtime":1633518610794,"results":"265","hashOfConfig":"193"},{"size":27417,"mtime":1633518610795,"results":"266","hashOfConfig":"193"},{"size":389,"mtime":1633607678120,"results":"267","hashOfConfig":"193"},{"size":14633,"mtime":1633518610878,"results":"268","hashOfConfig":"193"},{"size":17386,"mtime":1633518610878,"results":"269","hashOfConfig":"193"},{"size":951,"mtime":1633518610793,"results":"270","hashOfConfig":"193"},{"size":11156,"mtime":1633518610812,"results":"271","hashOfConfig":"193"},{"size":5083,"mtime":1633518610810,"results":"272","hashOfConfig":"193"},{"size":1543,"mtime":1633518610810,"results":"273","hashOfConfig":"193"},{"size":1427,"mtime":1633518610811,"results":"274","hashOfConfig":"193"},{"size":1418,"mtime":1633518610811,"results":"275","hashOfConfig":"193"},{"size":1670,"mtime":1633518610810,"results":"276","hashOfConfig":"193"},{"size":1667,"mtime":1633518610810,"results":"277","hashOfConfig":"193"},{"size":2705,"mtime":1633518610811,"results":"278","hashOfConfig":"193"},{"size":1271,"mtime":1633518610811,"results":"279","hashOfConfig":"193"},{"size":1072,"mtime":1633518610809,"results":"280","hashOfConfig":"193"},{"size":502,"mtime":1633518610809,"results":"281","hashOfConfig":"193"},{"size":453,"mtime":1633518610809,"results":"282","hashOfConfig":"193"},{"size":467,"mtime":1633518610809,"results":"283","hashOfConfig":"193"},{"size":797,"mtime":1633518610808,"results":"284","hashOfConfig":"193"},{"size":1971,"mtime":1633518610809,"results":"285","hashOfConfig":"193"},{"size":847,"mtime":1633518610804,"results":"286","hashOfConfig":"193"},{"size":893,"mtime":1633518610806,"results":"287","hashOfConfig":"193"},{"size":1056,"mtime":1633518610804,"results":"288","hashOfConfig":"193"},{"size":914,"mtime":1633518610805,"results":"289","hashOfConfig":"193"},{"size":2244,"mtime":1633518610803,"results":"290","hashOfConfig":"193"},{"size":458,"mtime":1633518610901,"results":"291","hashOfConfig":"193"},{"size":479,"mtime":1633518610900,"results":"292","hashOfConfig":"193"},{"size":1644,"mtime":1633607678116,"results":"293","hashOfConfig":"193"},{"size":469,"mtime":1633518610905,"results":"294","hashOfConfig":"193"},{"size":1683,"mtime":1633518610906,"results":"295","hashOfConfig":"193"},{"size":2448,"mtime":1633518610803,"results":"296","hashOfConfig":"193"},{"size":1687,"mtime":1633518610804,"results":"297","hashOfConfig":"193"},{"size":1195,"mtime":1633518610804,"results":"298","hashOfConfig":"193"},{"size":1666,"mtime":1633518610805,"results":"299","hashOfConfig":"193"},{"size":1747,"mtime":1633518610806,"results":"300","hashOfConfig":"193"},{"size":1215,"mtime":1633518610903,"results":"301","hashOfConfig":"193"},{"size":522,"mtime":1633518610898,"results":"302","hashOfConfig":"193"},{"size":515,"mtime":1633518610896,"results":"303","hashOfConfig":"193"},{"size":1110,"mtime":1633518610897,"results":"304","hashOfConfig":"193"},{"size":465,"mtime":1633518610899,"results":"305","hashOfConfig":"193"},{"size":711,"mtime":1633607678117,"results":"306","hashOfConfig":"193"},{"size":1448,"mtime":1633518610799,"results":"307","hashOfConfig":"193"},{"size":748,"mtime":1633518610906,"results":"308","hashOfConfig":"193"},{"size":234,"mtime":1633518610905,"results":"309","hashOfConfig":"193"},{"size":222,"mtime":1633518610900,"results":"310","hashOfConfig":"193"},{"size":228,"mtime":1633518610901,"results":"311","hashOfConfig":"193"},{"size":567,"mtime":1633518610903,"results":"312","hashOfConfig":"193"},{"size":175,"mtime":1633518610899,"results":"313","hashOfConfig":"193"},{"size":439,"mtime":1633518610897,"results":"314","hashOfConfig":"193"},{"size":195,"mtime":1633518610897,"results":"315","hashOfConfig":"193"},{"size":178,"mtime":1633518610896,"results":"316","hashOfConfig":"193"},{"size":185,"mtime":1633518610800,"results":"317","hashOfConfig":"193"},{"size":1626,"mtime":1633518610890,"results":"318","hashOfConfig":"193"},{"size":12539,"mtime":1633518610848,"results":"319","hashOfConfig":"193"},{"size":3407,"mtime":1633518610881,"results":"320","hashOfConfig":"193"},{"size":2718,"mtime":1633518610881,"results":"321","hashOfConfig":"193"},{"size":2799,"mtime":1633518610883,"results":"322","hashOfConfig":"193"},{"size":2786,"mtime":1633518610883,"results":"323","hashOfConfig":"193"},{"size":3104,"mtime":1633518610882,"results":"324","hashOfConfig":"193"},{"size":2253,"mtime":1633518610881,"results":"325","hashOfConfig":"193"},{"size":2592,"mtime":1633518610882,"results":"326","hashOfConfig":"193"},{"size":4305,"mtime":1633518610850,"results":"327","hashOfConfig":"193"},{"size":3770,"mtime":1633518610849,"results":"328","hashOfConfig":"193"},{"size":8791,"mtime":1633518610852,"results":"329","hashOfConfig":"193"},{"size":4890,"mtime":1633518610849,"results":"330","hashOfConfig":"193"},{"size":2978,"mtime":1633518610851,"results":"331","hashOfConfig":"193"},{"size":1420,"mtime":1633518610848,"results":"332","hashOfConfig":"193"},{"size":3375,"mtime":1633518610794,"results":"333","hashOfConfig":"193"},{"size":6064,"mtime":1633518610794,"results":"334","hashOfConfig":"193"},{"size":2066,"mtime":1633518610794,"results":"335","hashOfConfig":"193"},{"size":674,"mtime":1633518610901,"results":"336","hashOfConfig":"193"},{"size":720,"mtime":1633518610900,"results":"337","hashOfConfig":"193"},{"size":694,"mtime":1633518610905,"results":"338","hashOfConfig":"193"},{"size":2259,"mtime":1633518610906,"results":"339","hashOfConfig":"193"},{"size":4999,"mtime":1633518610903,"results":"340","hashOfConfig":"193"},{"size":2084,"mtime":1633518610896,"results":"341","hashOfConfig":"193"},{"size":1568,"mtime":1633518610898,"results":"342","hashOfConfig":"193"},{"size":1629,"mtime":1633518610897,"results":"343","hashOfConfig":"193"},{"size":1630,"mtime":1633518610899,"results":"344","hashOfConfig":"193"},{"size":601,"mtime":1633518610900,"results":"345","hashOfConfig":"193"},{"size":553,"mtime":1633518610901,"results":"346","hashOfConfig":"193"},{"size":3311,"mtime":1633518610906,"results":"347","hashOfConfig":"193"},{"size":561,"mtime":1633518610905,"results":"348","hashOfConfig":"193"},{"size":677,"mtime":1633518610898,"results":"349","hashOfConfig":"193"},{"size":950,"mtime":1633518610899,"results":"350","hashOfConfig":"193"},{"size":771,"mtime":1633518610896,"results":"351","hashOfConfig":"193"},{"size":1324,"mtime":1633518610897,"results":"352","hashOfConfig":"193"},{"size":1700,"mtime":1633518610903,"results":"353","hashOfConfig":"193"},{"size":945,"mtime":1633518610797,"results":"354","hashOfConfig":"193"},{"size":11139,"mtime":1633518610797,"results":"355","hashOfConfig":"193"},{"size":2297,"mtime":1633518610797,"results":"356","hashOfConfig":"193"},{"size":5973,"mtime":1633518610819,"results":"357","hashOfConfig":"193"},{"size":6512,"mtime":1633518610817,"results":"358","hashOfConfig":"193"},{"size":7423,"mtime":1633518610818,"results":"359","hashOfConfig":"193"},{"size":5979,"mtime":1633518610819,"results":"360","hashOfConfig":"193"},{"size":576,"mtime":1633518610818,"results":"361","hashOfConfig":"193"},{"size":7287,"mtime":1633518610818,"results":"362","hashOfConfig":"193"},{"size":3054,"mtime":1633518610877,"results":"363","hashOfConfig":"193"},{"size":3286,"mtime":1633518610876,"results":"364","hashOfConfig":"193"},{"size":611,"mtime":1633518610793,"results":"365","hashOfConfig":"193"},{"size":5156,"mtime":1633518610799,"results":"366","hashOfConfig":"193"},{"size":1922,"mtime":1633518610874,"results":"367","hashOfConfig":"193"},{"size":2942,"mtime":1633518610875,"results":"368","hashOfConfig":"193"},{"size":1638,"mtime":1633518610875,"results":"369","hashOfConfig":"193"},{"size":2258,"mtime":1633518610875,"results":"370","hashOfConfig":"193"},{"size":1199,"mtime":1633518610875,"results":"371","hashOfConfig":"193"},{"size":1143,"mtime":1633518610876,"results":"372","hashOfConfig":"193"},{"size":1105,"mtime":1633518610877,"results":"373","hashOfConfig":"193"},{"size":22354,"mtime":1633608503531,"results":"374","hashOfConfig":"193"},{"size":1284,"mtime":1633518610800,"results":"375","hashOfConfig":"193"},{"size":886,"mtime":1633518610796,"results":"376","hashOfConfig":"193"},{"size":13120,"mtime":1633520873115,"results":"377","hashOfConfig":"193"},{"size":12421,"mtime":1633520569342,"results":"378","hashOfConfig":"193"},{"size":14262,"mtime":1633521914665,"results":"379","hashOfConfig":"193"},{"size":15276,"mtime":1633527702346,"results":"380","hashOfConfig":"193"},{"size":15166,"mtime":1633537815391,"results":"381","hashOfConfig":"193"},{"size":24050,"mtime":1633538324634,"results":"382","hashOfConfig":"193"},{"size":13069,"mtime":1633537854881,"results":"383","hashOfConfig":"193"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},"zws8nt",{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"386"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"386"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"386"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"386"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"386"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"386"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"386"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"386"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"386"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"386"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"386"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"386"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"386"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"386"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"386"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"386"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"386"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"386"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"386"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736","usedDeprecatedRules":"386"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745","usedDeprecatedRules":"386"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"386"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"386"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"386"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"386"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"386"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"386"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"386"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"386"},"E:\\hazelgreen\\client\\src\\index.js",[],["795","796"],"E:\\hazelgreen\\client\\src\\App.js",["797"],"import PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { Switch, Redirect, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Import Routes all\r\nimport { userRoutes, authRoutes } from \"./routes/allRoutes\";\r\n\r\n// Import all middleware\r\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\";\r\n\r\n// layouts Format\r\nimport VerticalLayout from \"./components/VerticalLayout/\";\r\nimport HorizontalLayout from \"./components/HorizontalLayout/\";\r\nimport NonAuthLayout from \"./components/NonAuthLayout\";\r\n\r\n// Import scss\r\nimport \"./assets/scss/theme.scss\";\r\nimport Cookies from \"universal-cookie\";\r\nconst cookies = new Cookies();\r\n\r\n// import fakeBackend from \"./helpers/AuthType/fakeBackend\";\r\n\r\n// Activating fake backend\r\n// fakeBackend()\r\n\r\nconst App = (props) => {\r\n  function getLayout() {\r\n    let layoutCls = VerticalLayout;\r\n\r\n    switch (props.layout.layoutType) {\r\n      case \"horizontal\":\r\n        layoutCls = HorizontalLayout;\r\n        break;\r\n      default:\r\n        layoutCls = VerticalLayout;\r\n        break;\r\n    }\r\n    return layoutCls;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (cookies.get(\"rememberMe\") === \"false\") {\r\n      localStorage.removeItem(\"authUser\");\r\n      <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />;\r\n    }\r\n  }, []);\r\n\r\n  const Layout = getLayout();\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <Switch>\r\n          {authRoutes.map((route, idx) => (\r\n            <Authmiddleware\r\n              path={route.path}\r\n              layout={NonAuthLayout}\r\n              component={route.component}\r\n              key={idx}\r\n              isAuthProtected={false}\r\n            />\r\n          ))}\r\n\r\n          {userRoutes.map((route, idx) => (\r\n            <Authmiddleware\r\n              path={route.path}\r\n              layout={Layout}\r\n              component={route.component}\r\n              key={idx}\r\n              isAuthProtected={true}\r\n              exact\r\n            />\r\n          ))}\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  layout: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    layout: state.Layout,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","E:\\hazelgreen\\client\\src\\serviceWorker.js",[],"E:\\hazelgreen\\client\\src\\store\\index.js",[],"E:\\hazelgreen\\client\\src\\routes\\allRoutes.js",[],"E:\\hazelgreen\\client\\src\\routes\\middleware\\Authmiddleware.js",[],"E:\\hazelgreen\\client\\src\\components\\NonAuthLayout.js",[],"E:\\hazelgreen\\client\\src\\components\\VerticalLayout\\index.js",[],"E:\\hazelgreen\\client\\src\\components\\HorizontalLayout\\index.js",["798"],"import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  changeLayout,\r\n  changeTopbarTheme,\r\n  changeLayoutWidth,\r\n} from \"../../store/actions\";\r\n\r\n// Other Layout related Component\r\nimport Navbar from \"./Navbar\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Rightbar from \"../CommonForBoth/Rightbar\";\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isMenuOpened: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.isPreloader === true) {\r\n      document.getElementById(\"preloader\").style.display = \"block\";\r\n      document.getElementById(\"status\").style.display = \"block\";\r\n\r\n      setTimeout(function () {\r\n        document.getElementById(\"preloader\").style.display = \"none\";\r\n        document.getElementById(\"status\").style.display = \"none\";\r\n      }, 2500);\r\n    } else {\r\n      document.getElementById(\"preloader\").style.display = \"none\";\r\n      document.getElementById(\"status\").style.display = \"none\";\r\n    }\r\n\r\n    // Scrollto 0,0\r\n    window.scrollTo(0, 0);\r\n\r\n    const title = this.props.location.pathname;\r\n    let currentage = title.charAt(1).toUpperCase() + title.slice(2);\r\n\r\n    // document.title =\r\n    //   currentage + \" | Cococa\"\r\n\r\n    this.props.changeLayout(\"horizontal\");\r\n    if (this.props.topbarTheme) {\r\n      this.props.changeTopbarTheme(this.props.topbarTheme);\r\n    }\r\n    if (this.props.layoutWidth) {\r\n      this.props.changeLayoutWidth(this.props.layoutWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the menu - mobile\r\n   */\r\n  openMenu = () => {\r\n    this.setState({ isMenuOpened: !this.state.isMenuOpened });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"preloader\">\r\n          <div id=\"status\">\r\n            <div className=\"spinner\">\r\n              <i className=\"uil-shutter-alt spin-icon\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"layout-wrapper\">\r\n          <header id=\"page-topbar\">\r\n            <Header\r\n              theme={this.props.topbarTheme}\r\n              isMenuOpened={this.state.isMenuOpened}\r\n              openLeftMenuCallBack={this.openMenu}\r\n            ></Header>\r\n            <Navbar menuOpen={this.state.isMenuOpened} />\r\n          </header>\r\n          <div className=\"main-content\">{this.props.children}</div>\r\n          <Footer />\r\n        </div>\r\n\r\n        {this.props.showRightSidebar ? <Rightbar /> : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  changeLayout: PropTypes.func,\r\n  changeLayoutWidth: PropTypes.func,\r\n  changeTopbarTheme: PropTypes.func,\r\n  children: PropTypes.object,\r\n  isPreloader: PropTypes.any,\r\n  layoutWidth: PropTypes.any,\r\n  location: PropTypes.object,\r\n  showRightSidebar: PropTypes.any,\r\n  topbarTheme: PropTypes.any,\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    ...state.Layout,\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, {\r\n  changeTopbarTheme,\r\n  changeLayout,\r\n  changeLayoutWidth,\r\n})(withRouter(Layout));\r\n","E:\\hazelgreen\\client\\src\\store\\reducers.js",[],"E:\\hazelgreen\\client\\src\\store\\sagas.js",[],"E:\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Footer.js",[],"E:\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Header.js",["799"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Redux Store\r\nimport { showRightSidebarAction, toggleLeftmenu } from \"../../store/actions\";\r\n// reactstrap\r\nimport { Row, Col, Dropdown, DropdownToggle, DropdownMenu } from \"reactstrap\";\r\n\r\n// Import menuDropdown\r\nimport LanguageDropdown from \"../CommonForBoth/TopbarDropdown/LanguageDropdown\";\r\nimport NotificationDropdown from \"../CommonForBoth/TopbarDropdown/NotificationDropdown\";\r\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\";\r\n\r\nimport logo from \"../../assets/images/logo-sm.png\";\r\nimport logoLight from \"../../assets/images/logo-light.png\";\r\nimport logoDark from \"../../assets/images/logo-dark.png\";\r\n\r\n// import images\r\nimport github from \"../../assets/images/brands/github.png\";\r\nimport bitbucket from \"../../assets/images/brands/bitbucket.png\";\r\nimport dribbble from \"../../assets/images/brands/dribbble.png\";\r\nimport dropbox from \"../../assets/images/brands/dropbox.png\";\r\nimport mail_chimp from \"../../assets/images/brands/mail_chimp.png\";\r\nimport slack from \"../../assets/images/brands/slack.png\";\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst Header = (props) => {\r\n  const [isSearch, setSearch] = useState(false);\r\n  const [socialDrp, setsocialDrp] = useState(false);\r\n\r\n  function toggleFullscreen() {\r\n    if (\r\n      !document.fullscreenElement &&\r\n      /* alternative standard method */ !document.mozFullScreenElement &&\r\n      !document.webkitFullscreenElement\r\n    ) {\r\n      // current working methods\r\n      if (document.documentElement.requestFullscreen) {\r\n        document.documentElement.requestFullscreen();\r\n      } else if (document.documentElement.mozRequestFullScreen) {\r\n        document.documentElement.mozRequestFullScreen();\r\n      } else if (document.documentElement.webkitRequestFullscreen) {\r\n        document.documentElement.webkitRequestFullscreen(\r\n          Element.ALLOW_KEYBOARD_INPUT\r\n        );\r\n      }\r\n    } else {\r\n      if (document.cancelFullScreen) {\r\n        document.cancelFullScreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.webkitCancelFullScreen) {\r\n        document.webkitCancelFullScreen();\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"navbar-header\">\r\n        <div className=\"d-flex\">\r\n          <div className=\"navbar-brand-box\">\r\n            <Link to=\"/\" className=\"logo logo-dark\">\r\n              <span className=\"logo-sm\">\r\n                <img src={logo} alt=\"\" height=\"22\" />\r\n              </span>\r\n              <span className=\"logo-lg\">\r\n                <img src={logoDark} alt=\"\" height=\"17\" />\r\n              </span>\r\n            </Link>\r\n\r\n            <Link to=\"/\" className=\"logo logo-light\">\r\n              <span className=\"logo-sm\">\r\n                <img src={logo} alt=\"\" height=\"22\" />\r\n              </span>\r\n              <span className=\"logo-lg\">\r\n                <img src={logoLight} alt=\"\" height=\"19\" />\r\n              </span>\r\n            </Link>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-sm px-3 font-size-16 d-lg-none header-item waves-effect waves-light\"\r\n            data-toggle=\"collapse\"\r\n            onClick={() => {\r\n              props.toggleLeftmenu(!props.leftMenu);\r\n            }}\r\n            data-target=\"#topnav-menu-content\"\r\n          >\r\n            <i className=\"fa fa-fw fa-bars\" />\r\n          </button>\r\n          <form className=\"app-search d-none d-lg-block\">\r\n            <div className=\"position-relative\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search...\"\r\n              />\r\n              <span className=\"uil-search\"></span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"d-flex\">\r\n          <div className=\"dropdown d-inline-block d-lg-none ms-2\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn header-item noti-icon waves-effect\"\r\n              id=\"page-header-search-dropdown\"\r\n              onClick={() => setSearch(!isSearch)}\r\n            >\r\n              <i className=\"uil-search\"></i>\r\n            </button>\r\n            <div\r\n              className={\r\n                isSearch\r\n                  ? \"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0 show\"\r\n                  : \"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\"\r\n              }\r\n              aria-labelledby=\"page-header-search-dropdown\"\r\n            >\r\n              <form className=\"p-3\">\r\n                <div className=\"form-group m-0\">\r\n                  <div className=\"input-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder={props.t(\"Search\") + \"...\"}\r\n                      aria-label=\"Recipient's username\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <button className=\"btn btn-primary\" type=\"submit\">\r\n                        <i className=\"mdi mdi-magnify\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <Dropdown\r\n            className=\"d-none d-lg-inline-block ms-1\"\r\n            isOpen={socialDrp}\r\n            toggle={() => {\r\n              setsocialDrp(!socialDrp);\r\n            }}\r\n          >\r\n            <DropdownToggle\r\n              className=\"btn header-item noti-icon waves-effect\"\r\n              caret\r\n              tag=\"button\"\r\n            >\r\n              <i className=\"bx bx-customize\" />\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"dropdown-menu-lg dropdown-menu-end\" right>\r\n              <div className=\"px-lg-2\">\r\n                <Row className=\"g-0\">\r\n                  <Col>\r\n                    <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                      <img src={github} alt=\"Github\" />\r\n                      <span>GitHub</span>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col>\r\n                    <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                      <img src={bitbucket} alt=\"bitbucket\" />\r\n                      <span>Bitbucket</span>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col>\r\n                    <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                      <img src={dribbble} alt=\"dribbble\" />\r\n                      <span>Dribbble</span>\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"g-0\">\r\n                  <Col>\r\n                    <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                      <img src={dropbox} alt=\"dropbox\" />\r\n                      <span>Dropbox</span>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col>\r\n                    <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                      <img src={mail_chimp} alt=\"mail_chimp\" />\r\n                      <span>Mail Chimp</span>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col>\r\n                    <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                      <img src={slack} alt=\"slack\" />\r\n                      <span>Slack</span>\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n\r\n          <div className=\"dropdown d-none d-lg-inline-block ms-1\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn header-item noti-icon waves-effect\"\r\n              onClick={() => {\r\n                toggleFullscreen();\r\n              }}\r\n              data-toggle=\"fullscreen\"\r\n            >\r\n              <i className=\"uil-minus-path\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <NotificationDropdown />\r\n          <div className=\"dropdown d-inline-block\">\r\n            <button\r\n              onClick={() => {\r\n                props.showRightSidebarAction(!props.showRightSidebar);\r\n              }}\r\n              type=\"button\"\r\n              className=\"btn header-item noti-icon right-bar-toggle waves-effect\"\r\n            >\r\n              <i className=\"uil-cog\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <ProfileMenu />\r\n          <Link to=\"/logout\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn header-item noti-icon right-bar-toggle waves-effect\"\r\n            >\r\n              <i\r\n                class=\"fas fa-power-off\"\r\n                style={{\r\n                  fontSize: \"1.2em\",\r\n                }}\r\n              ></i>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  leftMenu: PropTypes.any,\r\n  showRightSidebar: PropTypes.any,\r\n  showRightSidebarAction: PropTypes.func,\r\n  t: PropTypes.any,\r\n  toggleLeftmenu: PropTypes.func,\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  const { layoutType, showRightSidebar, leftMenu } = state.Layout;\r\n  return { layoutType, showRightSidebar, leftMenu };\r\n};\r\n\r\nexport default connect(mapStatetoProps, {\r\n  showRightSidebarAction,\r\n  toggleLeftmenu,\r\n})(withTranslation()(Header));\r\n","E:\\hazelgreen\\client\\src\\pages\\Dashboard\\index.js",["800","801","802","803"],"import React from \"react\";\r\nimport { Container, Row, Col, CardBody, Card } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\n\r\n//Import Components\r\nimport MiniWidget from \"./mini-widget\";\r\nimport SalesAnalyticsChart from \"./salesanalytics-chart\";\r\nimport TopProduct from \"./topselling-product\";\r\nimport TopUser from \"./topuser\";\r\nimport RecentActivity from \"./recent-activity\";\r\nimport SocialSource from \"./socialsource\";\r\nimport LatestTransaction from \"./latest-transaction\";\r\n\r\n//Import Image\r\nimport setupanalytics from \"../../assets/images/setup-analytics-amico.svg\";\r\n\r\nconst series1 = [\r\n  {\r\n    data: [25, 66, 41, 89, 63, 25, 44, 20, 36, 40, 54],\r\n  },\r\n];\r\n\r\nconst options1 = {\r\n  fill: {\r\n    colors: [\"#5b73e8\"],\r\n  },\r\n  chart: {\r\n    width: 70,\r\n    sparkline: {\r\n      enabled: !0,\r\n    },\r\n  },\r\n  plotOptions: {\r\n    bar: {\r\n      columnWidth: \"50%\",\r\n    },\r\n  },\r\n  labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\r\n  xaxis: {\r\n    crosshairs: {\r\n      width: 1,\r\n    },\r\n  },\r\n  tooltip: {\r\n    fixed: {\r\n      enabled: !1,\r\n    },\r\n    x: {\r\n      show: !1,\r\n    },\r\n    y: {\r\n      title: {\r\n        formatter: function (seriesName) {\r\n          return \"\";\r\n        },\r\n      },\r\n    },\r\n    marker: {\r\n      show: !1,\r\n    },\r\n  },\r\n};\r\n\r\nconst series2 = [70];\r\n\r\nconst options2 = {\r\n  fill: {\r\n    colors: [\"#34c38f\"],\r\n  },\r\n  chart: {\r\n    sparkline: {\r\n      enabled: !0,\r\n    },\r\n  },\r\n  dataLabels: {\r\n    enabled: !1,\r\n  },\r\n  plotOptions: {\r\n    radialBar: {\r\n      hollow: {\r\n        margin: 0,\r\n        size: \"60%\",\r\n      },\r\n      track: {\r\n        margin: 0,\r\n      },\r\n      dataLabels: {\r\n        show: !1,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst series3 = [55];\r\n\r\nconst options3 = {\r\n  fill: {\r\n    colors: [\"#5b73e8\"],\r\n  },\r\n  chart: {\r\n    sparkline: {\r\n      enabled: !0,\r\n    },\r\n  },\r\n  dataLabels: {\r\n    enabled: !1,\r\n  },\r\n  plotOptions: {\r\n    radialBar: {\r\n      hollow: {\r\n        margin: 0,\r\n        size: \"60%\",\r\n      },\r\n      track: {\r\n        margin: 0,\r\n      },\r\n      dataLabels: {\r\n        show: !1,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst series4 = [\r\n  {\r\n    data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54],\r\n  },\r\n];\r\n\r\nconst options4 = {\r\n  fill: {\r\n    colors: [\"#f1b44c\"],\r\n  },\r\n  chart: {\r\n    width: 70,\r\n    sparkline: {\r\n      enabled: !0,\r\n    },\r\n  },\r\n  plotOptions: {\r\n    bar: {\r\n      columnWidth: \"50%\",\r\n    },\r\n  },\r\n  labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\r\n  xaxis: {\r\n    crosshairs: {\r\n      width: 1,\r\n    },\r\n  },\r\n  tooltip: {\r\n    fixed: {\r\n      enabled: !1,\r\n    },\r\n    x: {\r\n      show: !1,\r\n    },\r\n    y: {\r\n      title: {\r\n        formatter: function (seriesName) {\r\n          return \"\";\r\n        },\r\n      },\r\n    },\r\n    marker: {\r\n      show: !1,\r\n    },\r\n  },\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const reports = [\r\n    {\r\n      id: 1,\r\n      icon: \"mdi mdi-arrow-up-bold\",\r\n      title: \"Total Revenue\",\r\n      value: 34152,\r\n      prefix: \"$\",\r\n      suffix: \"\",\r\n      badgeValue: \"2.65%\",\r\n      decimal: 0,\r\n      charttype: \"bar\",\r\n      chartheight: 40,\r\n      chartwidth: 70,\r\n      color: \"success\",\r\n      desc: \"since last week\",\r\n      series: series1,\r\n      options: options1,\r\n    },\r\n    {\r\n      id: 2,\r\n      icon: \"mdi mdi-arrow-down-bold\",\r\n      title: \"Orders\",\r\n      value: 5643,\r\n      decimal: 0,\r\n      charttype: \"radialBar\",\r\n      chartheight: 45,\r\n      chartwidth: 45,\r\n      prefix: \"\",\r\n      suffix: \"\",\r\n      badgeValue: \"0.82%\",\r\n      color: \"danger\",\r\n      desc: \"since last week\",\r\n      series: series2,\r\n      options: options2,\r\n    },\r\n    {\r\n      id: 3,\r\n      icon: \"mdi mdi-arrow-down-bold\",\r\n      title: \"Customers\",\r\n      value: 45254,\r\n      decimal: 0,\r\n      prefix: \"\",\r\n      suffix: \"\",\r\n      charttype: \"radialBar\",\r\n      chartheight: 45,\r\n      chartwidth: 45,\r\n      badgeValue: \"6.24%\",\r\n      color: \"danger\",\r\n      desc: \"since last week\",\r\n      series: series3,\r\n      options: options3,\r\n    },\r\n    {\r\n      id: 4,\r\n      icon: \"mdi mdi-arrow-up-bold\",\r\n      title: \"Growth\",\r\n      value: 12.58,\r\n      decimal: 2,\r\n      prefix: \"+\",\r\n      suffix: \"%\",\r\n      charttype: \"bar\",\r\n      chartheight: 40,\r\n      chartwidth: 70,\r\n      badgeValue: \"10.51%\",\r\n      color: \"success\",\r\n      desc: \"since last week\",\r\n      series: series4,\r\n      options: options4,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <Container fluid>\r\n          <Breadcrumbs title=\"Minible\" breadcrumbItem=\"Dashboard\" />\r\n          <Row>\r\n            <MiniWidget reports={reports} />\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xl={8}>\r\n              <SalesAnalyticsChart />\r\n            </Col>\r\n            <Col xl={4}>\r\n              <Card className=\"bg-primary\">\r\n                <CardBody>\r\n                  <Row className=\"align-items-center\">\r\n                    <Col sm={8}>\r\n                      <p className=\"text-white font-size-18\">\r\n                        Enhance your <b>Campaign</b> for better outreach{\" \"}\r\n                        <i className=\"mdi mdi-arrow-right\"></i>\r\n                      </p>\r\n                      <div className=\"mt-4\">\r\n                        <Link\r\n                          to=\"#\"\r\n                          className=\"btn btn-success waves-effect waves-light\"\r\n                        >\r\n                          Upgrade Account!\r\n                        </Link>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                      <div className=\"mt-4 mt-sm-0\">\r\n                        <img\r\n                          src={setupanalytics}\r\n                          className=\"img-fluid\"\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n              <TopProduct />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-maintenance.js",[],"E:\\hazelgreen\\client\\src\\pages\\User\\index.js",["804","805","806","807","808","809","810","811"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n} from \"../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\nimport \"./user.scss\";\r\n\r\nconst Users = (props) => {\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  let preUpdateUser = (item) => {\r\n    if (item.privilage) {\r\n      let privilage = {\r\n        label: item.privilage.name,\r\n        value: item.privilage._id,\r\n      };\r\n      handleSelectedPrivilage(privilage);\r\n    }\r\n    if (item.company) {\r\n      let company = {\r\n        label: item.company.name,\r\n        value: item.company._id,\r\n      };\r\n      handleSelectedCompany(company);\r\n    }\r\n    if (item.branch) {\r\n      let branch = {\r\n        label: item.branch.name,\r\n        value: item.branch._id,\r\n      };\r\n      handleSelectedBranch(branch);\r\n    }\r\n\r\n    setUserIdToBeUpdated(item._id);\r\n    setUserObject({ ...item, password: null });\r\n  };\r\n\r\n  let preUpdateUserPassword = (item) => {\r\n    setUserIdToBeUpdated(item._id);\r\n    setShowModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setUserIdToBeDeleted(item._id);\r\n              setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      item.id = index + 1;\r\n      item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      item.privilage1 = item.privilage && item.privilage.name;\r\n      item.company1 = item.company && item.company.name;\r\n      item.branch1 = item.branch && item.branch.name;\r\n      userData.push(item);\r\n    });\r\n    setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name1\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Username\",\r\n        field: \"username\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Mobile\",\r\n        field: \"mobile\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n      {\r\n        label: \"Privilage\",\r\n        field: \"privilage1\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Company\",\r\n        field: \"company1\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Branch\",\r\n        field: \"branch1\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  let privilagesOptionsData =\r\n    privilagesOptions &&\r\n    privilagesOptions.data &&\r\n    privilagesOptions.data.map((item) => {\r\n      return {\r\n        label: item.name,\r\n        value: item._id,\r\n      };\r\n    });\r\n\r\n  let companiesOptionsData =\r\n    companiesOptions &&\r\n    companiesOptions.data &&\r\n    companiesOptions.data.map((item) => {\r\n      return {\r\n        label: item.name,\r\n        value: item._id,\r\n      };\r\n    });\r\n\r\n  let branchesOptionsData =\r\n    branchesOptions &&\r\n    branchesOptions.data &&\r\n    branchesOptions.data.map((item) => {\r\n      return {\r\n        label: item.name,\r\n        value: item._id,\r\n      };\r\n    });\r\n\r\n  const privilagesOptionsGroup = [\r\n    {\r\n      options: privilagesOptionsData,\r\n    },\r\n  ];\r\n\r\n  const companiesOptionsGroup = [\r\n    {\r\n      options: companiesOptionsData,\r\n    },\r\n  ];\r\n\r\n  const branchesOptionsGroup = [\r\n    {\r\n      options: branchesOptionsData,\r\n    },\r\n  ];\r\n\r\n  function handleChangeUser(e) {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    setUserObject({ ...userObject, [name]: value });\r\n  }\r\n\r\n  function handleSelectedPrivilage(value) {\r\n    let newValue = {\r\n      name: value.label,\r\n      _id: value.value,\r\n    };\r\n    setSelectedPrivilage(value);\r\n    setUserObject({ ...userObject, privilage: newValue });\r\n  }\r\n\r\n  function handleSelectedCompany(value) {\r\n    let newValue = {\r\n      name: value.label,\r\n      _id: value.value,\r\n    };\r\n    setSelectedCompany(value);\r\n    setUserObject({ ...userObject, company: newValue });\r\n  }\r\n  function handleSelectedBranch(value) {\r\n    let newValue = {\r\n      name: value.label,\r\n      _id: value.value,\r\n    };\r\n    setSelectedBranch(value);\r\n    setUserObject({ ...userObject, branch: newValue });\r\n  }\r\n\r\n  function handleChangePassword(e) {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    setPasswordObject({ ...passwordObject, [name]: value });\r\n  }\r\n\r\n  const handleValidSubmit = (event, values) => {\r\n    userIdTobeUpdated\r\n      ? dispatch(updateUser(userObject))\r\n      : dispatch(addUser(userObject));\r\n  };\r\n\r\n  const handleValidSubmitPassword = (event, values) => {\r\n    if (passwordObject.password == passwordObject.confirmPassword) {\r\n      let item = {\r\n        _id: userIdTobeUpdated,\r\n        password: passwordObject.password,\r\n      };\r\n      dispatch(updateUser(item));\r\n    } else {\r\n      toastr.error(\"Passwords are not matching\");\r\n    }\r\n  };\r\n\r\n  let closeModal = () => {\r\n    setShowModal(false);\r\n    setUserIdToBeUpdated(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {confirmDeleteAlert ? (\r\n        <SweetAlert\r\n          title=\"\"\r\n          showCancel\r\n          confirmButtonText=\"Delete\"\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            dispatch(deleteUser(userIdToBeDeleted));\r\n            setConfirmDeleteAlert(false);\r\n          }}\r\n          onCancel={() => setConfirmDeleteAlert(false)}\r\n        >\r\n          Are you sure you want to delete it?\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      <Modal\r\n        isOpen={showModal}\r\n        toggle={() => {\r\n          closeModal();\r\n        }}\r\n        centered={true}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title mt-0\">Confirmation</h5>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              closeModal();\r\n            }}\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <AvForm\r\n          className=\"needs-validation\"\r\n          onValidSubmit={(e, v) => {\r\n            handleValidSubmitPassword(e, v);\r\n          }}\r\n        >\r\n          <div className=\"modal-body\">\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"validationCustom05\">Password</Label>\r\n                  <AvField\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    errorMessage=\" Please provide a valid password\"\r\n                    className=\"form-control\"\r\n                    validate={{ required: { value: true } }}\r\n                    id=\"validationCustom05\"\r\n                    value={passwordObject.password}\r\n                    onChange={handleChangePassword}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"validationCustom05\">Confirm Password</Label>\r\n                  <AvField\r\n                    name=\"confirmPassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    errorMessage=\" Please confirm the password\"\r\n                    className=\"form-control\"\r\n                    validate={{ required: { value: true } }}\r\n                    id=\"validationCustom05\"\r\n                    value={passwordObject.confirmPassword}\r\n                    onChange={handleChangePassword}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              className=\"btn btn-dark\"\r\n              style={{ marginRight: \"1rem\" }}\r\n              onClick={closeModal}\r\n            >\r\n              Close\r\n            </button>\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Confirm\r\n            </button>\r\n          </div>\r\n        </AvForm>\r\n      </Modal>\r\n\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Manage Users\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    onValidSubmit={(e, v) => {\r\n                      handleValidSubmit(e, v);\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom01\">First name</Label>\r\n                          <AvField\r\n                            name=\"firstName\"\r\n                            placeholder=\"First name\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter First Name\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom01\"\r\n                            value={userObject.firstName}\r\n                            onChange={handleChangeUser}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom02\">Last name</Label>\r\n                          <AvField\r\n                            name=\"lastName\"\r\n                            placeholder=\"Last name\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Last name\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom02\"\r\n                            value={userObject.lastName}\r\n                            onChange={handleChangeUser}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom03\">Email</Label>\r\n                          <AvField\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                            errorMessage=\"Enter valid Email\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom03\"\r\n                            value={userObject.email}\r\n                            onChange={handleChangeUser}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom03\">Username</Label>\r\n                          <AvField\r\n                            name=\"username\"\r\n                            placeholder=\"Username\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter valid Username\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom03\"\r\n                            value={userObject.username}\r\n                            onChange={handleChangeUser}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom04\">Mobile</Label>\r\n                          <AvField\r\n                            name=\"mobile\"\r\n                            placeholder=\"Mobile\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Please provide a valid mobile.\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom04\"\r\n                            value={userObject.mobile}\r\n                            onChange={handleChangeUser}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <div className=\"mb-3\">\r\n                          <Label>Prililage</Label>\r\n                          <Select\r\n                            name=\"privilage\"\r\n                            value={selectedPrivilage}\r\n                            onChange={(value) => {\r\n                              handleSelectedPrivilage(value);\r\n                            }}\r\n                            options={privilagesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <div className=\"mb-3\">\r\n                          <Label>Company</Label>\r\n                          <Select\r\n                            name=\"company\"\r\n                            value={selectedCompany}\r\n                            onChange={(value) => {\r\n                              handleSelectedCompany(value);\r\n                            }}\r\n                            options={companiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <div className=\"mb-3\">\r\n                          <Label>Branch</Label>\r\n                          <Select\r\n                            name=\"branch\"\r\n                            value={selectedBranch}\r\n                            onChange={(value) => {\r\n                              handleSelectedBranch(value);\r\n                            }}\r\n                            options={branchesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      {userIdTobeUpdated ? null : (\r\n                        <Col md=\"3\">\r\n                          <div className=\"mb-3\">\r\n                            <Label htmlFor=\"validationCustom05\">Password</Label>\r\n                            <AvField\r\n                              name=\"password\"\r\n                              placeholder=\"Password\"\r\n                              type=\"password\"\r\n                              errorMessage=\" Please provide a valid password\"\r\n                              className=\"form-control\"\r\n                              validate={{ required: { value: true } }}\r\n                              id=\"validationCustom05\"\r\n                              value={userObject.password}\r\n                              onChange={handleChangeUser}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n                    </Row>\r\n\r\n                    {userIdTobeUpdated ? (\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        disabled={addingUser ? true : false}\r\n                      >\r\n                        {addingUser ? \"Updating\" : \"Update\"}\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        disabled={addingUser ? true : false}\r\n                      >\r\n                        {addingUser ? \"Adding\" : \"Submit\"}\r\n                      </Button>\r\n                    )}\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(Users));\r\n\r\nUsers.propTypes = {\r\n  error: PropTypes.any,\r\n  users: PropTypes.array,\r\n};\r\n","E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-faqs.js",[],"E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-comingsoon.js",[],"E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-pricing.js",[],"E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-404.js",[],"E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-timeline.js",[],"E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-500.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiButtons.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiCards.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiCarousel.js",[],"E:\\hazelgreen\\client\\src\\pages\\Utility\\pages-starter.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiAlert.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiColors.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiGrid.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiDropdown.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiGeneral.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiLightbox.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiImages.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiProgressbar.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiModal.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiTypography.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiSweetAlert.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiTabsAccordions.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiRating.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiVideo.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiSessionTimeout.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\UiRangeSlider.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\ui-notifications.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\ui-image-cropper.js",[],"E:\\hazelgreen\\client\\src\\pages\\Forms\\BasicElements.js",[],"E:\\hazelgreen\\client\\src\\pages\\Forms\\FormAdvanced.js",[],"E:\\hazelgreen\\client\\src\\pages\\Forms\\FormEditors.js",[],"E:\\hazelgreen\\client\\src\\pages\\Forms\\FormLayouts.js",[],"E:\\hazelgreen\\client\\src\\pages\\Forms\\FormValidations.js",[],"E:\\hazelgreen\\client\\src\\pages\\Forms\\FormMask.js",[],"E:\\hazelgreen\\client\\src\\pages\\Forms\\FormUpload.js",[],"E:\\hazelgreen\\client\\src\\pages\\Forms\\FormRepeater.js",[],"E:\\hazelgreen\\client\\src\\pages\\Forms\\FormXeditable.js",[],"E:\\hazelgreen\\client\\src\\pages\\Forms\\FormWizard.js",[],"E:\\hazelgreen\\client\\src\\pages\\Tables\\DatatableTables.js",[],"E:\\hazelgreen\\client\\src\\pages\\Tables\\BasicTables.js",[],"E:\\hazelgreen\\client\\src\\pages\\Tables\\ResponsiveTables.js",[],"E:\\hazelgreen\\client\\src\\pages\\Charts\\Apexcharts.js",[],"E:\\hazelgreen\\client\\src\\pages\\Tables\\EditableTables.js",[],"E:\\hazelgreen\\client\\src\\pages\\Charts\\ChartjsChart.js",[],"E:\\hazelgreen\\client\\src\\pages\\Charts\\EChart.js",[],"E:\\hazelgreen\\client\\src\\pages\\Charts\\SparklineChart.js",[],"E:\\hazelgreen\\client\\src\\pages\\Charts\\charts-knob.js",[],"E:\\hazelgreen\\client\\src\\pages\\Icons\\IconUnicons.js",[],"E:\\hazelgreen\\client\\src\\pages\\Icons\\IconBoxicons.js",[],"E:\\hazelgreen\\client\\src\\pages\\Icons\\IconDripicons.js",[],"E:\\hazelgreen\\client\\src\\pages\\Maps\\MapsGoogle.js",[],"E:\\hazelgreen\\client\\src\\pages\\Authentication\\user-profile.js",["812"],"import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Alert,\r\n  CardBody,\r\n  Media,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\n// availity-reactstrap-validation\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\r\n\r\nimport avatar from \"../../assets/images/users/avatar-1.jpg\";\r\n// actions\r\nimport { editProfile, resetProfileFlag } from \"../../store/actions\";\r\n\r\nconst UserProfile = (props) => {\r\n  const [email, setemail] = useState(\"\");\r\n  const [name, setname] = useState(\"\");\r\n  const [mobile, setmobile] = useState(\"\");\r\n\r\n  const [userId, setUserId] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authUser\")) {\r\n      const obj = JSON.parse(localStorage.getItem(\"authUser\"));\r\n\r\n      setname(obj.username);\r\n      setemail(obj.email);\r\n      setmobile(obj.mobile);\r\n      setUserId(obj.userId);\r\n\r\n      setTimeout(() => {\r\n        props.resetProfileFlag();\r\n      }, 3000);\r\n    }\r\n  }, [props.success, props]);\r\n\r\n  function handleValidSubmit(event, values) {\r\n    props.editProfile(values);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <Container fluid>\r\n          {/* Render Breadcrumb */}\r\n          <Breadcrumb title=\"Minible\" breadcrumbItem=\"Profile\" />\r\n\r\n          <Row>\r\n            <Col lg=\"12\">\r\n              {props.error && props.error ? (\r\n                <Alert color=\"danger\">{props.error}</Alert>\r\n              ) : null}\r\n              {props.success && props.success ? (\r\n                <Alert color=\"success\">{props.success}</Alert>\r\n              ) : null}\r\n\r\n              <Card>\r\n                <CardBody>\r\n                  <Media className=\"d-flex\">\r\n                    <div className=\"ms-3\">\r\n                      <img\r\n                        src={avatar}\r\n                        alt=\"\"\r\n                        className=\"avatar-md rounded-circle img-thumbnail\"\r\n                      />\r\n                    </div>\r\n                    <Media body className=\"flex-1 align-self-center\">\r\n                      <div className=\"text-muted\">\r\n                        <h5>{name}</h5>\r\n                        <p className=\"mb-1\">{email}</p>\r\n                        <p className=\"mb-0\">Id no: #{userId}</p>\r\n                      </div>\r\n                    </Media>\r\n                  </Media>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <h4 className=\"card-title mb-4\">Change User Name</h4>\r\n\r\n          <Card>\r\n            <CardBody>\r\n              <AvForm\r\n                className=\"form-horizontal\"\r\n                onValidSubmit={(e, v) => {\r\n                  handleValidSubmit(e, v);\r\n                }}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <AvField\r\n                    name=\"username\"\r\n                    label=\"User Name\"\r\n                    value={name}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter User Name\"\r\n                    type=\"text\"\r\n                    required\r\n                  />\r\n                  <AvField name=\"userId\" value={userId} type=\"hidden\" />\r\n                </div>\r\n                <div className=\"text-center mt-4\">\r\n                  <Button type=\"submit\" color=\"danger\">\r\n                    Update User Name\r\n                  </Button>\r\n                </div>\r\n              </AvForm>\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nUserProfile.propTypes = {\r\n  editProfile: PropTypes.func,\r\n  error: PropTypes.any,\r\n  success: PropTypes.any,\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  const { error, success } = state.Profile;\r\n  return { error, success };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStatetoProps, { editProfile, resetProfileFlag })(UserProfile)\r\n);\r\n","E:\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\auth-lock-screen.js",["813"],"import React, { useEffect, useState } from \"react\";\r\n\r\n// availity-reactstrap-validation\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\nimport { Container, Row, Col, CardBody, Card, Button } from \"reactstrap\";\r\n\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\n// import images\r\nimport logo from \"../../assets/images/logo-dark.png\";\r\nimport logolight from \"../../assets/images/logo-light.png\";\r\nimport avatar4 from \"../../assets/images/users/avatar-4.jpg\";\r\n\r\nconst LockScreen = (props) => {\r\n  const [username, setusername] = useState(\"Admin\");\r\n\r\n  useEffect(() => {\r\n    document.body.className = \"authentication-bg\";\r\n    // remove classname when component will unmount\r\n    return function cleanup() {\r\n      document.body.className = \"\";\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authUser\")) {\r\n      const obj = JSON.parse(localStorage.getItem(\"authUser\"));\r\n      setusername(obj.firstName);\r\n    }\r\n  }, [props.success]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"account-pages-container\">\r\n        <div className=\"home-btn d-none d-sm-block\">\r\n          <Link to=\"/\" className=\"text-dark\">\r\n            <i className=\"fas fa-home h2\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"account-pages my-5 pt-sm-5\">\r\n          <Container>\r\n            <Row className=\"justify-content-center\">\r\n              <Col md={8} lg={6} xl={5}>\r\n                <Card>\r\n                  <CardBody className=\"p-4\">\r\n                    <div className=\"row\">\r\n                      <Link to=\"/\" className=\"mb-5 d-block auth-logo\">\r\n                        <img\r\n                          src={logo}\r\n                          alt=\"\"\r\n                          height=\"22\"\r\n                          className=\"logo logo-dark\"\r\n                        />\r\n                        <img\r\n                          src={logolight}\r\n                          alt=\"\"\r\n                          height=\"22\"\r\n                          className=\"logo logo-light\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"text-center mt-2\">\r\n                      <h5 className=\"text-primary\">Lock screen</h5>\r\n                      <p className=\"text-muted\">\r\n                        Enter your password to unlock the screen!\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"p-2 mt-4\">\r\n                      <div className=\"user-thumb text-center mb-4\">\r\n                        <img\r\n                          src={avatar4}\r\n                          className=\"rounded-circle img-thumbnail avatar-lg\"\r\n                          alt=\"thumbnail\"\r\n                        />\r\n                        <h5 className=\"font-size-15 mt-3\">{username}</h5>\r\n                      </div>\r\n                      <AvForm>\r\n                        <div className=\"mb-3\">\r\n                          <AvField\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            required\r\n                            placeholder=\"Enter Password\"\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3 text-end\">\r\n                          <Button\r\n                            color=\"primary\"\r\n                            className=\"w-sm waves-effect waves-light\"\r\n                            type=\"submit\"\r\n                          >\r\n                            Unlock\r\n                          </Button>\r\n                        </div>\r\n                        <div className=\"mt-4 text-center\">\r\n                          <p className=\"mb-0\">\r\n                            Not you ? return\r\n                            <Link\r\n                              to=\"/login\"\r\n                              className=\"fw-medium text-primary\"\r\n                            >\r\n                              Sign In\r\n                            </Link>\r\n                          </p>\r\n                        </div>\r\n                      </AvForm>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n                <div className=\"mt-5 text-center text-white\">\r\n                  <p>\r\n                    © {new Date().getFullYear()} Cococa Ecommerce Private\r\n                    Limited.\r\n                    <a href=\"https://srvinfotech.com\" target=\"_blank\">\r\n                      &nbsp;Powered by SRV InfoTech\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  const { error, success } = state.Profile;\r\n  return { error, success };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStatetoProps, {})(withTranslation()(LockScreen))\r\n);\r\n","E:\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Recoverpw.js",[],"E:\\hazelgreen\\client\\src\\pages\\Icons\\IconMaterialdesign.js",[],"E:\\hazelgreen\\client\\src\\pages\\Icons\\IconFontawesome.js",[],"E:\\hazelgreen\\client\\src\\components\\CommonForBoth\\Rightbar.js",[],"E:\\hazelgreen\\client\\src\\components\\HorizontalLayout\\Navbar.js",[],"E:\\hazelgreen\\client\\src\\store\\actions.js",[],"E:\\hazelgreen\\client\\src\\pages\\MasterSettings\\Privilage\\index.js",["814","815"],"import React from \"react\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Label,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\nimport \"./previlage.scss\";\r\n\r\nconst DatatableTables = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"name\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Privilage Name\",\r\n        field: \"name\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Privilage Shortcode\",\r\n        field: \"position\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"office\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: [\r\n      {\r\n        name: \"1\",\r\n        position: \"System Architect\",\r\n        office: \"Edinburgh\",\r\n        age: \"61\",\r\n        date: \"2011/04/25\",\r\n        salary: \"$320\",\r\n      },\r\n      {\r\n        name: \"2\",\r\n        position: \"Accountant\",\r\n        office: \"Tokyo\",\r\n        age: \"63\",\r\n        date: \"2011/07/25\",\r\n        salary: \"$170\",\r\n      },\r\n      {\r\n        name: \"3\",\r\n        position: \"Junior Technical Author\",\r\n        office: \"San Francisco\",\r\n        age: \"66\",\r\n        date: \"2009/01/12\",\r\n        salary: \"$86\",\r\n      },\r\n      {\r\n        name: \"Cedric Kelly\",\r\n        position: \"Senior Javascript Developer\",\r\n        office: \"Edinburgh\",\r\n        age: \"22\",\r\n        date: \"2012/03/29\",\r\n        salary: \"$433\",\r\n      },\r\n      {\r\n        name: \"Airi Satou\",\r\n        position: \"Accountant\",\r\n        office: \"Tokyo\",\r\n        age: \"33\",\r\n        date: \"2008/11/28\",\r\n        salary: \"$162\",\r\n      },\r\n      {\r\n        name: \"Brielle Williamson\",\r\n        position: \"Integration Specialist\",\r\n        office: \"New York\",\r\n        age: \"61\",\r\n        date: \"2012/12/02\",\r\n        salary: \"$372\",\r\n      },\r\n      {\r\n        name: \"Herrod Chandler\",\r\n        position: \"Sales Assistant\",\r\n        office: \"San Francisco\",\r\n        age: \"59\",\r\n        date: \"2012/08/06\",\r\n        salary: \"$137\",\r\n      },\r\n      {\r\n        name: \"Rhona Davidson\",\r\n        position: \"Integration Specialist\",\r\n        office: \"Tokyo\",\r\n        age: \"55\",\r\n        date: \"2010/10/14\",\r\n        salary: \"$327\",\r\n      },\r\n      {\r\n        name: \"Colleen Hurst\",\r\n        position: \"Javascript Developer\",\r\n        office: \"San Francisco\",\r\n        age: \"39\",\r\n        date: \"2009/09/15\",\r\n        salary: \"$205\",\r\n      },\r\n      {\r\n        name: \"Sonya Frost\",\r\n        position: \"Software Engineer\",\r\n        office: \"Edinburgh\",\r\n        age: \"23\",\r\n        date: \"2008/12/13\",\r\n        salary: \"$103\",\r\n      },\r\n      {\r\n        name: \"Jena Gaines\",\r\n        position: \"Office Manager\",\r\n        office: \"London\",\r\n        age: \"30\",\r\n        date: \"2008/12/19\",\r\n        salary: \"$90\",\r\n      },\r\n      {\r\n        name: \"Quinn Flynn\",\r\n        position: \"Support Lead\",\r\n        office: \"Edinburgh\",\r\n        age: \"22\",\r\n        date: \"2013/03/03\",\r\n        salary: \"$342\",\r\n      },\r\n      {\r\n        name: \"Charde Marshall\",\r\n        position: \"Regional Director\",\r\n        office: \"San Francisco\",\r\n        age: \"36\",\r\n        date: \"2008/10/16\",\r\n        salary: \"$470\",\r\n      },\r\n      {\r\n        name: \"Haley Kennedy\",\r\n        position: \"Senior Marketing Designer\",\r\n        office: \"London\",\r\n        age: \"43\",\r\n        date: \"2012/12/18\",\r\n        salary: \"$313\",\r\n      },\r\n      {\r\n        name: \"Tatyana Fitzpatrick\",\r\n        position: \"Regional Director\",\r\n        office: \"London\",\r\n        age: \"19\",\r\n        date: \"2010/03/17\",\r\n        salary: \"$385\",\r\n      },\r\n      {\r\n        name: \"Michael Silva\",\r\n        position: \"Marketing Designer\",\r\n        office: \"London\",\r\n        age: \"66\",\r\n        date: \"2012/11/27\",\r\n        salary: \"$198\",\r\n      },\r\n      {\r\n        name: \"Paul Byrd\",\r\n        position: \"Chief Financial Officer (CFO)\",\r\n        office: \"New York\",\r\n        age: \"64\",\r\n        date: \"2010/06/09\",\r\n        salary: \"$725\",\r\n      },\r\n      {\r\n        name: \"Gloria Little\",\r\n        position: \"Systems Administrator\",\r\n        office: \"New York\",\r\n        age: \"59\",\r\n        date: \"2009/04/10\",\r\n        salary: \"$237\",\r\n      },\r\n      {\r\n        name: \"Bradley Greer\",\r\n        position: \"Software Engineer\",\r\n        office: \"London\",\r\n        age: \"41\",\r\n        date: \"2012/10/13\",\r\n        salary: \"$132\",\r\n      },\r\n      {\r\n        name: \"Dai Rios\",\r\n        position: \"Personnel Lead\",\r\n        office: \"Edinburgh\",\r\n        age: \"35\",\r\n        date: \"2012/09/26\",\r\n        salary: \"$217\",\r\n      },\r\n      {\r\n        name: \"Jenette Caldwell\",\r\n        position: \"Development Lead\",\r\n        office: \"New York\",\r\n        age: \"30\",\r\n        date: \"2011/09/03\",\r\n        salary: \"$345\",\r\n      },\r\n      {\r\n        name: \"Yuri Berry\",\r\n        position: \"Chief Marketing Officer (CMO)\",\r\n        office: \"New York\",\r\n        age: \"40\",\r\n        date: \"2009/06/25\",\r\n        salary: \"$675\",\r\n      },\r\n      {\r\n        name: \"Caesar Vance\",\r\n        position: \"Pre-Sales Support\",\r\n        office: \"New York\",\r\n        age: \"21\",\r\n        date: \"2011/12/12\",\r\n        salary: \"$106\",\r\n      },\r\n      {\r\n        name: \"Doris Wilder\",\r\n        position: \"Sales Assistant\",\r\n        office: \"Sidney\",\r\n        age: \"23\",\r\n        date: \"2010/09/20\",\r\n        salary: \"$85\",\r\n      },\r\n      {\r\n        name: \"Angelica Ramos\",\r\n        position: \"Chief Executive Officer (CEO)\",\r\n        office: \"London\",\r\n        age: \"47\",\r\n        date: \"2009/10/09\",\r\n        salary: \"$1\",\r\n      },\r\n      {\r\n        name: \"Gavin Joyce\",\r\n        position: \"Developer\",\r\n        office: \"Edinburgh\",\r\n        age: \"42\",\r\n        date: \"2010/12/22\",\r\n        salary: \"$92\",\r\n      },\r\n      {\r\n        name: \"Jennifer Chang\",\r\n        position: \"Regional Director\",\r\n        office: \"Singapore\",\r\n        age: \"28\",\r\n        date: \"2010/11/14\",\r\n        salary: \"$357\",\r\n      },\r\n      {\r\n        name: \"Brenden Wagner\",\r\n        position: \"Software Engineer\",\r\n        office: \"San Francisco\",\r\n        age: \"28\",\r\n        date: \"2011/06/07\",\r\n        salary: \"$206\",\r\n      },\r\n      {\r\n        name: \"Fiona Green\",\r\n        position: \"Chief Operating Officer (COO)\",\r\n        office: \"San Francisco\",\r\n        age: \"48\",\r\n        date: \"2010/03/11\",\r\n        salary: \"$850\",\r\n      },\r\n      {\r\n        name: \"Shou Itou\",\r\n        position: \"Regional Marketing\",\r\n        office: \"Tokyo\",\r\n        age: \"20\",\r\n        date: \"2011/08/14\",\r\n        salary: \"$163\",\r\n      },\r\n      {\r\n        name: \"Michelle House\",\r\n        position: \"Integration Specialist\",\r\n        office: \"Sidney\",\r\n        age: \"37\",\r\n        date: \"2011/06/02\",\r\n        salary: \"$95\",\r\n      },\r\n      {\r\n        name: \"Suki Burks\",\r\n        position: \"Developer\",\r\n        office: \"London\",\r\n        age: \"53\",\r\n        date: \"2009/10/22\",\r\n        salary: \"$114\",\r\n      },\r\n      {\r\n        name: \"Prescott Bartlett\",\r\n        position: \"Technical Author\",\r\n        office: \"London\",\r\n        age: \"27\",\r\n        date: \"2011/05/07\",\r\n        salary: \"$145\",\r\n      },\r\n      {\r\n        name: \"Gavin Cortez\",\r\n        position: \"Team Leader\",\r\n        office: \"San Francisco\",\r\n        age: \"22\",\r\n        date: \"2008/10/26\",\r\n        salary: \"$235\",\r\n      },\r\n      {\r\n        name: \"Martena Mccray\",\r\n        position: \"Post-Sales support\",\r\n        office: \"Edinburgh\",\r\n        age: \"46\",\r\n        date: \"2011/03/09\",\r\n        salary: \"$324\",\r\n      },\r\n      {\r\n        name: \"Unity Butler\",\r\n        position: \"Marketing Designer\",\r\n        office: \"San Francisco\",\r\n        age: \"47\",\r\n        date: \"2009/12/09\",\r\n        salary: \"$85\",\r\n      },\r\n      {\r\n        name: \"Howard Hatfield\",\r\n        position: \"Office Manager\",\r\n        office: \"San Francisco\",\r\n        age: \"51\",\r\n        date: \"2008/12/16\",\r\n        salary: \"$164\",\r\n      },\r\n      {\r\n        name: \"Hope Fuentes\",\r\n        position: \"Secretary\",\r\n        office: \"San Francisco\",\r\n        age: \"41\",\r\n        date: \"2010/02/12\",\r\n        salary: \"$109\",\r\n      },\r\n      {\r\n        name: \"Vivian Harrell\",\r\n        position: \"Financial Controller\",\r\n        office: \"San Francisco\",\r\n        age: \"62\",\r\n        date: \"2009/02/14\",\r\n        salary: \"$452\",\r\n      },\r\n      {\r\n        name: \"Timothy Mooney\",\r\n        position: \"Office Manager\",\r\n        office: \"London\",\r\n        age: \"37\",\r\n        date: \"2008/12/11\",\r\n        salary: \"$136\",\r\n      },\r\n      {\r\n        name: \"Jackson Bradshaw\",\r\n        position: \"Director\",\r\n        office: \"New York\",\r\n        age: \"65\",\r\n        date: \"2008/09/26\",\r\n        salary: \"$645\",\r\n      },\r\n      {\r\n        name: \"Olivia Liang\",\r\n        position: \"Support Engineer\",\r\n        office: \"Singapore\",\r\n        age: \"64\",\r\n        date: \"2011/02/03\",\r\n        salary: \"$234\",\r\n      },\r\n      {\r\n        name: \"Bruno Nash\",\r\n        position: \"Software Engineer\",\r\n        office: \"London\",\r\n        age: \"38\",\r\n        date: \"2011/05/03\",\r\n        salary: \"$163\",\r\n      },\r\n      {\r\n        name: \"Sakura Yamamoto\",\r\n        position: \"Support Engineer\",\r\n        office: \"Tokyo\",\r\n        age: \"37\",\r\n        date: \"2009/08/19\",\r\n        salary: \"$139\",\r\n      },\r\n      {\r\n        name: \"Thor Walton\",\r\n        position: \"Developer\",\r\n        office: \"New York\",\r\n        age: \"61\",\r\n        date: \"2013/08/11\",\r\n        salary: \"$98\",\r\n      },\r\n      {\r\n        name: \"Finn Camacho\",\r\n        position: \"Support Engineer\",\r\n        office: \"San Francisco\",\r\n        age: \"47\",\r\n        date: \"2009/07/07\",\r\n        salary: \"$87\",\r\n      },\r\n      {\r\n        name: \"Serge Baldwin\",\r\n        position: \"Data Coordinator\",\r\n        office: \"Singapore\",\r\n        age: \"64\",\r\n        date: \"2012/04/09\",\r\n        salary: \"$138\",\r\n      },\r\n      {\r\n        name: \"Zenaida Frank\",\r\n        position: \"Software Engineer\",\r\n        office: \"New York\",\r\n        age: \"63\",\r\n        date: \"2010/01/04\",\r\n        salary: \"$125\",\r\n      },\r\n      {\r\n        name: \"Zorita Serrano\",\r\n        position: \"Software Engineer\",\r\n        office: \"San Francisco\",\r\n        age: \"56\",\r\n        date: \"2012/06/01\",\r\n        salary: \"$115\",\r\n      },\r\n      {\r\n        name: \"Jennifer Acosta\",\r\n        position: \"Junior Javascript Developer\",\r\n        office: \"Edinburgh\",\r\n        age: \"43\",\r\n        date: \"2013/02/01\",\r\n        salary: \"$75\",\r\n      },\r\n      {\r\n        name: \"Cara Stevens\",\r\n        position: \"Sales Assistant\",\r\n        office: \"New York\",\r\n        age: \"46\",\r\n        date: \"2011/12/06\",\r\n        salary: \"$145\",\r\n      },\r\n      {\r\n        name: \"Hermione Butler\",\r\n        position: \"Regional Director\",\r\n        office: \"London\",\r\n        age: \"47\",\r\n        date: \"2011/03/21\",\r\n        salary: \"$356\",\r\n      },\r\n      {\r\n        name: \"Lael Greer\",\r\n        position: \"Systems Administrator\",\r\n        office: \"London\",\r\n        age: \"21\",\r\n        date: \"2009/02/27\",\r\n        salary: \"$103\",\r\n      },\r\n      {\r\n        name: \"Jonas Alexander\",\r\n        position: \"Developer\",\r\n        office: \"San Francisco\",\r\n        age: \"30\",\r\n        date: \"2010/07/14\",\r\n        salary: \"$86\",\r\n      },\r\n      {\r\n        name: \"Shad Decker\",\r\n        position: \"Regional Director\",\r\n        office: \"Edinburgh\",\r\n        age: \"51\",\r\n        date: \"2008/11/13\",\r\n        salary: \"$183\",\r\n      },\r\n      {\r\n        name: \"Michael Bruce\",\r\n        position: \"Javascript Developer\",\r\n        office: \"Singapore\",\r\n        age: \"29\",\r\n        date: \"2011/06/27\",\r\n        salary: \"$183\",\r\n      },\r\n      {\r\n        name: \"Donna Snider\",\r\n        position: \"Customer Support\",\r\n        office: \"New York\",\r\n        age: \"27\",\r\n        date: \"2011/01/25\",\r\n        salary: \"$112\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Privilage\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm className=\"needs-validation\">\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom01\">Previlage</Label>\r\n                          <AvField\r\n                            name=\"firstname\"\r\n                            placeholder=\"Privilage name\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Previlage Name\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom01\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom02\">Shortcode</Label>\r\n                          <AvField\r\n                            name=\"lastname\"\r\n                            placeholder=\"Privilage Shortcode\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Privilage Shortcode\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom02\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>View Privileges</CardTitle>\r\n                  <hr />\r\n                  <MDBDataTable responsive bordered data={data} />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DatatableTables;\r\n","E:\\hazelgreen\\client\\src\\pages\\MasterSettings\\Company\\index.js",["816","817"],"import React from \"react\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\nimport \"./company.scss\";\r\n\r\nconst DatatableTables = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Position\",\r\n        field: \"position\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"Office\",\r\n        field: \"office\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Age\",\r\n        field: \"age\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n      {\r\n        label: \"Start date\",\r\n        field: \"date\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Salary\",\r\n        field: \"salary\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n    ],\r\n    rows: [\r\n      {\r\n        name: \"Tiger Nixon\",\r\n        position: \"System Architect\",\r\n        office: \"Edinburgh\",\r\n        age: \"61\",\r\n        date: \"2011/04/25\",\r\n        salary: \"$320\",\r\n      },\r\n      {\r\n        name: \"Garrett Winters\",\r\n        position: \"Accountant\",\r\n        office: \"Tokyo\",\r\n        age: \"63\",\r\n        date: \"2011/07/25\",\r\n        salary: \"$170\",\r\n      },\r\n      {\r\n        name: \"Ashton Cox\",\r\n        position: \"Junior Technical Author\",\r\n        office: \"San Francisco\",\r\n        age: \"66\",\r\n        date: \"2009/01/12\",\r\n        salary: \"$86\",\r\n      },\r\n      {\r\n        name: \"Cedric Kelly\",\r\n        position: \"Senior Javascript Developer\",\r\n        office: \"Edinburgh\",\r\n        age: \"22\",\r\n        date: \"2012/03/29\",\r\n        salary: \"$433\",\r\n      },\r\n      {\r\n        name: \"Airi Satou\",\r\n        position: \"Accountant\",\r\n        office: \"Tokyo\",\r\n        age: \"33\",\r\n        date: \"2008/11/28\",\r\n        salary: \"$162\",\r\n      },\r\n      {\r\n        name: \"Brielle Williamson\",\r\n        position: \"Integration Specialist\",\r\n        office: \"New York\",\r\n        age: \"61\",\r\n        date: \"2012/12/02\",\r\n        salary: \"$372\",\r\n      },\r\n      {\r\n        name: \"Herrod Chandler\",\r\n        position: \"Sales Assistant\",\r\n        office: \"San Francisco\",\r\n        age: \"59\",\r\n        date: \"2012/08/06\",\r\n        salary: \"$137\",\r\n      },\r\n      {\r\n        name: \"Rhona Davidson\",\r\n        position: \"Integration Specialist\",\r\n        office: \"Tokyo\",\r\n        age: \"55\",\r\n        date: \"2010/10/14\",\r\n        salary: \"$327\",\r\n      },\r\n      {\r\n        name: \"Colleen Hurst\",\r\n        position: \"Javascript Developer\",\r\n        office: \"San Francisco\",\r\n        age: \"39\",\r\n        date: \"2009/09/15\",\r\n        salary: \"$205\",\r\n      },\r\n      {\r\n        name: \"Sonya Frost\",\r\n        position: \"Software Engineer\",\r\n        office: \"Edinburgh\",\r\n        age: \"23\",\r\n        date: \"2008/12/13\",\r\n        salary: \"$103\",\r\n      },\r\n      {\r\n        name: \"Jena Gaines\",\r\n        position: \"Office Manager\",\r\n        office: \"London\",\r\n        age: \"30\",\r\n        date: \"2008/12/19\",\r\n        salary: \"$90\",\r\n      },\r\n      {\r\n        name: \"Quinn Flynn\",\r\n        position: \"Support Lead\",\r\n        office: \"Edinburgh\",\r\n        age: \"22\",\r\n        date: \"2013/03/03\",\r\n        salary: \"$342\",\r\n      },\r\n      {\r\n        name: \"Charde Marshall\",\r\n        position: \"Regional Director\",\r\n        office: \"San Francisco\",\r\n        age: \"36\",\r\n        date: \"2008/10/16\",\r\n        salary: \"$470\",\r\n      },\r\n      {\r\n        name: \"Haley Kennedy\",\r\n        position: \"Senior Marketing Designer\",\r\n        office: \"London\",\r\n        age: \"43\",\r\n        date: \"2012/12/18\",\r\n        salary: \"$313\",\r\n      },\r\n      {\r\n        name: \"Tatyana Fitzpatrick\",\r\n        position: \"Regional Director\",\r\n        office: \"London\",\r\n        age: \"19\",\r\n        date: \"2010/03/17\",\r\n        salary: \"$385\",\r\n      },\r\n      {\r\n        name: \"Michael Silva\",\r\n        position: \"Marketing Designer\",\r\n        office: \"London\",\r\n        age: \"66\",\r\n        date: \"2012/11/27\",\r\n        salary: \"$198\",\r\n      },\r\n      {\r\n        name: \"Paul Byrd\",\r\n        position: \"Chief Financial Officer (CFO)\",\r\n        office: \"New York\",\r\n        age: \"64\",\r\n        date: \"2010/06/09\",\r\n        salary: \"$725\",\r\n      },\r\n      {\r\n        name: \"Gloria Little\",\r\n        position: \"Systems Administrator\",\r\n        office: \"New York\",\r\n        age: \"59\",\r\n        date: \"2009/04/10\",\r\n        salary: \"$237\",\r\n      },\r\n      {\r\n        name: \"Bradley Greer\",\r\n        position: \"Software Engineer\",\r\n        office: \"London\",\r\n        age: \"41\",\r\n        date: \"2012/10/13\",\r\n        salary: \"$132\",\r\n      },\r\n      {\r\n        name: \"Dai Rios\",\r\n        position: \"Personnel Lead\",\r\n        office: \"Edinburgh\",\r\n        age: \"35\",\r\n        date: \"2012/09/26\",\r\n        salary: \"$217\",\r\n      },\r\n      {\r\n        name: \"Jenette Caldwell\",\r\n        position: \"Development Lead\",\r\n        office: \"New York\",\r\n        age: \"30\",\r\n        date: \"2011/09/03\",\r\n        salary: \"$345\",\r\n      },\r\n      {\r\n        name: \"Yuri Berry\",\r\n        position: \"Chief Marketing Officer (CMO)\",\r\n        office: \"New York\",\r\n        age: \"40\",\r\n        date: \"2009/06/25\",\r\n        salary: \"$675\",\r\n      },\r\n      {\r\n        name: \"Caesar Vance\",\r\n        position: \"Pre-Sales Support\",\r\n        office: \"New York\",\r\n        age: \"21\",\r\n        date: \"2011/12/12\",\r\n        salary: \"$106\",\r\n      },\r\n      {\r\n        name: \"Doris Wilder\",\r\n        position: \"Sales Assistant\",\r\n        office: \"Sidney\",\r\n        age: \"23\",\r\n        date: \"2010/09/20\",\r\n        salary: \"$85\",\r\n      },\r\n      {\r\n        name: \"Angelica Ramos\",\r\n        position: \"Chief Executive Officer (CEO)\",\r\n        office: \"London\",\r\n        age: \"47\",\r\n        date: \"2009/10/09\",\r\n        salary: \"$1\",\r\n      },\r\n      {\r\n        name: \"Gavin Joyce\",\r\n        position: \"Developer\",\r\n        office: \"Edinburgh\",\r\n        age: \"42\",\r\n        date: \"2010/12/22\",\r\n        salary: \"$92\",\r\n      },\r\n      {\r\n        name: \"Jennifer Chang\",\r\n        position: \"Regional Director\",\r\n        office: \"Singapore\",\r\n        age: \"28\",\r\n        date: \"2010/11/14\",\r\n        salary: \"$357\",\r\n      },\r\n      {\r\n        name: \"Brenden Wagner\",\r\n        position: \"Software Engineer\",\r\n        office: \"San Francisco\",\r\n        age: \"28\",\r\n        date: \"2011/06/07\",\r\n        salary: \"$206\",\r\n      },\r\n      {\r\n        name: \"Fiona Green\",\r\n        position: \"Chief Operating Officer (COO)\",\r\n        office: \"San Francisco\",\r\n        age: \"48\",\r\n        date: \"2010/03/11\",\r\n        salary: \"$850\",\r\n      },\r\n      {\r\n        name: \"Shou Itou\",\r\n        position: \"Regional Marketing\",\r\n        office: \"Tokyo\",\r\n        age: \"20\",\r\n        date: \"2011/08/14\",\r\n        salary: \"$163\",\r\n      },\r\n      {\r\n        name: \"Michelle House\",\r\n        position: \"Integration Specialist\",\r\n        office: \"Sidney\",\r\n        age: \"37\",\r\n        date: \"2011/06/02\",\r\n        salary: \"$95\",\r\n      },\r\n      {\r\n        name: \"Suki Burks\",\r\n        position: \"Developer\",\r\n        office: \"London\",\r\n        age: \"53\",\r\n        date: \"2009/10/22\",\r\n        salary: \"$114\",\r\n      },\r\n      {\r\n        name: \"Prescott Bartlett\",\r\n        position: \"Technical Author\",\r\n        office: \"London\",\r\n        age: \"27\",\r\n        date: \"2011/05/07\",\r\n        salary: \"$145\",\r\n      },\r\n      {\r\n        name: \"Gavin Cortez\",\r\n        position: \"Team Leader\",\r\n        office: \"San Francisco\",\r\n        age: \"22\",\r\n        date: \"2008/10/26\",\r\n        salary: \"$235\",\r\n      },\r\n      {\r\n        name: \"Martena Mccray\",\r\n        position: \"Post-Sales support\",\r\n        office: \"Edinburgh\",\r\n        age: \"46\",\r\n        date: \"2011/03/09\",\r\n        salary: \"$324\",\r\n      },\r\n      {\r\n        name: \"Unity Butler\",\r\n        position: \"Marketing Designer\",\r\n        office: \"San Francisco\",\r\n        age: \"47\",\r\n        date: \"2009/12/09\",\r\n        salary: \"$85\",\r\n      },\r\n      {\r\n        name: \"Howard Hatfield\",\r\n        position: \"Office Manager\",\r\n        office: \"San Francisco\",\r\n        age: \"51\",\r\n        date: \"2008/12/16\",\r\n        salary: \"$164\",\r\n      },\r\n      {\r\n        name: \"Hope Fuentes\",\r\n        position: \"Secretary\",\r\n        office: \"San Francisco\",\r\n        age: \"41\",\r\n        date: \"2010/02/12\",\r\n        salary: \"$109\",\r\n      },\r\n      {\r\n        name: \"Vivian Harrell\",\r\n        position: \"Financial Controller\",\r\n        office: \"San Francisco\",\r\n        age: \"62\",\r\n        date: \"2009/02/14\",\r\n        salary: \"$452\",\r\n      },\r\n      {\r\n        name: \"Timothy Mooney\",\r\n        position: \"Office Manager\",\r\n        office: \"London\",\r\n        age: \"37\",\r\n        date: \"2008/12/11\",\r\n        salary: \"$136\",\r\n      },\r\n      {\r\n        name: \"Jackson Bradshaw\",\r\n        position: \"Director\",\r\n        office: \"New York\",\r\n        age: \"65\",\r\n        date: \"2008/09/26\",\r\n        salary: \"$645\",\r\n      },\r\n      {\r\n        name: \"Olivia Liang\",\r\n        position: \"Support Engineer\",\r\n        office: \"Singapore\",\r\n        age: \"64\",\r\n        date: \"2011/02/03\",\r\n        salary: \"$234\",\r\n      },\r\n      {\r\n        name: \"Bruno Nash\",\r\n        position: \"Software Engineer\",\r\n        office: \"London\",\r\n        age: \"38\",\r\n        date: \"2011/05/03\",\r\n        salary: \"$163\",\r\n      },\r\n      {\r\n        name: \"Sakura Yamamoto\",\r\n        position: \"Support Engineer\",\r\n        office: \"Tokyo\",\r\n        age: \"37\",\r\n        date: \"2009/08/19\",\r\n        salary: \"$139\",\r\n      },\r\n      {\r\n        name: \"Thor Walton\",\r\n        position: \"Developer\",\r\n        office: \"New York\",\r\n        age: \"61\",\r\n        date: \"2013/08/11\",\r\n        salary: \"$98\",\r\n      },\r\n      {\r\n        name: \"Finn Camacho\",\r\n        position: \"Support Engineer\",\r\n        office: \"San Francisco\",\r\n        age: \"47\",\r\n        date: \"2009/07/07\",\r\n        salary: \"$87\",\r\n      },\r\n      {\r\n        name: \"Serge Baldwin\",\r\n        position: \"Data Coordinator\",\r\n        office: \"Singapore\",\r\n        age: \"64\",\r\n        date: \"2012/04/09\",\r\n        salary: \"$138\",\r\n      },\r\n      {\r\n        name: \"Zenaida Frank\",\r\n        position: \"Software Engineer\",\r\n        office: \"New York\",\r\n        age: \"63\",\r\n        date: \"2010/01/04\",\r\n        salary: \"$125\",\r\n      },\r\n      {\r\n        name: \"Zorita Serrano\",\r\n        position: \"Software Engineer\",\r\n        office: \"San Francisco\",\r\n        age: \"56\",\r\n        date: \"2012/06/01\",\r\n        salary: \"$115\",\r\n      },\r\n      {\r\n        name: \"Jennifer Acosta\",\r\n        position: \"Junior Javascript Developer\",\r\n        office: \"Edinburgh\",\r\n        age: \"43\",\r\n        date: \"2013/02/01\",\r\n        salary: \"$75\",\r\n      },\r\n      {\r\n        name: \"Cara Stevens\",\r\n        position: \"Sales Assistant\",\r\n        office: \"New York\",\r\n        age: \"46\",\r\n        date: \"2011/12/06\",\r\n        salary: \"$145\",\r\n      },\r\n      {\r\n        name: \"Hermione Butler\",\r\n        position: \"Regional Director\",\r\n        office: \"London\",\r\n        age: \"47\",\r\n        date: \"2011/03/21\",\r\n        salary: \"$356\",\r\n      },\r\n      {\r\n        name: \"Lael Greer\",\r\n        position: \"Systems Administrator\",\r\n        office: \"London\",\r\n        age: \"21\",\r\n        date: \"2009/02/27\",\r\n        salary: \"$103\",\r\n      },\r\n      {\r\n        name: \"Jonas Alexander\",\r\n        position: \"Developer\",\r\n        office: \"San Francisco\",\r\n        age: \"30\",\r\n        date: \"2010/07/14\",\r\n        salary: \"$86\",\r\n      },\r\n      {\r\n        name: \"Shad Decker\",\r\n        position: \"Regional Director\",\r\n        office: \"Edinburgh\",\r\n        age: \"51\",\r\n        date: \"2008/11/13\",\r\n        salary: \"$183\",\r\n      },\r\n      {\r\n        name: \"Michael Bruce\",\r\n        position: \"Javascript Developer\",\r\n        office: \"Singapore\",\r\n        age: \"29\",\r\n        date: \"2011/06/27\",\r\n        salary: \"$183\",\r\n      },\r\n      {\r\n        name: \"Donna Snider\",\r\n        position: \"Customer Support\",\r\n        office: \"New York\",\r\n        age: \"27\",\r\n        date: \"2011/01/25\",\r\n        salary: \"$112\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Company\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm className=\"needs-validation\">\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom01\">First name</Label>\r\n                          <AvField\r\n                            name=\"firstname\"\r\n                            placeholder=\"First name\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter First Name\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom01\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom02\">Last name</Label>\r\n                          <AvField\r\n                            name=\"lastname\"\r\n                            placeholder=\"Last name\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Last name\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom02\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"4\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom03\">City</Label>\r\n                          <AvField\r\n                            name=\"city\"\r\n                            placeholder=\"City\"\r\n                            type=\"text\"\r\n                            errorMessage=\" Please provide a valid city.\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom03\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"4\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom04\">State</Label>\r\n                          <AvField\r\n                            name=\"state\"\r\n                            placeholder=\"State\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Please provide a valid state.\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom04\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"4\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Zip</Label>\r\n                          <AvField\r\n                            name=\"zip\"\r\n                            placeholder=\"Zip Code\"\r\n                            type=\"text\"\r\n                            errorMessage=\" Please provide a valid zip.\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"form-check mb-3\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value=\"\"\r\n                        id=\"invalidCheck\"\r\n                        required\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"invalidCheck\"\r\n                      >\r\n                        Agree to terms and conditions\r\n                      </label>\r\n                      <div className=\"invalid-feedback\">\r\n                        You must agree before submitting.\r\n                      </div>\r\n                    </div>\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                      Submit\r\n                    </Button>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable responsive bordered data={data} />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DatatableTables;\r\n","E:\\hazelgreen\\client\\src\\components\\Common\\Breadcrumb.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\knob\\knob.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\bubblechart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\candlestickchart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\scatterchart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\piechart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\gaugechart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\doughnutchart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\linebarchart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\echart\\linechart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\radarchart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\polarchart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\piechart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\dountchart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\barchart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\chartjs\\linechart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\PieChart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\dountchart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\RadialChart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\barchart.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\LineColumnArea.js",[],"E:\\hazelgreen\\client\\src\\store\\companies\\actions.js",[],"E:\\hazelgreen\\client\\src\\store\\branches\\actions.js",[],"E:\\hazelgreen\\client\\src\\helpers\\backend_helper.js",["818"],"import axios from \"axios\";\r\nimport { post, del, get, put } from \"./api_helper\";\r\nimport * as url from \"./url_helper\";\r\n\r\n// Gets the logged in user data from local session\r\nconst getLoggedInUser = () => {\r\n  const user = localStorage.getItem(\"user\");\r\n  if (user) return JSON.parse(user);\r\n  return null;\r\n};\r\n\r\n//is user is logged in\r\nconst isUserAuthenticated = () => {\r\n  return getLoggedInUser() !== null;\r\n};\r\n\r\n// Login Method\r\nconst login = (data) => post(url.POST_LOGIN, data);\r\n\r\nexport const checkAuth = (data) => post(url.CHECK_AUTH, data);\r\n\r\n// postForgetPwd\r\n// const postJwtForgetPwd = (data) =>\r\n//   post(url.POST_FAKE_JWT_PASSWORD_FORGET, data);\r\n\r\n// get Product detail\r\n// export const getProductDetail = (id) =>\r\n//   get(`${url.GET_PRODUCTS_DETAIL}/${id}`, { params: { id } });\r\n\r\nexport const getUserProfile = () => get(url.GET_USER_PROFILE);\r\n\r\n// get users\r\nexport const getUsers = () => get(url.GET_USERS);\r\n\r\n// add user\r\nexport const addUser = (user) => post(url.ADD_USER, user);\r\nexport const getUser = (userId) => get(url.GET_USER, userId);\r\nexport const updateUser = (user) => put(`${url.UPDATE_USER}/${user._id}`, user);\r\nexport const deleteUser = (userId) => del(url.DELETE_USER, userId);\r\n\r\n// get privilages options\r\nexport const getPrivilagesOptions = () => get(url.GET_PRIVILAGES_OPTIONS);\r\n\r\n// get companies options\r\nexport const getCompaniesOptions = () => get(url.GET_COMPANIES_OPTIONS);\r\n\r\n// get Branches options\r\nexport const getBranchesOptions = (companyId) =>\r\n  get(`${url.GET_BRANCHES_OPTIONS}/${companyId}`, { companyId: companyId });\r\n\r\nexport { getLoggedInUser, isUserAuthenticated, login };\r\n","E:\\hazelgreen\\client\\src\\store\\privilages\\actions.js",[],"E:\\hazelgreen\\client\\src\\store\\users\\actions.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\ColumnWithDataLabels.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\apaexlinecolumn.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\SplineArea.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\chartapex.js",[],"E:\\hazelgreen\\client\\src\\pages\\AllCharts\\apex\\dashedLine.js",[],"E:\\hazelgreen\\client\\src\\store\\layout\\actions.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\profile\\actions.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\actions.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\login\\actions.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\register\\actions.js",[],"E:\\hazelgreen\\client\\src\\helpers\\url_helper.js",[],"E:\\hazelgreen\\client\\src\\helpers\\api_helper.js",[],"E:\\hazelgreen\\client\\src\\store\\users\\actionTypes.js",[],"E:\\hazelgreen\\client\\src\\store\\privilages\\actionTypes.js",[],"E:\\hazelgreen\\client\\src\\store\\branches\\actionTypes.js",[],"E:\\hazelgreen\\client\\src\\store\\companies\\actionTypes.js",[],"E:\\hazelgreen\\client\\src\\store\\layout\\actionTypes.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\register\\actionTypes.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\login\\actionTypes.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\profile\\actionTypes.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\actionTypes.js",[],"E:\\hazelgreen\\client\\src\\helpers\\jwt-token-access\\accessToken.js",[],"E:\\hazelgreen\\client\\src\\pages\\Utility\\card-pricing.js",[],"E:\\hazelgreen\\client\\src\\pages\\Dashboard\\latest-transaction.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidedark.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slideindividual.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithfade.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithindicator.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithcaption.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slide.js",[],"E:\\hazelgreen\\client\\src\\pages\\Ui\\CarouselTypes\\slidewithcontrol.js",[],"E:\\hazelgreen\\client\\src\\pages\\Dashboard\\socialsource.js",[],"E:\\hazelgreen\\client\\src\\pages\\Dashboard\\recent-activity.js",[],"E:\\hazelgreen\\client\\src\\pages\\Dashboard\\topuser.js",[],"E:\\hazelgreen\\client\\src\\pages\\Dashboard\\salesanalytics-chart.js",[],"E:\\hazelgreen\\client\\src\\pages\\Dashboard\\topselling-product.js",[],"E:\\hazelgreen\\client\\src\\pages\\Dashboard\\mini-widget.js",[],"E:\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.js",["819"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\";\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\n// users\r\nimport user4 from \"../../../assets/images/users/avatar-4.jpg\";\r\n\r\nconst ProfileMenu = (props) => {\r\n  // Declare a new state variable, which we'll call \"menu\"\r\n  const [menu, setMenu] = useState(false);\r\n\r\n  const [username, setusername] = useState(\"Admin\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authUser\")) {\r\n      const obj = JSON.parse(localStorage.getItem(\"authUser\"));\r\n      setusername(obj.firstName);\r\n    }\r\n  }, [props.success]);\r\n\r\n  let logout = () => {\r\n    localStorage.removeItem(\"authUser\");\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dropdown\r\n        isOpen={menu}\r\n        toggle={() => setMenu(!menu)}\r\n        className=\"d-inline-block\"\r\n      >\r\n        <DropdownToggle\r\n          className=\"btn header-item waves-effect\"\r\n          id=\"page-header-user-dropdown\"\r\n          tag=\"button\"\r\n        >\r\n          <img\r\n            className=\"rounded-circle header-profile-user\"\r\n            src={user4}\r\n            alt=\"Header Avatar\"\r\n          />\r\n          <span className=\"d-none d-xl-inline-block ms-1 fw-medium font-size-15\">\r\n            {username}\r\n          </span>{\" \"}\r\n          <i className=\"uil-angle-down d-none d-xl-inline-block font-size-15\"></i>\r\n        </DropdownToggle>\r\n        <DropdownMenu className=\"dropdown-menu-end\">\r\n          <DropdownItem tag=\"a\" href=\"/profile\">\r\n            {\" \"}\r\n            <i className=\"uil uil-user-circle font-size-18 align-middle text-muted me-1\"></i>\r\n            {props.t(\"View Profile\")}{\" \"}\r\n          </DropdownItem>\r\n          <DropdownItem tag=\"a\" href=\"/\">\r\n            <i className=\"uil uil-history font-size-18 align-middle me-1 text-muted\"></i>\r\n            {props.t(\"History\")}\r\n          </DropdownItem>\r\n          <DropdownItem tag=\"a\" href=\"#\">\r\n            <i className=\"uil uil-cog font-size-18 align-middle me-1 text-muted\"></i>\r\n            {props.t(\"Settings\")}\r\n            <span className=\"badge bg-soft-success rounded-pill mt-1 ms-2\">\r\n              03\r\n            </span>\r\n          </DropdownItem>\r\n          {/* <DropdownItem tag=\"a\" href=\"auth-lock-screen\">\r\n            <i className=\"uil uil-lock-alt font-size-18 align-middle me-1 text-muted\"></i>\r\n            {props.t(\"Lock screen\")}\r\n          </DropdownItem> */}\r\n          <div className=\"dropdown-divider\" />\r\n          <div\r\n            className=\"dropdown-item\"\r\n            onClick={logout}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <i className=\"uil uil-sign-out-alt font-size-18 align-middle me-1 text-muted\"></i>\r\n            <span>{props.t(\"Logout\")}</span>\r\n          </div>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nProfileMenu.propTypes = {\r\n  success: PropTypes.any,\r\n  t: PropTypes.any,\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  const { error, success } = state.Profile;\r\n  return { error, success };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStatetoProps, {})(withTranslation()(ProfileMenu))\r\n);\r\n","E:\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\NotificationDropdown.js",[],"E:\\hazelgreen\\client\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js",[],"E:\\hazelgreen\\client\\src\\store\\companies\\saga.js",[],"E:\\hazelgreen\\client\\src\\store\\branches\\saga.js",[],"E:\\hazelgreen\\client\\src\\store\\privilages\\saga.js",[],"E:\\hazelgreen\\client\\src\\store\\users\\saga.js",["820"],"import { takeEvery, put, call, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  GET_USER,\r\n  ADD_USER,\r\n  DELETE_USER,\r\n  UPDATE_USER,\r\n  GET_USERS,\r\n} from \"./actionTypes\";\r\n\r\nimport {\r\n  getUsersSuccess,\r\n  getUsersFail,\r\n  getUserSuccess,\r\n  getUserFail,\r\n  addUserFail,\r\n  addUserSuccess,\r\n  updateUserFail,\r\n  updateUserSuccess,\r\n  deleteUserFail,\r\n  deleteUserSuccess,\r\n} from \"./actions\";\r\n\r\n//Include Both Helper File with needed methods\r\nimport {\r\n  getUsers,\r\n  getUser,\r\n  addUser,\r\n  updateUser,\r\n  deleteUser,\r\n} from \"../../helpers/backend_helper\";\r\n\r\nfunction* fetchUsers() {\r\n  try {\r\n    const response = yield call(getUsers);\r\n    yield put(getUsersSuccess(response));\r\n  } catch (error) {\r\n    yield put(getUsersFail(error));\r\n  }\r\n}\r\n\r\nfunction* onGetUser() {\r\n  try {\r\n    const response = yield call(getUser);\r\n    yield put(getUserSuccess(response));\r\n  } catch (error) {\r\n    yield put(getUserFail(error.response));\r\n  }\r\n}\r\n\r\nfunction* onAddUser({ payload: user }) {\r\n  try {\r\n    const response = yield call(addUser, user);\r\n    yield put(addUserSuccess(response));\r\n  } catch (error) {\r\n    yield put(addUserFail(error.response));\r\n  }\r\n}\r\n\r\nfunction* onUpdateUser({ payload: user }) {\r\n  delete user.name1;\r\n  delete user.privilage1;\r\n  delete user.company1;\r\n  delete user.branch1;\r\n  delete user.action;\r\n  console.log(user);\r\n  if (user.privilage) {\r\n    user.privilage = user.privilage._id;\r\n  }\r\n  if (user.company) {\r\n    user.company = user.company._id;\r\n  }\r\n  if (user.branch) {\r\n    user.branch = user.branch._id;\r\n  }\r\n\r\n  try {\r\n    const response = yield call(updateUser, user);\r\n    yield put(updateUserSuccess(response));\r\n  } catch (error) {\r\n    yield put(updateUserFail(error.response));\r\n  }\r\n}\r\n\r\nfunction* onDeleteUser({ payload: userId }) {\r\n  try {\r\n    const response = yield call(deleteUser, userId);\r\n    yield put(deleteUserSuccess(response));\r\n  } catch (error) {\r\n    yield put(deleteUserFail(error.response));\r\n  }\r\n}\r\n\r\nfunction* userSaga() {\r\n  yield takeEvery(GET_USERS, fetchUsers);\r\n  yield takeEvery(GET_USER, onGetUser);\r\n  yield takeEvery(ADD_USER, onAddUser);\r\n  yield takeEvery(UPDATE_USER, onUpdateUser);\r\n  yield takeEvery(DELETE_USER, onDeleteUser);\r\n}\r\n\r\nexport default userSaga;\r\n","E:\\hazelgreen\\client\\src\\store\\layout\\saga.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\saga.js",["821","822","823","824","825","826","827"],"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\r\n\r\n// Login Redux States\r\nimport { FORGET_PASSWORD } from \"./actionTypes\";\r\nimport { userForgetPasswordSuccess, userForgetPasswordError } from \"./actions\";\r\n\r\n//Include Both Helper File with needed methods\r\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\";\r\nimport {\r\n  postFakeForgetPwd,\r\n  postJwtForgetPwd,\r\n} from \"../../../helpers/backend_helper\";\r\n\r\nconst fireBaseBackend = getFirebaseBackend();\r\n\r\n//If user is send successfully send mail link then dispatch redux action's are directly from here.\r\nfunction* forgetUser({ payload: { user, history } }) {\r\n  // try {\r\n  //   if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\r\n  //     const response = yield call(fireBaseBackend.forgetPassword, user.email);\r\n  //     if (response) {\r\n  //       yield put(\r\n  //         userForgetPasswordSuccess(\r\n  //           \"Reset link are sended to your mailbox, check there first\"\r\n  //         )\r\n  //       );\r\n  //     }\r\n  //   } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\r\n  //     const response = yield call(postJwtForgetPwd, \"/jwt-forget-pwd\", {\r\n  //       email: user.email,\r\n  //     });\r\n  //     if (response) {\r\n  //       yield put(\r\n  //         userForgetPasswordSuccess(\r\n  //           \"Reset link are sended to your mailbox, check there first\"\r\n  //         )\r\n  //       );\r\n  //     }\r\n  //   } else {\r\n  //     const response = yield call(postFakeForgetPwd, \"/fake-forget-pwd\", {\r\n  //       email: user.email,\r\n  //     });\r\n  //     if (response) {\r\n  //       yield put(\r\n  //         userForgetPasswordSuccess(\r\n  //           \"Reset link are sended to your mailbox, check there first\"\r\n  //         )\r\n  //       );\r\n  //     }\r\n  //   }\r\n  // } catch (error) {\r\n  //   yield put(userForgetPasswordError(error));\r\n  // }\r\n}\r\n\r\nexport function* watchUserPasswordForget() {\r\n  yield takeEvery(FORGET_PASSWORD, forgetUser);\r\n}\r\n\r\nfunction* forgetPasswordSaga() {\r\n  yield all([fork(watchUserPasswordForget)]);\r\n}\r\n\r\nexport default forgetPasswordSaga;\r\n","E:\\hazelgreen\\client\\src\\store\\auth\\profile\\saga.js",["828","829","830","831","832","833","834"],"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\r\n\r\n// Login Redux States\r\nimport { EDIT_PROFILE } from \"./actionTypes\";\r\nimport { profileSuccess, profileError } from \"./actions\";\r\n\r\n//Include Both Helper File with needed methods\r\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\";\r\nimport {\r\n  postFakeProfile,\r\n  postJwtProfile,\r\n} from \"../../../helpers/backend_helper\";\r\n\r\nconst fireBaseBackend = getFirebaseBackend();\r\n\r\nfunction* editProfile({ payload: { user } }) {\r\n  // try {\r\n  //   if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\r\n  //     const response = yield call(\r\n  //       fireBaseBackend.editProfileAPI,\r\n  //       user.username,\r\n  //       user.idx\r\n  //     );\r\n  //     yield put(profileSuccess(response));\r\n  //   } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\r\n  //     const response = yield call(postJwtProfile, \"/post-jwt-profile\", {\r\n  //       username: user.username,\r\n  //       idx: user.idx,\r\n  //     });\r\n  //     yield put(profileSuccess(response));\r\n  //   } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\r\n  //     const response = yield call(postFakeProfile, {\r\n  //       username: user.username,\r\n  //       idx: user.idx,\r\n  //     });\r\n  //     yield put(profileSuccess(response));\r\n  //   }\r\n  // } catch (error) {\r\n  //   yield put(profileError(error));\r\n  // }\r\n}\r\nexport function* watchProfile() {\r\n  yield takeEvery(EDIT_PROFILE, editProfile);\r\n}\r\n\r\nfunction* ProfileSaga() {\r\n  yield all([fork(watchProfile)]);\r\n}\r\n\r\nexport default ProfileSaga;\r\n","E:\\hazelgreen\\client\\src\\store\\auth\\login\\saga.js",["835","836"],"import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\n\r\n// Login Redux States\r\nimport { CHECK_AUTH, LOGIN_USER, LOGOUT_USER } from \"./actionTypes\";\r\nimport { apiError, loginSuccess } from \"./actions\";\r\nimport { login, checkAuth } from \"../../../helpers/backend_helper\";\r\nimport Cookies from \"universal-cookie\";\r\nconst cookies = new Cookies();\r\n\r\n//Include Both Helper File with needed methods\r\n\r\nfunction* loginUser({ payload: { user, history } }) {\r\n  try {\r\n    const response = yield call(login, {\r\n      username: user.username,\r\n      password: user.password,\r\n    });\r\n    yield put(loginSuccess());\r\n    localStorage.setItem(\"authUser\", JSON.stringify(response.data));\r\n    cookies.set(\"rememberMe\", \"true\", { path: \"/\" });\r\n    history.push(\"/dashboard\");\r\n    window.location.reload();\r\n  } catch (error) {\r\n    yield put(apiError(error.response));\r\n  }\r\n}\r\n\r\nfunction* checkAuthentication({ payload: history }) {\r\n  try {\r\n    let adminData = JSON.parse(localStorage.getItem(\"authUser\"));\r\n    const response = yield call(checkAuth, {\r\n      token: adminData.token,\r\n    });\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    localStorage.removeItem(\"authUser\");\r\n    history.push(\"/login\");\r\n  }\r\n}\r\n\r\nfunction* logoutUser({ payload: { history } }) {\r\n  try {\r\n    localStorage.removeItem(\"authUser\");\r\n    history.push(\"/login\");\r\n  } catch (error) {\r\n    yield put(apiError(error));\r\n  }\r\n}\r\n\r\nfunction* authSaga() {\r\n  yield takeEvery(LOGIN_USER, loginUser);\r\n  yield takeEvery(LOGOUT_USER, logoutUser);\r\n  yield takeEvery(CHECK_AUTH, checkAuthentication);\r\n}\r\n\r\nexport default authSaga;\r\n","E:\\hazelgreen\\client\\src\\store\\auth\\register\\saga.js",["837","838","839","840","841","842","843"],"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\r\n\r\n//Account Redux states\r\nimport { REGISTER_USER } from \"./actionTypes\";\r\nimport { registerUserSuccessful, registerUserFailed } from \"./actions\";\r\n\r\n//Include Both Helper File with needed methods\r\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\";\r\nimport {\r\n  postFakeRegister,\r\n  postJwtRegister,\r\n} from \"../../../helpers/backend_helper\";\r\n\r\n// initialize relavant method of both Auth\r\nconst fireBaseBackend = getFirebaseBackend();\r\n\r\n// Is user register successfull then direct plot user in redux.\r\nfunction* registerUser({ payload: { user } }) {\r\n  // try {\r\n  //   if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\r\n  //     const response = yield call(\r\n  //       fireBaseBackend.registerUser,\r\n  //       user.email,\r\n  //       user.password\r\n  //     );\r\n  //     yield put(registerUserSuccessful(response));\r\n  //   } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\r\n  //     const response = yield call(postJwtRegister, \"/post-jwt-register\", user);\r\n  //     console.log(response);\r\n  //     yield put(registerUserSuccessful(response));\r\n  //   } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\r\n  //     const response = yield call(postFakeRegister, user);\r\n  //     yield put(registerUserSuccessful(response));\r\n  //   }\r\n  // } catch (error) {\r\n  //   yield put(registerUserFailed(error));\r\n  // }\r\n}\r\n\r\nexport function* watchUserRegister() {\r\n  yield takeEvery(REGISTER_USER, registerUser);\r\n}\r\n\r\nfunction* accountSaga() {\r\n  yield all([fork(watchUserRegister)]);\r\n}\r\n\r\nexport default accountSaga;\r\n","E:\\hazelgreen\\client\\src\\store\\branches\\reducer.js",[],"E:\\hazelgreen\\client\\src\\store\\companies\\reducer.js",[],"E:\\hazelgreen\\client\\src\\store\\users\\reducer.js",["844","845","846","847"],"import {\r\n  GET_USERS,\r\n  GET_USERS_FAIL,\r\n  GET_USERS_SUCCESS,\r\n  ADD_USER,\r\n  ADD_USER_FAIL,\r\n  ADD_USER_SUCCESS,\r\n  DELETE_USER,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_FAIL,\r\n  UPDATE_USER,\r\n  UPDATE_USER_SUCCESS,\r\n  UPDATE_USER_FAIL,\r\n} from \"./actionTypes\";\r\n\r\nconst INIT_STATE = {\r\n  users: [],\r\n  addingUser: false,\r\n  deletingUser: false,\r\n  addUserResponse: {},\r\n  updateUserResponse: {},\r\n  deleteUserResponse: {},\r\n  userIdToBeDeleted: \"\",\r\n  user: {},\r\n  error: {},\r\n};\r\n\r\nconst User = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        params: action.payload,\r\n      };\r\n\r\n    case GET_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: action.payload.data,\r\n      };\r\n\r\n    case GET_USERS_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case ADD_USER:\r\n      return {\r\n        ...state,\r\n        addingUser: true,\r\n        user: action.payload,\r\n      };\r\n\r\n    case ADD_USER_SUCCESS:\r\n      let newUers = [...state.users, action.payload.data];\r\n      return {\r\n        ...state,\r\n        addingUser: false,\r\n        addUserResponse: {\r\n          type: \"success\",\r\n          message: \"User added successfully\",\r\n        },\r\n        users: newUers,\r\n        error: {},\r\n      };\r\n\r\n    case ADD_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        addingUser: false,\r\n        addUserResponse: { type: \"failure\", message: \"Adding user failed\" },\r\n        error: action.payload,\r\n      };\r\n    case DELETE_USER:\r\n      return {\r\n        ...state,\r\n        deletingUser: true,\r\n        userIdToBeDeleted: action.payload,\r\n      };\r\n\r\n    case DELETE_USER_SUCCESS:\r\n      let newUsers = state.users.filter((item) => {\r\n        return item._id != state.userIdToBeDeleted;\r\n      });\r\n      return {\r\n        ...state,\r\n        deletingUser: false,\r\n        userIdToBeDeleted: \"\",\r\n        deletingUser: false,\r\n        deleteUserResponse: {\r\n          type: \"success\",\r\n          message: \"User deleted successfully\",\r\n        },\r\n        users: newUsers,\r\n      };\r\n\r\n    case DELETE_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        deletingUser: false,\r\n        deleteUserResponse: {\r\n          type: \"failure\",\r\n          message: \"Deleting user failed\",\r\n        },\r\n        error: action.payload,\r\n      };\r\n\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        updatingUser: true,\r\n        user: action.payload,\r\n      };\r\n\r\n    case UPDATE_USER_SUCCESS:\r\n      let newUsers1 = state.users.map((item) => {\r\n        if (item._id == state.user._id) {\r\n          return action.payload.data;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        updatingUser: false,\r\n        user: \"\",\r\n        updatingUser: false,\r\n        updateUserResponse: {\r\n          type: \"success\",\r\n          message: \"User updated successfully\",\r\n        },\r\n        users: newUsers1,\r\n      };\r\n\r\n    case UPDATE_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        updatingUser: false,\r\n        updateUserResponse: {\r\n          type: \"failure\",\r\n          message: \"Updating user failed\",\r\n        },\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default User;\r\n","E:\\hazelgreen\\client\\src\\store\\privilages\\reducer.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\profile\\reducer.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\register\\reducer.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\forgetpwd\\reducer.js",[],"E:\\hazelgreen\\client\\src\\store\\auth\\login\\reducer.js",[],"E:\\hazelgreen\\client\\src\\store\\layout\\reducer.js",[],"E:\\hazelgreen\\client\\src\\components\\VerticalLayout\\Footer.js",["848"],"import React from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <footer className=\"footer\">\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <Col sm={6}>\r\n              <p>\r\n                ©{new Date().getFullYear()} Hazel Green.\r\n              </p>\r\n            </Col>\r\n            <Col sm={6}>\r\n              <div className=\"text-sm-end d-none d-sm-block\">\r\n                <p style={{ color: \"#74788d\" }}>\r\n                  <a\r\n                    href=\"https://srvinfotech.com\"\r\n                    target=\"_blank\"\r\n                    style={{ color: \"#74788d\" }}\r\n                  >\r\n                    &nbsp;Powered by SRV InfoTech\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","E:\\hazelgreen\\client\\src\\components\\VerticalLayout\\Header.js",["849"],"import PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Input, Button, Row, Col } from \"reactstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Reactstrap\r\nimport { Dropdown, DropdownToggle, DropdownMenu } from \"reactstrap\";\r\n\r\n// Import menuDropdown\r\nimport NotificationDropdown from \"../CommonForBoth/TopbarDropdown/NotificationDropdown\";\r\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\";\r\n\r\n// Import components\r\nimport MegaMenu from \"../MegaMenu/MegaMenu\";\r\n\r\nimport logoSm from \"../../assets/images/logo-sm.svg\";\r\nimport logoDark from \"../../assets/images/logo-dark.png\";\r\nimport logoLight from \"../../assets/images/logo-light.png\";\r\n\r\n// import images\r\nimport github from \"../../assets/images/brands/github.png\";\r\nimport bitbucket from \"../../assets/images/brands/bitbucket.png\";\r\nimport dribbble from \"../../assets/images/brands/dribbble.png\";\r\nimport dropbox from \"../../assets/images/brands/dropbox.png\";\r\nimport mail_chimp from \"../../assets/images/brands/mail_chimp.png\";\r\nimport slack from \"../../assets/images/brands/slack.png\";\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\n// Redux Store\r\nimport {\r\n  showRightSidebarAction,\r\n  toggleLeftmenu,\r\n  changeSidebarType,\r\n} from \"../../store/actions\";\r\n\r\nconst Header = (props) => {\r\n  const [search, setsearch] = useState(false);\r\n  const [socialDrp, setsocialDrp] = useState(false);\r\n  const [showMegaMenu, setShowMegaMenu] = useState(false);\r\n\r\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\r\n  function toggleFullscreen() {\r\n    if (\r\n      !document.fullscreenElement &&\r\n      /* alternative standard method */ !document.mozFullScreenElement &&\r\n      !document.webkitFullscreenElement\r\n    ) {\r\n      // current working methods\r\n      if (document.documentElement.requestFullscreen) {\r\n        document.documentElement.requestFullscreen();\r\n      } else if (document.documentElement.mozRequestFullScreen) {\r\n        document.documentElement.mozRequestFullScreen();\r\n      } else if (document.documentElement.webkitRequestFullscreen) {\r\n        document.documentElement.webkitRequestFullscreen(\r\n          Element.ALLOW_KEYBOARD_INPUT\r\n        );\r\n      }\r\n    } else {\r\n      if (document.cancelFullScreen) {\r\n        document.cancelFullScreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.webkitCancelFullScreen) {\r\n        document.webkitCancelFullScreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  function tToggle() {\r\n    if (!isMobile) {\r\n      var body = document.body;\r\n      body.classList.toggle(\"vertical-collpsed\");\r\n      body.classList.toggle(\"sidebar-enable\");\r\n    }\r\n\r\n    props.toggleLeftmenu(!props.leftMenu);\r\n    if (props.leftSideBarType === \"default\") {\r\n      props.changeSidebarType(\"condensed\", isMobile);\r\n    } else if (props.leftSideBarType === \"condensed\") {\r\n      props.changeSidebarType(\"default\", isMobile);\r\n    }\r\n  }\r\n\r\n  function toggleMegaMenu() {\r\n    setShowMegaMenu(!showMegaMenu);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showMegaMenu ? <MegaMenu /> : null}\r\n      <header id=\"page-topbar\">\r\n        <div className=\"navbar-header\">\r\n          <div className=\"d-flex\">\r\n            <div className=\"navbar-brand-box\">\r\n              <Link to=\"/\" className=\"logo logo-dark\">\r\n                <span className=\"logo-sm\">\r\n                  <img src={logoSm} alt=\"\" height=\"22\" />\r\n                </span>\r\n                <span className=\"logo-lg\">\r\n                  <img src={logoDark} alt=\"\" height=\"20\" />\r\n                </span>\r\n              </Link>\r\n\r\n              <Link to=\"/\" className=\"logo logo-light\">\r\n                <span className=\"logo-sm\">\r\n                  <img src={logoSm} alt=\"\" height=\"22\" />\r\n                </span>\r\n                <span className=\"logo-lg\">\r\n                  <img src={logoLight} alt=\"\" height=\"20\" />\r\n                </span>\r\n              </Link>\r\n            </div>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                tToggle();\r\n              }}\r\n              className=\"btn btn-sm px-3 font-size-16 header-item waves-effect vertical-menu-btn\"\r\n              id=\"vertical-menu-btn\"\r\n            >\r\n              <i className=\"fa fa-fw fa-bars\" />\r\n            </button>\r\n\r\n            {/* <div\r\n              className=\"app-search d-none d-lg-block mt-2\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <div\r\n                className=\"position-relative\"\r\n                onClick={() => toggleMegaMenu()}\r\n              >\r\n                Mega Menu\r\n                <i class=\"fas fa-sort-down\"></i>\r\n              </div>\r\n            </div> */}\r\n\r\n            <Form className=\"app-search d-none d-lg-block\">\r\n              <div className=\"position-relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder={props.t(\"Search\") + \"...\"}\r\n                />\r\n                <span className=\"uil-search\"></span>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n\r\n          <div className=\"d-flex\">\r\n            <Dropdown\r\n              className=\"d-inline-block d-lg-none ms-2\"\r\n              onClick={() => {\r\n                setsearch(!search);\r\n              }}\r\n              type=\"button\"\r\n            >\r\n              <DropdownToggle\r\n                className=\"btn header-item noti-icon waves-effect\"\r\n                id=\"page-header-search-dropdown\"\r\n                tag=\"button\"\r\n              >\r\n                {\" \"}\r\n                <i className=\"uil-search\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"dropdown-menu-lg dropdown-menu-end p-0\">\r\n                <Form className=\"p-3\">\r\n                  <div className=\"form-group m-0\">\r\n                    <div className=\"input-group\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search ...\"\r\n                        aria-label=\"Recipient's username\"\r\n                      />\r\n                      <div className=\"input-group-append\">\r\n                        <Button className=\"btn btn-primary\" type=\"submit\">\r\n                          <i className=\"mdi mdi-magnify\"></i>\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n\r\n            <Dropdown\r\n              className=\"d-none d-lg-inline-block ms-1\"\r\n              isOpen={socialDrp}\r\n              toggle={() => {\r\n                setsocialDrp(!socialDrp);\r\n              }}\r\n            >\r\n              <DropdownToggle\r\n                className=\"btn header-item noti-icon waves-effect\"\r\n                tag=\"button\"\r\n              >\r\n                <i className=\"uil-apps\"></i>\r\n              </DropdownToggle>\r\n              <DropdownMenu\r\n                className=\"dropdown-menu-lg dropdown-menu-end\"\r\n                right\r\n              >\r\n                <div className=\"px-lg-2\">\r\n                  <Row className=\"g-0\">\r\n                    <Col>\r\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                        <img src={github} alt=\"Github\" />\r\n                        <span>GitHub</span>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col>\r\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                        <img src={bitbucket} alt=\"bitbucket\" />\r\n                        <span>Bitbucket</span>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col>\r\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                        <img src={dribbble} alt=\"dribbble\" />\r\n                        <span>Dribbble</span>\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"g-0\">\r\n                    <Col>\r\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                        <img src={dropbox} alt=\"dropbox\" />\r\n                        <span>Dropbox</span>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col>\r\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                        <img src={mail_chimp} alt=\"mail_chimp\" />\r\n                        <span>Mail Chimp</span>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col>\r\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\r\n                        <img src={slack} alt=\"slack\" />\r\n                        <span>Slack</span>\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n\r\n            <Dropdown className=\"d-none d-lg-inline-block ms-1\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleFullscreen();\r\n                }}\r\n                className=\"btn header-item noti-icon waves-effect\"\r\n                data-toggle=\"fullscreen\"\r\n              >\r\n                <i className=\"uil-minus-path\"></i>\r\n              </button>\r\n            </Dropdown>\r\n\r\n            <NotificationDropdown />\r\n\r\n            <div\r\n              // onClick={() => {\r\n              //   props.showRightSidebarAction(!props.showRightSidebar);\r\n              // }}\r\n              className=\"dropdown d-inline-block\"\r\n            >\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn header-item noti-icon right-bar-toggle waves-effect\"\r\n              >\r\n                <i className=\"uil-cog\"></i>\r\n              </button>\r\n            </div>\r\n\r\n            <ProfileMenu />\r\n\r\n            <Link to=\"/logout\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn header-item noti-icon right-bar-toggle waves-effect\"\r\n              >\r\n                <i\r\n                  class=\"fas fa-power-off\"\r\n                  style={{\r\n                    fontSize: \"1.2em\",\r\n                  }}\r\n                ></i>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  changeSidebarType: PropTypes.func,\r\n  leftMenu: PropTypes.any,\r\n  leftSideBarType: PropTypes.any,\r\n  showRightSidebar: PropTypes.any,\r\n  showRightSidebarAction: PropTypes.func,\r\n  t: PropTypes.any,\r\n  toggleLeftmenu: PropTypes.func,\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  const { layoutType, showRightSidebar, leftMenu, leftSideBarType } =\r\n    state.Layout;\r\n  return { layoutType, showRightSidebar, leftMenu, leftSideBarType };\r\n};\r\n\r\nexport default connect(mapStatetoProps, {\r\n  showRightSidebarAction,\r\n  toggleLeftmenu,\r\n  changeSidebarType,\r\n})(withTranslation()(Header));\r\n","E:\\hazelgreen\\client\\src\\components\\VerticalLayout\\Sidebar.js",[],"E:\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Register.js",[],"E:\\hazelgreen\\client\\src\\pages\\Authentication\\ForgetPassword.js",["850"],"import PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Row, Col, Alert, Container, CardBody, Card } from \"reactstrap\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\n// availity-reactstrap-validation\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n// action\r\nimport { userForgetPassword } from \"../../store/actions\";\r\n\r\n// import images\r\nimport logo from \"../../assets/images/logo-dark.png\";\r\nimport logolight from \"../../assets/images/logo-light.png\";\r\n\r\nconst ForgetPasswordPage = (props) => {\r\n  useEffect(() => {\r\n    document.body.className = \"authentication-bg\";\r\n    // remove classname when component will unmount\r\n    return function cleanup() {\r\n      document.body.className = \"\";\r\n    };\r\n  });\r\n\r\n  function handleValidSubmit(event, values) {\r\n    props.userForgetPassword(values, props.history);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"account-pages-container\">\r\n        <div className=\"home-btn d-none d-sm-block\">\r\n          <Link to=\"/\" className=\"text-dark\">\r\n            <i className=\"mdi mdi-home-variant h2\"></i>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"account-pages my-5  pt-sm-5\">\r\n          <Container>\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-md-8 col-lg-6 col-xl-5\">\r\n                <div>\r\n                  <Card>\r\n                    <CardBody className=\"p-4\">\r\n                      <div className=\"row\">\r\n                        <a href=\"/\" className=\"mb-3 d-block auth-logo\">\r\n                          <img\r\n                            src={logo}\r\n                            alt=\"\"\r\n                            height=\"22\"\r\n                            className=\"logo logo-dark\"\r\n                          />\r\n                          <img\r\n                            src={logolight}\r\n                            alt=\"\"\r\n                            height=\"22\"\r\n                            className=\"logo logo-light\"\r\n                          />\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"text-center mt-2\">\r\n                        <h5 className=\"text-primary\">Reset Password</h5>\r\n                        <p className=\"text-muted\">\r\n                          Reset Password with Minible.\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"p-2 mt-4\">\r\n                        <div\r\n                          className=\"alert alert-success text-center mb-4\"\r\n                          role=\"alert\"\r\n                        >\r\n                          Enter your Email and instructions will be sent to you!\r\n                        </div>\r\n                        {props.forgetError && props.forgetError ? (\r\n                          <Alert\r\n                            color=\"danger\"\r\n                            className=\"text-center mb-4\"\r\n                            style={{ marginTop: \"13px\" }}\r\n                          >\r\n                            {props.forgetError}\r\n                          </Alert>\r\n                        ) : null}\r\n                        {props.forgetSuccessMsg ? (\r\n                          <Alert\r\n                            color=\"success\"\r\n                            className=\"text-center mb-4\"\r\n                            style={{ marginTop: \"13px\" }}\r\n                          >\r\n                            {props.forgetSuccessMsg}\r\n                          </Alert>\r\n                        ) : null}\r\n\r\n                        <AvForm\r\n                          className=\"form-horizontal\"\r\n                          onValidSubmit={(e, v) => handleValidSubmit(e, v)}\r\n                        >\r\n                          <div className=\"mb-3\">\r\n                            <AvField\r\n                              name=\"email\"\r\n                              label=\"Email\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Enter email\"\r\n                              type=\"email\"\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <Row className=\"row mb-0\">\r\n                            <Col className=\"col-12 text-end\">\r\n                              <button\r\n                                className=\"btn btn-primary w-md waves-effect waves-light\"\r\n                                type=\"submit\"\r\n                              >\r\n                                Reset\r\n                              </button>\r\n                            </Col>\r\n                          </Row>\r\n                          <div className=\"mt-4 text-center\">\r\n                            <p className=\"mb-0\">\r\n                              Remember It ?{\" \"}\r\n                              <Link\r\n                                to=\"/login\"\r\n                                className=\"fw-medium text-primary\"\r\n                              >\r\n                                {\" \"}\r\n                                Signin{\" \"}\r\n                              </Link>\r\n                            </p>\r\n                          </div>\r\n                        </AvForm>\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                  <div className=\"mt-5 text-center text-dark\">\r\n                    <p>\r\n                      ©{new Date().getFullYear()} Cococa Ecommerce Private\r\n                      Limited.\r\n                      <a\r\n                        href=\"https://srvinfotech.com\"\r\n                        target=\"_blank\"\r\n                        style={{ color: \"#343a40\" }}\r\n                      >\r\n                        &nbsp;Powered by SRV InfoTech\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nForgetPasswordPage.propTypes = {\r\n  forgetError: PropTypes.any,\r\n  forgetSuccessMsg: PropTypes.any,\r\n  history: PropTypes.object,\r\n  userForgetPassword: PropTypes.func,\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  const { forgetError, forgetSuccessMsg } = state.ForgetPassword;\r\n  return { forgetError, forgetSuccessMsg };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStatetoProps, { userForgetPassword })(ForgetPasswordPage)\r\n);\r\n","E:\\hazelgreen\\client\\src\\pages\\Authentication\\Register.js",[],"E:\\hazelgreen\\client\\src\\pages\\AuthenticationInner\\Login.js",[],"E:\\hazelgreen\\client\\src\\pages\\Authentication\\Logout.js",[],"E:\\hazelgreen\\client\\src\\pages\\Authentication\\Login.js",["851","852","853"],"import PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Alert, Container, CardBody, Card } from \"reactstrap\";\r\nimport toastr from \"toastr\";\r\n\r\n// Redux\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\n// availity-reactstrap-validation\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n// actions\r\nimport { loginUser, apiError } from \"../../store/actions\";\r\n\r\n// import images\r\nimport logo from \"../../assets/images/logo-dark.png\";\r\nimport logolight from \"../../assets/images/logo-light.png\";\r\nimport { checkAuth } from \"../../store/actions\";\r\n\r\nconst Login = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const { loading, error, loginResponse } = useSelector((state) => state.Login);\r\n\r\n  useEffect(() => {\r\n    props.checkAuth(props.history);\r\n  }, []);\r\n\r\n  // handleValidSubmit\r\n  const handleValidSubmit = (event, values) => {\r\n    console.log(values, \"values\");\r\n    props.loginUser(values, props.history);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.className = \"authentication-bg\";\r\n    // remove classname when component will unmount\r\n    return function cleanup() {\r\n      document.body.className = \"\";\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (loginResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, loginResponse.message);\r\n    }\r\n  }, [loginResponse]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"account-pages-container\">\r\n        <div className=\"account-pages my-5 pt-sm-5\">\r\n          <Container>\r\n            <Row className=\"align-items-center justify-content-center\">\r\n              <Col md={8} lg={6} xl={5}>\r\n                <Card>\r\n                  <CardBody className=\"p-4\">\r\n                    <Row>\r\n                      <Col lg={12}>\r\n                        <div className=\"text-center\">\r\n                          <Link to=\"/\" className=\"mb-3 d-block auth-logo\">\r\n                            <img\r\n                              src={logo}\r\n                              alt=\"\"\r\n                              height=\"22\"\r\n                              className=\"logo logo-dark\"\r\n                            />\r\n                            <img\r\n                              src={logolight}\r\n                              alt=\"\"\r\n                              height=\"22\"\r\n                              className=\"logo logo-light\"\r\n                            />\r\n                          </Link>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"text-center mt-2\">\r\n                      <h5>Welcome Back !</h5>\r\n                      <p className=\"text-muted\">\r\n                        Sign in to continue to Hazel Green.\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"p-2 mt-4\">\r\n                      <AvForm\r\n                        className=\"form-horizontal\"\r\n                        onValidSubmit={(e, v) => {\r\n                          handleValidSubmit(e, v);\r\n                        }}\r\n                      >\r\n                        {props.error && typeof props.error === \"string\" ? (\r\n                          <Alert color=\"danger\">{props.error}</Alert>\r\n                        ) : null}\r\n\r\n                        <div className=\"mb-3\">\r\n                          <AvField\r\n                            name=\"username\"\r\n                            label=\"Username\"\r\n                            value={username}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Username\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                          <AvField\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            value={password}\r\n                            type=\"password\"\r\n                            required\r\n                            placeholder=\"Enter Password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                          />\r\n                        </div>\r\n\r\n                        <Row className=\"mt-4\">\r\n                          <Col lg={6}>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <AvField\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"customControlInline\"\r\n                                name=\"rememberMe\"\r\n                                value={rememberMe}\r\n                                onChange={() => setRememberMe(!rememberMe)}\r\n                              />\r\n                              <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"customControlInline\"\r\n                              >\r\n                                Remember me\r\n                              </label>\r\n                            </div>\r\n                          </Col>\r\n                          <Col lg={6} md={12} sm={12} className=\"right-button\">\r\n                            <div>\r\n                              <button\r\n                                disabled={loading ? true : false}\r\n                                className=\"btn btn-primary w-md waves-effect waves-light\"\r\n                                type=\"submit\"\r\n                              >\r\n                                {loading ? \"Logging in\" : \"Log In\"}\r\n                              </button>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <div className=\"mt-4\">\r\n                          <Link to=\"/forgot-password\" className=\"text-muted\">\r\n                            <i class=\"mdi mdi-lock\"></i>\r\n                            &nbsp;Forgot password?\r\n                          </Link>\r\n                        </div>\r\n                      </AvForm>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n                <div className=\"mt-5 text-center text-dark\">\r\n                  <p>\r\n                    ©{new Date().getFullYear()} Hazel Green.\r\n                    <a href=\"https://srvinfotech.com\" target=\"_blank\">\r\n                      &nbsp;Powered by SRV InfoTech\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { error } = state.Login;\r\n  return { error };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { loginUser, checkAuth, apiError })(Login)\r\n);\r\n\r\nLogin.propTypes = {\r\n  error: PropTypes.any,\r\n  history: PropTypes.object,\r\n  loginUser: PropTypes.func,\r\n  checkAuth: PropTypes.func,\r\n};\r\n","E:\\hazelgreen\\client\\src\\pages\\Maps\\MapsVector.js",[],"E:\\hazelgreen\\client\\src\\pages\\Maps\\MapsLeaflet.js",[],"E:\\hazelgreen\\client\\src\\common\\languages.js",[],"E:\\hazelgreen\\client\\src\\helpers\\firebase_helper.js",[],"E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\LayerGroup.js",[],"E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapLayerControl.js",[],"E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapMarkerCustomIcons.js",[],"E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapVectorLayers.js",[],"E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\MapWithPopup.js",[],"E:\\hazelgreen\\client\\src\\pages\\Maps\\LeafletMap\\SimpleMap.js",[],"E:\\hazelgreen\\client\\src\\pages\\Maps\\Vectormap.js",[],"E:\\hazelgreen\\client\\src\\components\\VerticalLayout\\SidebarContent.js",[],"E:\\hazelgreen\\client\\src\\i18n.js",[],"E:\\hazelgreen\\client\\src\\components\\MegaMenu\\MegaMenu.jsx",[],"E:\\hazelgreen\\client\\src\\pages\\Accounts\\AccountDetails\\index.js",["854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst AccountDetails = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const[accountType,setAccountType] = useState('');\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n//   let preUpdateUser = (item) => {\r\n//     if (item.privilage) {\r\n//       let privilage = {\r\n//         label: item.privilage.name,\r\n//         value: item.privilage._id,\r\n//       };\r\n//       handleSelectedPrivilage(privilage);\r\n//     }\r\n//     if (item.company) {\r\n//       let company = {\r\n//         label: item.company.name,\r\n//         value: item.company._id,\r\n//       };\r\n//       handleSelectedCompany(company);\r\n//     }\r\n//     if (item.branch) {\r\n//       let branch = {\r\n//         label: item.branch.name,\r\n//         value: item.branch._id,\r\n//       };\r\n//       handleSelectedBranch(branch);\r\n//     }\r\n\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setUserObject({ ...item, password: null });\r\n//   };\r\n\r\n//   let preUpdateUserPassword = (item) => {\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n            //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n            //   setUserIdToBeDeleted(item._id);\r\n            //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n    //   item.id = index + 1;\r\n    //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n    //   item.privilage1 = item.privilage && item.privilage.name;\r\n    //   item.company1 = item.company && item.company.name;\r\n    //   item.branch1 = item.branch && item.branch.name;\r\n    //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Account User\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n//   let privilagesOptionsData =\r\n//     privilagesOptions &&\r\n//     privilagesOptions.data &&\r\n//     privilagesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let companiesOptionsData =\r\n//     companiesOptions &&\r\n//     companiesOptions.data &&\r\n//     companiesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let branchesOptionsData =\r\n//     branchesOptions &&\r\n//     branchesOptions.data &&\r\n//     branchesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   const privilagesOptionsGroup = [\r\n//     {\r\n//       options: privilagesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const companiesOptionsGroup = [\r\n//     {\r\n//       options: companiesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const branchesOptionsGroup = [\r\n//     {\r\n//       options: branchesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   function handleChangeUser(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setUserObject({ ...userObject, [name]: value });\r\n//   }\r\n\r\n//   function handleSelectedPrivilage(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedPrivilage(value);\r\n//     setUserObject({ ...userObject, privilage: newValue });\r\n//   }\r\n\r\n//   function handleSelectedCompany(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedCompany(value);\r\n//     setUserObject({ ...userObject, company: newValue });\r\n//   }\r\n//   function handleSelectedBranch(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedBranch(value);\r\n//     setUserObject({ ...userObject, branch: newValue });\r\n//   }\r\n\r\n//   function handleChangePassword(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setPasswordObject({ ...passwordObject, [name]: value });\r\n//   }\r\n\r\n//   const handleValidSubmit = (event, values) => {\r\n//     userIdTobeUpdated\r\n//       ? dispatch(updateUser(userObject))\r\n//       : dispatch(addUser(userObject));\r\n//   };\r\n\r\n//   const handleValidSubmitPassword = (event, values) => {\r\n//     if (passwordObject.password == passwordObject.confirmPassword) {\r\n//       let item = {\r\n//         _id: userIdTobeUpdated,\r\n//         password: passwordObject.password,\r\n//       };\r\n//       dispatch(updateUser(item));\r\n//     } else {\r\n//       toastr.error(\"Passwords are not matching\");\r\n//     }\r\n//   };\r\n\r\n//   let closeModal = () => {\r\n//     setShowModal(false);\r\n//     setUserIdToBeUpdated(null);\r\n//   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Account Details\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                            <Label>Account Types</Label>\r\n                            <Select\r\n                              name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                              classNamePrefix=\"select2-selection\"\r\n                            />\r\n                          </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Account Type\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Account Type\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter account type\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                               onClick={() => setAccountType('')}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(AccountDetails));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","E:\\hazelgreen\\client\\src\\pages\\Accounts\\Account-Type\\index.js",["882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst AccountType = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const[accountType,setAccountType] = useState('');\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n//   let preUpdateUser = (item) => {\r\n//     if (item.privilage) {\r\n//       let privilage = {\r\n//         label: item.privilage.name,\r\n//         value: item.privilage._id,\r\n//       };\r\n//       handleSelectedPrivilage(privilage);\r\n//     }\r\n//     if (item.company) {\r\n//       let company = {\r\n//         label: item.company.name,\r\n//         value: item.company._id,\r\n//       };\r\n//       handleSelectedCompany(company);\r\n//     }\r\n//     if (item.branch) {\r\n//       let branch = {\r\n//         label: item.branch.name,\r\n//         value: item.branch._id,\r\n//       };\r\n//       handleSelectedBranch(branch);\r\n//     }\r\n\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setUserObject({ ...item, password: null });\r\n//   };\r\n\r\n//   let preUpdateUserPassword = (item) => {\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n            //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n            //   setUserIdToBeDeleted(item._id);\r\n            //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n    //   item.id = index + 1;\r\n    //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n    //   item.privilage1 = item.privilage && item.privilage.name;\r\n    //   item.company1 = item.company && item.company.name;\r\n    //   item.branch1 = item.branch && item.branch.name;\r\n    //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Account User\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n//   let privilagesOptionsData =\r\n//     privilagesOptions &&\r\n//     privilagesOptions.data &&\r\n//     privilagesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let companiesOptionsData =\r\n//     companiesOptions &&\r\n//     companiesOptions.data &&\r\n//     companiesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let branchesOptionsData =\r\n//     branchesOptions &&\r\n//     branchesOptions.data &&\r\n//     branchesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   const privilagesOptionsGroup = [\r\n//     {\r\n//       options: privilagesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const companiesOptionsGroup = [\r\n//     {\r\n//       options: companiesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const branchesOptionsGroup = [\r\n//     {\r\n//       options: branchesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   function handleChangeUser(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setUserObject({ ...userObject, [name]: value });\r\n//   }\r\n\r\n//   function handleSelectedPrivilage(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedPrivilage(value);\r\n//     setUserObject({ ...userObject, privilage: newValue });\r\n//   }\r\n\r\n//   function handleSelectedCompany(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedCompany(value);\r\n//     setUserObject({ ...userObject, company: newValue });\r\n//   }\r\n//   function handleSelectedBranch(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedBranch(value);\r\n//     setUserObject({ ...userObject, branch: newValue });\r\n//   }\r\n\r\n//   function handleChangePassword(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setPasswordObject({ ...passwordObject, [name]: value });\r\n//   }\r\n\r\n//   const handleValidSubmit = (event, values) => {\r\n//     userIdTobeUpdated\r\n//       ? dispatch(updateUser(userObject))\r\n//       : dispatch(addUser(userObject));\r\n//   };\r\n\r\n//   const handleValidSubmitPassword = (event, values) => {\r\n//     if (passwordObject.password == passwordObject.confirmPassword) {\r\n//       let item = {\r\n//         _id: userIdTobeUpdated,\r\n//         password: passwordObject.password,\r\n//       };\r\n//       dispatch(updateUser(item));\r\n//     } else {\r\n//       toastr.error(\"Passwords are not matching\");\r\n//     }\r\n//   };\r\n\r\n//   let closeModal = () => {\r\n//     setShowModal(false);\r\n//     setUserIdToBeUpdated(null);\r\n//   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Account Type\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Account Type\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Account Type\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter account type\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                               onClick={() => setAccountType('')}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(AccountType));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","E:\\hazelgreen\\client\\src\\pages\\Accounts\\Chart\\index.js",["911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst Chart = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const[accountType,setAccountType] = useState('');\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n//   let preUpdateUser = (item) => {\r\n//     if (item.privilage) {\r\n//       let privilage = {\r\n//         label: item.privilage.name,\r\n//         value: item.privilage._id,\r\n//       };\r\n//       handleSelectedPrivilage(privilage);\r\n//     }\r\n//     if (item.company) {\r\n//       let company = {\r\n//         label: item.company.name,\r\n//         value: item.company._id,\r\n//       };\r\n//       handleSelectedCompany(company);\r\n//     }\r\n//     if (item.branch) {\r\n//       let branch = {\r\n//         label: item.branch.name,\r\n//         value: item.branch._id,\r\n//       };\r\n//       handleSelectedBranch(branch);\r\n//     }\r\n\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setUserObject({ ...item, password: null });\r\n//   };\r\n\r\n//   let preUpdateUserPassword = (item) => {\r\n//     setUserIdToBeUpdated(item._id);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n            //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n            //   setUserIdToBeDeleted(item._id);\r\n            //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n    //   item.id = index + 1;\r\n    //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n    //   item.privilage1 = item.privilage && item.privilage.name;\r\n    //   item.company1 = item.company && item.company.name;\r\n    //   item.branch1 = item.branch && item.branch.name;\r\n    //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  // Account Type\tAccount Detail Type\tChart Name\tBalance\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Account Detail Type\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Chart Name\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Balance\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        width: 300,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n//   let privilagesOptionsData =\r\n//     privilagesOptions &&\r\n//     privilagesOptions.data &&\r\n//     privilagesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let companiesOptionsData =\r\n//     companiesOptions &&\r\n//     companiesOptions.data &&\r\n//     companiesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   let branchesOptionsData =\r\n//     branchesOptions &&\r\n//     branchesOptions.data &&\r\n//     branchesOptions.data.map((item) => {\r\n//       return {\r\n//         label: item.name,\r\n//         value: item._id,\r\n//       };\r\n//     });\r\n\r\n//   const privilagesOptionsGroup = [\r\n//     {\r\n//       options: privilagesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const companiesOptionsGroup = [\r\n//     {\r\n//       options: companiesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   const branchesOptionsGroup = [\r\n//     {\r\n//       options: branchesOptionsData,\r\n//     },\r\n//   ];\r\n\r\n//   function handleChangeUser(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setUserObject({ ...userObject, [name]: value });\r\n//   }\r\n\r\n//   function handleSelectedPrivilage(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedPrivilage(value);\r\n//     setUserObject({ ...userObject, privilage: newValue });\r\n//   }\r\n\r\n//   function handleSelectedCompany(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedCompany(value);\r\n//     setUserObject({ ...userObject, company: newValue });\r\n//   }\r\n//   function handleSelectedBranch(value) {\r\n//     let newValue = {\r\n//       name: value.label,\r\n//       _id: value.value,\r\n//     };\r\n//     setSelectedBranch(value);\r\n//     setUserObject({ ...userObject, branch: newValue });\r\n//   }\r\n\r\n//   function handleChangePassword(e) {\r\n//     let name = e.target.name;\r\n//     let value = e.target.value;\r\n//     setPasswordObject({ ...passwordObject, [name]: value });\r\n//   }\r\n\r\n//   const handleValidSubmit = (event, values) => {\r\n//     userIdTobeUpdated\r\n//       ? dispatch(updateUser(userObject))\r\n//       : dispatch(addUser(userObject));\r\n//   };\r\n\r\n//   const handleValidSubmitPassword = (event, values) => {\r\n//     if (passwordObject.password == passwordObject.confirmPassword) {\r\n//       let item = {\r\n//         _id: userIdTobeUpdated,\r\n//         password: passwordObject.password,\r\n//       };\r\n//       dispatch(updateUser(item));\r\n//     } else {\r\n//       toastr.error(\"Passwords are not matching\");\r\n//     }\r\n//   };\r\n\r\n//   let closeModal = () => {\r\n//     setShowModal(false);\r\n//     setUserIdToBeUpdated(null);\r\n//   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Chart of account\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                            <Label>Account Detail Type</Label>\r\n                            <Select\r\n                              name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                              classNamePrefix=\"select2-selection\"\r\n                            />\r\n                          </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Chart Name\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Chart Name\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter account type\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">\r\n                            Balance\r\n                          </Label>\r\n                          <AvField\r\n                            name=\"balance\"\r\n                            placeholder=\"Balance\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter balance\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                               onClick={() => setAccountType('')}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(Chart));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","E:\\hazelgreen\\client\\src\\pages\\Accounts\\FundTransfer\\index.js",["939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst Fund = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Reference ID\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Transfer From\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Transfer To\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Amount\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Comment\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"status\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Fund Transfer\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>From Fund Source</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>To Fund Source</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Amount</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Ammount\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Amount\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Comments</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Comments\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Comments\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                            onClick={() => setAccountType(\"\")}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(Fund));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","E:\\hazelgreen\\client\\src\\pages\\Accounts\\CreditDebit\\index.js",["967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst Credit = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Reference ID\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Chart Name\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Debit\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Credit\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Comment\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Added by\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Credit/Debit Fund\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Fund Source</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Type</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Amount</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Ammount\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Amount\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                     \r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Comments</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Comments\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Comments\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                            onClick={() => setAccountType(\"\")}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(connect(mapStateToProps, { apiError })(Credit));\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","E:\\hazelgreen\\client\\src\\pages\\Accounts\\IncomeExpenses\\index.js",["995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst IncomeExpense = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Account Detail Type\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Chart of Account\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Found Source\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Amount\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Total Amount\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Comment\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Staff\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Approved By\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Income/Expense\" />\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <AvForm\r\n                    className=\"needs-validation\"\r\n                    // onValidSubmit={(e, v) => {\r\n                    //   handleValidSubmit(e, v);\r\n                    // }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                          <div className=\"col-md-10\">\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              defaultValue=\"2019-08-19\"\r\n                              id=\"example-date-input\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Amount</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Amount\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Amount\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Account Type</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label> Account Details Type</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Charts of Account</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label>Fund Source</Label>\r\n                          <Select\r\n                            name=\"customer_community_id\"\r\n                            //   value={selectCommunity}\r\n                            //   onChange={(value) => {\r\n                            //     handleSelectedCommunities(value);\r\n                            //   }}\r\n                            //   options={communitiesOptionsGroup}\r\n                            classNamePrefix=\"select2-selection\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Amount</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Ammount\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Amount\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Comments</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Comments\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Comments\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Comments</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Comments\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Comments\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Comments</Label>\r\n                          <AvField\r\n                            name=\"accountType\"\r\n                            placeholder=\"Comments\"\r\n                            type=\"text\"\r\n                            errorMessage=\"Enter Comments\"\r\n                            className=\"form-control\"\r\n                            validate={{ required: { value: true } }}\r\n                            id=\"validationCustom05\"\r\n                            value={accountType}\r\n                            onChange={(e) => setAccountType(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      {/* <Col className=\"mb-3\">\r\n                        <label\r\n                          htmlFor=\"example-date-input\"\r\n                          className=\"col-md-2 col-form-label\"\r\n                        >\r\n                          Date\r\n                        </label>\r\n                        <div className=\"col-md-10\">\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            defaultValue=\"2019-08-19\"\r\n                            id=\"example-date-input\"\r\n                          />\r\n                        </div>\r\n                      </Col> */}\r\n\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"1\">\r\n                        <div className=\"mt-4\">\r\n                          <Button\r\n                            color=\"danger\"\r\n                            type=\"reset\"\r\n                            onClick={() => setAccountType(\"\")}\r\n                          >\r\n                            Reset\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </AvForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                        <div className=\"col-md-10\">\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            defaultValue=\"2019-08-19\"\r\n                            id=\"example-date-input\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>Expense</Label>\r\n                        <Select\r\n                          name=\"customer_community_id\"\r\n                          //   value={selectCommunity}\r\n                          //   onChange={(value) => {\r\n                          //     handleSelectedCommunities(value);\r\n                          //   }}\r\n                          //   options={communitiesOptionsGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>Account Detail Type</Label>\r\n                        <Select\r\n                          name=\"customer_community_id\"\r\n                          //   value={selectCommunity}\r\n                          //   onChange={(value) => {\r\n                          //     handleSelectedCommunities(value);\r\n                          //   }}\r\n                          //   options={communitiesOptionsGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>Account Chart</Label>\r\n                        <Select\r\n                          name=\"customer_community_id\"\r\n                          //   value={selectCommunity}\r\n                          //   onChange={(value) => {\r\n                          //     handleSelectedCommunities(value);\r\n                          //   }}\r\n                          //   options={communitiesOptionsGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>Staff</Label>\r\n                        <Select\r\n                          name=\"customer_community_id\"\r\n                          //   value={selectCommunity}\r\n                          //   onChange={(value) => {\r\n                          //     handleSelectedCommunities(value);\r\n                          //   }}\r\n                          //   options={communitiesOptionsGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <MDBDataTable\r\n                    responsive\r\n                    bordered\r\n                    data={data}\r\n                    searching={true}\r\n                    paging={false}\r\n                    info={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { apiError })(IncomeExpense)\r\n);\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n","E:\\hazelgreen\\client\\src\\pages\\Accounts\\TransactionLog\\index.js",["1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport toastr from \"toastr\";\r\nimport { Row, Col, Card, CardBody, Button, Label, Modal } from \"reactstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  getUsers,\r\n  addUser,\r\n  deleteUser,\r\n  apiError,\r\n  getPrivilagesOptions,\r\n  getCompaniesOptions,\r\n  getBranchesOptions,\r\n  updateUser,\r\n  //getPrivilagesOptions,\r\n} from \"../../../store/actions\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\n// import \"./user.scss\";\r\n\r\nconst TransactionLog = (props) => {\r\n  //  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedPrivilage, setSelectedPrivilage] = useState(null);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userObject, setUserObject] = useState({});\r\n  const [userIdTobeUpdated, setUserIdToBeUpdated] = useState(null);\r\n  const [userIdToBeDeleted, setUserIdToBeDeleted] = useState(null);\r\n  const [confirmDeleteAlert, setConfirmDeleteAlert] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [usersForTable, setUsersForTable] = useState([]);\r\n  const [accountType, setAccountType] = useState(\"\");\r\n\r\n  const [passwordObject, setPasswordObject] = useState({\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    users,\r\n    addingUser,\r\n    addUserResponse,\r\n    deleteUserResponse,\r\n    updateUserResponse,\r\n    error,\r\n  } = useSelector((state) => state.users);\r\n\r\n  // const districtsOptions = useSelector(\r\n  //   (state) => state.districts.districtsOptions\r\n  // );\r\n\r\n  const privilagesOptions = useSelector(\r\n    (state) => state.privilages.privilagesOptions\r\n  );\r\n  const companiesOptions = useSelector(\r\n    (state) => state.companies.companiesOptions\r\n  );\r\n  const branchesOptions = useSelector(\r\n    (state) => state.branches.branchesOptions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getPrivilagesOptions());\r\n    dispatch(getCompaniesOptions());\r\n    //  dispatch(getDistrictsOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany !== null) {\r\n      dispatch(getBranchesOptions(selectedCompany.value));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    if (addUserResponse.type === \"success\") {\r\n      toastr.success(addUserResponse.message);\r\n      setSelectedPrivilage({});\r\n      setSelectedCompany(null);\r\n      setSelectedBranch(null);\r\n      //  setSelectedDistrict(null);\r\n    } else if (addUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, addUserResponse.message);\r\n    }\r\n  }, [addUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResponse.type === \"success\") {\r\n      toastr.success(deleteUserResponse.message);\r\n      setUserIdToBeDeleted(null);\r\n    } else if (deleteUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, deleteUserResponse.message);\r\n    }\r\n  }, [deleteUserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (updateUserResponse.type === \"success\") {\r\n      setShowModal(false);\r\n      setUserIdToBeUpdated(null);\r\n      setPasswordObject({});\r\n      toastr.success(updateUserResponse.message);\r\n    } else if (updateUserResponse.type === \"failure\") {\r\n      toastr.error(error.data.message, updateUserResponse.message);\r\n    }\r\n  }, [updateUserResponse]);\r\n\r\n  //   let preUpdateUser = (item) => {\r\n  //     if (item.privilage) {\r\n  //       let privilage = {\r\n  //         label: item.privilage.name,\r\n  //         value: item.privilage._id,\r\n  //       };\r\n  //       handleSelectedPrivilage(privilage);\r\n  //     }\r\n  //     if (item.company) {\r\n  //       let company = {\r\n  //         label: item.company.name,\r\n  //         value: item.company._id,\r\n  //       };\r\n  //       handleSelectedCompany(company);\r\n  //     }\r\n  //     if (item.branch) {\r\n  //       let branch = {\r\n  //         label: item.branch.name,\r\n  //         value: item.branch._id,\r\n  //       };\r\n  //       handleSelectedBranch(branch);\r\n  //     }\r\n\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setUserObject({ ...item, password: null });\r\n  //   };\r\n\r\n  //   let preUpdateUserPassword = (item) => {\r\n  //     setUserIdToBeUpdated(item._id);\r\n  //     setShowModal(true);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    let userData = [];\r\n\r\n    users.map((item, index) => {\r\n      item.action = (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <i\r\n            className=\"uil-key-skeleton\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              preUpdateUserPassword(item);\r\n            }}\r\n          ></i> */}\r\n          <i\r\n            className=\"uil-edit-alt\"\r\n            style={{\r\n              fontSize: \"1.3em\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"1rem\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => {\r\n              //   preUpdateUser(item);\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"uil-trash-alt\"\r\n            style={{ fontSize: \"1.3em\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              //   setUserIdToBeDeleted(item._id);\r\n              //   setConfirmDeleteAlert(true);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n      //   item.id = index + 1;\r\n      //   item.name1 = `${item.firstName} ${item.lastName}`;\r\n\r\n      //   item.privilage1 = item.privilage && item.privilage.name;\r\n      //   item.company1 = item.company && item.company.name;\r\n      //   item.branch1 = item.branch && item.branch.name;\r\n      //   userData.push(item);\r\n    });\r\n    // setUsersForTable(userData);\r\n  }, [users]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"id\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"district\",\r\n        sort: \"asc\",\r\n        width: 400,\r\n      },\r\n      {\r\n        label: \"Time\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Acc Category\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Account\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Reference ID\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Debit\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tCredit\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Balance\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"\tRemark\t\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"localbodytype\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: usersForTable,\r\n  };\r\n\r\n  //   let privilagesOptionsData =\r\n  //     privilagesOptions &&\r\n  //     privilagesOptions.data &&\r\n  //     privilagesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let companiesOptionsData =\r\n  //     companiesOptions &&\r\n  //     companiesOptions.data &&\r\n  //     companiesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   let branchesOptionsData =\r\n  //     branchesOptions &&\r\n  //     branchesOptions.data &&\r\n  //     branchesOptions.data.map((item) => {\r\n  //       return {\r\n  //         label: item.name,\r\n  //         value: item._id,\r\n  //       };\r\n  //     });\r\n\r\n  //   const privilagesOptionsGroup = [\r\n  //     {\r\n  //       options: privilagesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const companiesOptionsGroup = [\r\n  //     {\r\n  //       options: companiesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   const branchesOptionsGroup = [\r\n  //     {\r\n  //       options: branchesOptionsData,\r\n  //     },\r\n  //   ];\r\n\r\n  //   function handleChangeUser(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setUserObject({ ...userObject, [name]: value });\r\n  //   }\r\n\r\n  //   function handleSelectedPrivilage(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedPrivilage(value);\r\n  //     setUserObject({ ...userObject, privilage: newValue });\r\n  //   }\r\n\r\n  //   function handleSelectedCompany(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedCompany(value);\r\n  //     setUserObject({ ...userObject, company: newValue });\r\n  //   }\r\n  //   function handleSelectedBranch(value) {\r\n  //     let newValue = {\r\n  //       name: value.label,\r\n  //       _id: value.value,\r\n  //     };\r\n  //     setSelectedBranch(value);\r\n  //     setUserObject({ ...userObject, branch: newValue });\r\n  //   }\r\n\r\n  //   function handleChangePassword(e) {\r\n  //     let name = e.target.name;\r\n  //     let value = e.target.value;\r\n  //     setPasswordObject({ ...passwordObject, [name]: value });\r\n  //   }\r\n\r\n  //   const handleValidSubmit = (event, values) => {\r\n  //     userIdTobeUpdated\r\n  //       ? dispatch(updateUser(userObject))\r\n  //       : dispatch(addUser(userObject));\r\n  //   };\r\n\r\n  //   const handleValidSubmitPassword = (event, values) => {\r\n  //     if (passwordObject.password == passwordObject.confirmPassword) {\r\n  //       let item = {\r\n  //         _id: userIdTobeUpdated,\r\n  //         password: passwordObject.password,\r\n  //       };\r\n  //       dispatch(updateUser(item));\r\n  //     } else {\r\n  //       toastr.error(\"Passwords are not matching\");\r\n  //     }\r\n  //   };\r\n\r\n  //   let closeModal = () => {\r\n  //     setShowModal(false);\r\n  //     setUserIdToBeUpdated(null);\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          <Breadcrumbs title=\"Home\" breadcrumbItem=\"Transaction Log\" />\r\n\r\n          <Col className=\"col-12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"4\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Transaction Type</Label>\r\n                      <Select\r\n                        name=\"customer_community_id\"\r\n                        //   value={selectCommunity}\r\n                        //   onChange={(value) => {\r\n                        //     handleSelectedCommunities(value);\r\n                        //   }}\r\n                        //   options={communitiesOptionsGroup}\r\n                        classNamePrefix=\"select2-selection\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col md=\"4\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>Month</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"month\"\r\n                        defaultValue=\"2019-08\"\r\n                        id=\"example-month-input\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"4\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"validationCustom05\">Date</Label>\r\n                      <div className=\"col-md-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          defaultValue=\"2019-08-19\"\r\n                          id=\"example-date-input\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <MDBDataTable\r\n                  responsive\r\n                  bordered\r\n                  data={data}\r\n                  searching={true}\r\n                  paging={false}\r\n                  info={false}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { apiError })(TransactionLog)\r\n);\r\n\r\n// Users.propTypes = {\r\n//   error: PropTypes.any,\r\n//   users: PropTypes.array,\r\n// };\r\n",{"ruleId":"1056","replacedBy":"1057"},{"ruleId":"1058","replacedBy":"1059"},{"ruleId":"1060","severity":1,"message":"1061","line":48,"column":6,"nodeType":"1062","endLine":48,"endColumn":8,"suggestions":"1063"},{"ruleId":"1064","severity":1,"message":"1065","line":44,"column":9,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1068","line":14,"column":8,"nodeType":"1066","messageId":"1067","endLine":14,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1069","line":12,"column":8,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1070","line":13,"column":8,"nodeType":"1066","messageId":"1067","endLine":13,"endColumn":22},{"ruleId":"1064","severity":1,"message":"1071","line":14,"column":8,"nodeType":"1066","messageId":"1067","endLine":14,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1072","line":15,"column":8,"nodeType":"1066","messageId":"1067","endLine":15,"endColumn":25},{"ruleId":"1060","severity":1,"message":"1073","line":72,"column":6,"nodeType":"1062","endLine":72,"endColumn":8,"suggestions":"1074"},{"ruleId":"1060","severity":1,"message":"1073","line":78,"column":6,"nodeType":"1062","endLine":78,"endColumn":23,"suggestions":"1075"},{"ruleId":"1060","severity":1,"message":"1076","line":89,"column":6,"nodeType":"1062","endLine":89,"endColumn":23,"suggestions":"1077"},{"ruleId":"1060","severity":1,"message":"1076","line":98,"column":6,"nodeType":"1062","endLine":98,"endColumn":26,"suggestions":"1078"},{"ruleId":"1060","severity":1,"message":"1076","line":109,"column":6,"nodeType":"1062","endLine":109,"endColumn":26,"suggestions":"1079"},{"ruleId":"1080","severity":1,"message":"1081","line":146,"column":29,"nodeType":"1082","messageId":"1083","endLine":146,"endColumn":31},{"ruleId":"1060","severity":1,"message":"1084","line":187,"column":6,"nodeType":"1062","endLine":187,"endColumn":13,"suggestions":"1085"},{"ruleId":"1086","severity":1,"message":"1087","line":341,"column":33,"nodeType":"1088","messageId":"1089","endLine":341,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1090","line":31,"column":10,"nodeType":"1066","messageId":"1067","endLine":31,"endColumn":16},{"ruleId":"1091","severity":1,"message":"1092","line":121,"column":21,"nodeType":"1093","endLine":121,"endColumn":71},{"ruleId":"1064","severity":1,"message":"1094","line":9,"column":3,"nodeType":"1066","messageId":"1067","endLine":9,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1095","line":12,"column":3,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1096","line":8,"column":3,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":12},{"ruleId":"1064","severity":1,"message":"1094","line":9,"column":3,"nodeType":"1066","messageId":"1067","endLine":9,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1097","line":1,"column":8,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1098","line":14,"column":22,"nodeType":"1066","messageId":"1067","endLine":14,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1099","line":1,"column":32,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":42},{"ruleId":"1064","severity":1,"message":"1100","line":1,"column":27,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1101","line":1,"column":37,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1102","line":5,"column":10,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1103","line":5,"column":37,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":60},{"ruleId":"1064","severity":1,"message":"1104","line":10,"column":3,"nodeType":"1066","messageId":"1067","endLine":10,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1105","line":11,"column":3,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1106","line":14,"column":7,"nodeType":"1066","messageId":"1067","endLine":14,"endColumn":22},{"ruleId":"1064","severity":1,"message":"1100","line":1,"column":27,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1101","line":1,"column":37,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1107","line":5,"column":10,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1108","line":5,"column":26,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":38},{"ruleId":"1064","severity":1,"message":"1109","line":10,"column":3,"nodeType":"1066","messageId":"1067","endLine":10,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1110","line":11,"column":3,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1106","line":14,"column":7,"nodeType":"1066","messageId":"1067","endLine":14,"endColumn":22},{"ruleId":"1064","severity":1,"message":"1099","line":1,"column":32,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":42},{"ruleId":"1064","severity":1,"message":"1111","line":31,"column":11,"nodeType":"1066","messageId":"1067","endLine":31,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1100","line":1,"column":27,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1101","line":1,"column":37,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1112","line":5,"column":10,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1113","line":5,"column":34,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":52},{"ruleId":"1064","severity":1,"message":"1114","line":10,"column":3,"nodeType":"1066","messageId":"1067","endLine":10,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1115","line":11,"column":3,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1106","line":15,"column":7,"nodeType":"1066","messageId":"1067","endLine":15,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1116","line":83,"column":25,"nodeType":"1088","messageId":"1089","endLine":83,"endColumn":27},{"ruleId":"1117","severity":1,"message":"1118","line":89,"column":9,"nodeType":"1119","messageId":"1089","endLine":89,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1087","line":117,"column":22,"nodeType":"1088","messageId":"1089","endLine":117,"endColumn":24},{"ruleId":"1117","severity":1,"message":"1120","line":127,"column":9,"nodeType":"1119","messageId":"1089","endLine":127,"endColumn":21},{"ruleId":"1091","severity":1,"message":"1092","line":18,"column":19,"nodeType":"1093","endLine":22,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1121","line":90,"column":12,"nodeType":"1066","messageId":"1067","endLine":90,"endColumn":26},{"ruleId":"1091","severity":1,"message":"1092","line":140,"column":23,"nodeType":"1093","endLine":144,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1122","line":30,"column":6,"nodeType":"1062","endLine":30,"endColumn":8,"suggestions":"1123"},{"ruleId":"1060","severity":1,"message":"1076","line":50,"column":6,"nodeType":"1062","endLine":50,"endColumn":21,"suggestions":"1124"},{"ruleId":"1091","severity":1,"message":"1092","line":168,"column":21,"nodeType":"1093","endLine":168,"endColumn":71},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":8,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1126","line":6,"column":51,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1127","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1128","line":11,"column":3,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":10},{"ruleId":"1064","severity":1,"message":"1129","line":12,"column":3,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1130","line":17,"column":3,"nodeType":"1066","messageId":"1067","endLine":17,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1131","line":33,"column":10,"nodeType":"1066","messageId":"1067","endLine":33,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1132","line":35,"column":10,"nodeType":"1066","messageId":"1067","endLine":35,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1133","line":36,"column":10,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1134","line":36,"column":22,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1135","line":37,"column":10,"nodeType":"1066","messageId":"1067","endLine":37,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1136","line":38,"column":10,"nodeType":"1066","messageId":"1067","endLine":38,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1137","line":39,"column":10,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1138","line":39,"column":30,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1139","line":40,"column":10,"nodeType":"1066","messageId":"1067","endLine":40,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1140","line":41,"column":25,"nodeType":"1066","messageId":"1067","endLine":41,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1141","line":44,"column":10,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1142","line":52,"column":5,"nodeType":"1066","messageId":"1067","endLine":52,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1143","line":63,"column":9,"nodeType":"1066","messageId":"1067","endLine":63,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1144","line":66,"column":9,"nodeType":"1066","messageId":"1067","endLine":66,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1145","line":69,"column":9,"nodeType":"1066","messageId":"1067","endLine":69,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1073","line":80,"column":6,"nodeType":"1062","endLine":80,"endColumn":8,"suggestions":"1146"},{"ruleId":"1060","severity":1,"message":"1073","line":86,"column":6,"nodeType":"1062","endLine":86,"endColumn":23,"suggestions":"1147"},{"ruleId":"1060","severity":1,"message":"1076","line":98,"column":6,"nodeType":"1062","endLine":98,"endColumn":23,"suggestions":"1148"},{"ruleId":"1060","severity":1,"message":"1076","line":107,"column":6,"nodeType":"1062","endLine":107,"endColumn":26,"suggestions":"1149"},{"ruleId":"1060","severity":1,"message":"1076","line":118,"column":6,"nodeType":"1062","endLine":118,"endColumn":26,"suggestions":"1150"},{"ruleId":"1064","severity":1,"message":"1151","line":153,"column":9,"nodeType":"1066","messageId":"1067","endLine":153,"endColumn":17},{"ruleId":"1080","severity":1,"message":"1081","line":155,"column":29,"nodeType":"1082","messageId":"1083","endLine":155,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":8,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1126","line":6,"column":51,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1127","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1152","line":8,"column":8,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1128","line":11,"column":3,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":10},{"ruleId":"1064","severity":1,"message":"1129","line":12,"column":3,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1130","line":17,"column":3,"nodeType":"1066","messageId":"1067","endLine":17,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1131","line":33,"column":10,"nodeType":"1066","messageId":"1067","endLine":33,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1132","line":35,"column":10,"nodeType":"1066","messageId":"1067","endLine":35,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1133","line":36,"column":10,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1134","line":36,"column":22,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1135","line":37,"column":10,"nodeType":"1066","messageId":"1067","endLine":37,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1136","line":38,"column":10,"nodeType":"1066","messageId":"1067","endLine":38,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1137","line":39,"column":10,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1138","line":39,"column":30,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1139","line":40,"column":10,"nodeType":"1066","messageId":"1067","endLine":40,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1140","line":41,"column":25,"nodeType":"1066","messageId":"1067","endLine":41,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1141","line":44,"column":10,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1142","line":52,"column":5,"nodeType":"1066","messageId":"1067","endLine":52,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1143","line":63,"column":9,"nodeType":"1066","messageId":"1067","endLine":63,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1144","line":66,"column":9,"nodeType":"1066","messageId":"1067","endLine":66,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1145","line":69,"column":9,"nodeType":"1066","messageId":"1067","endLine":69,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1073","line":80,"column":6,"nodeType":"1062","endLine":80,"endColumn":8,"suggestions":"1153"},{"ruleId":"1060","severity":1,"message":"1073","line":86,"column":6,"nodeType":"1062","endLine":86,"endColumn":23,"suggestions":"1154"},{"ruleId":"1060","severity":1,"message":"1076","line":98,"column":6,"nodeType":"1062","endLine":98,"endColumn":23,"suggestions":"1155"},{"ruleId":"1060","severity":1,"message":"1076","line":107,"column":6,"nodeType":"1062","endLine":107,"endColumn":26,"suggestions":"1156"},{"ruleId":"1060","severity":1,"message":"1076","line":118,"column":6,"nodeType":"1062","endLine":118,"endColumn":26,"suggestions":"1157"},{"ruleId":"1064","severity":1,"message":"1151","line":153,"column":9,"nodeType":"1066","messageId":"1067","endLine":153,"endColumn":17},{"ruleId":"1080","severity":1,"message":"1081","line":155,"column":29,"nodeType":"1082","messageId":"1083","endLine":155,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":8,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1126","line":6,"column":51,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1127","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1128","line":11,"column":3,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":10},{"ruleId":"1064","severity":1,"message":"1129","line":12,"column":3,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1130","line":17,"column":3,"nodeType":"1066","messageId":"1067","endLine":17,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1131","line":33,"column":10,"nodeType":"1066","messageId":"1067","endLine":33,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1132","line":35,"column":10,"nodeType":"1066","messageId":"1067","endLine":35,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1133","line":36,"column":10,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1134","line":36,"column":22,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1135","line":37,"column":10,"nodeType":"1066","messageId":"1067","endLine":37,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1136","line":38,"column":10,"nodeType":"1066","messageId":"1067","endLine":38,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1137","line":39,"column":10,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1138","line":39,"column":30,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1139","line":40,"column":10,"nodeType":"1066","messageId":"1067","endLine":40,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1140","line":41,"column":25,"nodeType":"1066","messageId":"1067","endLine":41,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1141","line":44,"column":10,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1142","line":52,"column":5,"nodeType":"1066","messageId":"1067","endLine":52,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1143","line":63,"column":9,"nodeType":"1066","messageId":"1067","endLine":63,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1144","line":66,"column":9,"nodeType":"1066","messageId":"1067","endLine":66,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1145","line":69,"column":9,"nodeType":"1066","messageId":"1067","endLine":69,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1073","line":80,"column":6,"nodeType":"1062","endLine":80,"endColumn":8,"suggestions":"1158"},{"ruleId":"1060","severity":1,"message":"1073","line":86,"column":6,"nodeType":"1062","endLine":86,"endColumn":23,"suggestions":"1159"},{"ruleId":"1060","severity":1,"message":"1076","line":98,"column":6,"nodeType":"1062","endLine":98,"endColumn":23,"suggestions":"1160"},{"ruleId":"1060","severity":1,"message":"1076","line":107,"column":6,"nodeType":"1062","endLine":107,"endColumn":26,"suggestions":"1161"},{"ruleId":"1060","severity":1,"message":"1076","line":118,"column":6,"nodeType":"1062","endLine":118,"endColumn":26,"suggestions":"1162"},{"ruleId":"1064","severity":1,"message":"1151","line":153,"column":9,"nodeType":"1066","messageId":"1067","endLine":153,"endColumn":17},{"ruleId":"1080","severity":1,"message":"1081","line":155,"column":29,"nodeType":"1082","messageId":"1083","endLine":155,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":8,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1126","line":6,"column":51,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1127","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1128","line":11,"column":3,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":10},{"ruleId":"1064","severity":1,"message":"1129","line":12,"column":3,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1130","line":17,"column":3,"nodeType":"1066","messageId":"1067","endLine":17,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1131","line":33,"column":10,"nodeType":"1066","messageId":"1067","endLine":33,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1132","line":35,"column":10,"nodeType":"1066","messageId":"1067","endLine":35,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1133","line":36,"column":10,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1134","line":36,"column":22,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1135","line":37,"column":10,"nodeType":"1066","messageId":"1067","endLine":37,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1136","line":38,"column":10,"nodeType":"1066","messageId":"1067","endLine":38,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1137","line":39,"column":10,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1138","line":39,"column":30,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1139","line":40,"column":10,"nodeType":"1066","messageId":"1067","endLine":40,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1140","line":41,"column":25,"nodeType":"1066","messageId":"1067","endLine":41,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1141","line":44,"column":10,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1142","line":52,"column":5,"nodeType":"1066","messageId":"1067","endLine":52,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1143","line":63,"column":9,"nodeType":"1066","messageId":"1067","endLine":63,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1144","line":66,"column":9,"nodeType":"1066","messageId":"1067","endLine":66,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1145","line":69,"column":9,"nodeType":"1066","messageId":"1067","endLine":69,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1073","line":80,"column":6,"nodeType":"1062","endLine":80,"endColumn":8,"suggestions":"1163"},{"ruleId":"1060","severity":1,"message":"1073","line":86,"column":6,"nodeType":"1062","endLine":86,"endColumn":23,"suggestions":"1164"},{"ruleId":"1060","severity":1,"message":"1076","line":98,"column":6,"nodeType":"1062","endLine":98,"endColumn":23,"suggestions":"1165"},{"ruleId":"1060","severity":1,"message":"1076","line":107,"column":6,"nodeType":"1062","endLine":107,"endColumn":26,"suggestions":"1166"},{"ruleId":"1060","severity":1,"message":"1076","line":118,"column":6,"nodeType":"1062","endLine":118,"endColumn":26,"suggestions":"1167"},{"ruleId":"1064","severity":1,"message":"1151","line":153,"column":9,"nodeType":"1066","messageId":"1067","endLine":153,"endColumn":17},{"ruleId":"1080","severity":1,"message":"1081","line":155,"column":29,"nodeType":"1082","messageId":"1083","endLine":155,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":8,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1126","line":6,"column":51,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1127","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1128","line":11,"column":3,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":10},{"ruleId":"1064","severity":1,"message":"1129","line":12,"column":3,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1130","line":17,"column":3,"nodeType":"1066","messageId":"1067","endLine":17,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1131","line":33,"column":10,"nodeType":"1066","messageId":"1067","endLine":33,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1132","line":35,"column":10,"nodeType":"1066","messageId":"1067","endLine":35,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1133","line":36,"column":10,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1134","line":36,"column":22,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1135","line":37,"column":10,"nodeType":"1066","messageId":"1067","endLine":37,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1136","line":38,"column":10,"nodeType":"1066","messageId":"1067","endLine":38,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1137","line":39,"column":10,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1138","line":39,"column":30,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1139","line":40,"column":10,"nodeType":"1066","messageId":"1067","endLine":40,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1140","line":41,"column":25,"nodeType":"1066","messageId":"1067","endLine":41,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1141","line":44,"column":10,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1142","line":52,"column":5,"nodeType":"1066","messageId":"1067","endLine":52,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1143","line":63,"column":9,"nodeType":"1066","messageId":"1067","endLine":63,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1144","line":66,"column":9,"nodeType":"1066","messageId":"1067","endLine":66,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1145","line":69,"column":9,"nodeType":"1066","messageId":"1067","endLine":69,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1073","line":80,"column":6,"nodeType":"1062","endLine":80,"endColumn":8,"suggestions":"1168"},{"ruleId":"1060","severity":1,"message":"1073","line":86,"column":6,"nodeType":"1062","endLine":86,"endColumn":23,"suggestions":"1169"},{"ruleId":"1060","severity":1,"message":"1076","line":98,"column":6,"nodeType":"1062","endLine":98,"endColumn":23,"suggestions":"1170"},{"ruleId":"1060","severity":1,"message":"1076","line":107,"column":6,"nodeType":"1062","endLine":107,"endColumn":26,"suggestions":"1171"},{"ruleId":"1060","severity":1,"message":"1076","line":118,"column":6,"nodeType":"1062","endLine":118,"endColumn":26,"suggestions":"1172"},{"ruleId":"1064","severity":1,"message":"1151","line":153,"column":9,"nodeType":"1066","messageId":"1067","endLine":153,"endColumn":17},{"ruleId":"1080","severity":1,"message":"1081","line":155,"column":29,"nodeType":"1082","messageId":"1083","endLine":155,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":8,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1126","line":6,"column":51,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1127","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1128","line":11,"column":3,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":10},{"ruleId":"1064","severity":1,"message":"1129","line":12,"column":3,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1130","line":17,"column":3,"nodeType":"1066","messageId":"1067","endLine":17,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1131","line":33,"column":10,"nodeType":"1066","messageId":"1067","endLine":33,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1132","line":35,"column":10,"nodeType":"1066","messageId":"1067","endLine":35,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1133","line":36,"column":10,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1134","line":36,"column":22,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1135","line":37,"column":10,"nodeType":"1066","messageId":"1067","endLine":37,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1136","line":38,"column":10,"nodeType":"1066","messageId":"1067","endLine":38,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1137","line":39,"column":10,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1138","line":39,"column":30,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1139","line":40,"column":10,"nodeType":"1066","messageId":"1067","endLine":40,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1140","line":41,"column":25,"nodeType":"1066","messageId":"1067","endLine":41,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1141","line":44,"column":10,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1142","line":52,"column":5,"nodeType":"1066","messageId":"1067","endLine":52,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1143","line":63,"column":9,"nodeType":"1066","messageId":"1067","endLine":63,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1144","line":66,"column":9,"nodeType":"1066","messageId":"1067","endLine":66,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1145","line":69,"column":9,"nodeType":"1066","messageId":"1067","endLine":69,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1073","line":80,"column":6,"nodeType":"1062","endLine":80,"endColumn":8,"suggestions":"1173"},{"ruleId":"1060","severity":1,"message":"1073","line":86,"column":6,"nodeType":"1062","endLine":86,"endColumn":23,"suggestions":"1174"},{"ruleId":"1060","severity":1,"message":"1076","line":98,"column":6,"nodeType":"1062","endLine":98,"endColumn":23,"suggestions":"1175"},{"ruleId":"1060","severity":1,"message":"1076","line":107,"column":6,"nodeType":"1062","endLine":107,"endColumn":26,"suggestions":"1176"},{"ruleId":"1060","severity":1,"message":"1076","line":118,"column":6,"nodeType":"1062","endLine":118,"endColumn":26,"suggestions":"1177"},{"ruleId":"1064","severity":1,"message":"1151","line":153,"column":9,"nodeType":"1066","messageId":"1067","endLine":153,"endColumn":17},{"ruleId":"1080","severity":1,"message":"1081","line":155,"column":29,"nodeType":"1082","messageId":"1083","endLine":155,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":8,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1178","line":6,"column":36,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":42},{"ruleId":"1064","severity":1,"message":"1126","line":6,"column":51,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1127","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1128","line":11,"column":3,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":10},{"ruleId":"1064","severity":1,"message":"1129","line":12,"column":3,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1130","line":17,"column":3,"nodeType":"1066","messageId":"1067","endLine":17,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1179","line":25,"column":10,"nodeType":"1066","messageId":"1067","endLine":25,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1180","line":25,"column":18,"nodeType":"1066","messageId":"1067","endLine":25,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1131","line":33,"column":10,"nodeType":"1066","messageId":"1067","endLine":33,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1132","line":35,"column":10,"nodeType":"1066","messageId":"1067","endLine":35,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1133","line":36,"column":10,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1134","line":36,"column":22,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1135","line":37,"column":10,"nodeType":"1066","messageId":"1067","endLine":37,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1136","line":38,"column":10,"nodeType":"1066","messageId":"1067","endLine":38,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1137","line":39,"column":10,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1138","line":39,"column":30,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1139","line":40,"column":10,"nodeType":"1066","messageId":"1067","endLine":40,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1140","line":41,"column":25,"nodeType":"1066","messageId":"1067","endLine":41,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1181","line":42,"column":10,"nodeType":"1066","messageId":"1067","endLine":42,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1182","line":42,"column":23,"nodeType":"1066","messageId":"1067","endLine":42,"endColumn":37},{"ruleId":"1064","severity":1,"message":"1141","line":44,"column":10,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1142","line":52,"column":5,"nodeType":"1066","messageId":"1067","endLine":52,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1143","line":63,"column":9,"nodeType":"1066","messageId":"1067","endLine":63,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1144","line":66,"column":9,"nodeType":"1066","messageId":"1067","endLine":66,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1145","line":69,"column":9,"nodeType":"1066","messageId":"1067","endLine":69,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1073","line":80,"column":6,"nodeType":"1062","endLine":80,"endColumn":8,"suggestions":"1183"},{"ruleId":"1060","severity":1,"message":"1073","line":86,"column":6,"nodeType":"1062","endLine":86,"endColumn":23,"suggestions":"1184"},{"ruleId":"1060","severity":1,"message":"1076","line":98,"column":6,"nodeType":"1062","endLine":98,"endColumn":23,"suggestions":"1185"},{"ruleId":"1060","severity":1,"message":"1076","line":107,"column":6,"nodeType":"1062","endLine":107,"endColumn":26,"suggestions":"1186"},{"ruleId":"1060","severity":1,"message":"1076","line":118,"column":6,"nodeType":"1062","endLine":118,"endColumn":26,"suggestions":"1187"},{"ruleId":"1064","severity":1,"message":"1151","line":153,"column":9,"nodeType":"1066","messageId":"1067","endLine":153,"endColumn":17},{"ruleId":"1080","severity":1,"message":"1081","line":155,"column":29,"nodeType":"1082","messageId":"1083","endLine":155,"endColumn":31},"no-native-reassign",["1188"],"no-negated-in-lhs",["1189"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location'. Either include it or remove the dependency array.","ArrayExpression",["1190"],"no-unused-vars","'currentage' is assigned a value but never used.","Identifier","unusedVar","'LanguageDropdown' is defined but never used.","'TopUser' is defined but never used.","'RecentActivity' is defined but never used.","'SocialSource' is defined but never used.","'LatestTransaction' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1191"],["1192"],"React Hook useEffect has a missing dependency: 'error.data.message'. Either include it or remove the dependency array.",["1193"],["1194"],["1195"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'preUpdateUser'. Either include it or remove the dependency array.",["1196"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'mobile' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'CardSubtitle' is defined but never used.","'CardHeader' is defined but never used.","'CardTitle' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'takeLatest' is defined but never used.","'put' is defined but never used.","'call' is defined but never used.","'userForgetPasswordSuccess' is defined but never used.","'userForgetPasswordError' is defined but never used.","'postFakeForgetPwd' is defined but never used.","'postJwtForgetPwd' is defined but never used.","'fireBaseBackend' is assigned a value but never used.","'profileSuccess' is defined but never used.","'profileError' is defined but never used.","'postFakeProfile' is defined but never used.","'postJwtProfile' is defined but never used.","'response' is assigned a value but never used.","'registerUserSuccessful' is defined but never used.","'registerUserFailed' is defined but never used.","'postFakeRegister' is defined but never used.","'postJwtRegister' is defined but never used.","Expected '!==' and instead saw '!='.","no-dupe-keys","Duplicate key 'deletingUser'.","ObjectExpression","Duplicate key 'updatingUser'.","'toggleMegaMenu' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1197"],["1198"],"'PropTypes' is defined but never used.","'Modal' is defined but never used.","'SweetAlert' is defined but never used.","'addUser' is defined but never used.","'deleteUser' is defined but never used.","'updateUser' is defined but never used.","'selectedPrivilage' is assigned a value but never used.","'selectedBranch' is assigned a value but never used.","'userObject' is assigned a value but never used.","'setUserObject' is assigned a value but never used.","'userIdTobeUpdated' is assigned a value but never used.","'userIdToBeDeleted' is assigned a value but never used.","'confirmDeleteAlert' is assigned a value but never used.","'setConfirmDeleteAlert' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setUsersForTable' is assigned a value but never used.","'passwordObject' is assigned a value but never used.","'addingUser' is assigned a value but never used.","'privilagesOptions' is assigned a value but never used.","'companiesOptions' is assigned a value but never used.","'branchesOptions' is assigned a value but never used.",["1199"],["1200"],["1201"],["1202"],["1203"],"'userData' is assigned a value but never used.","'Select' is defined but never used.",["1204"],["1205"],["1206"],["1207"],["1208"],["1209"],["1210"],["1211"],["1212"],["1213"],["1214"],["1215"],["1216"],["1217"],["1218"],["1219"],["1220"],["1221"],["1222"],["1223"],["1224"],["1225"],["1226"],["1227"],["1228"],"'Button' is defined but never used.","'AvForm' is defined but never used.","'AvField' is defined but never used.","'accountType' is assigned a value but never used.","'setAccountType' is assigned a value but never used.",["1229"],["1230"],["1231"],["1232"],["1233"],"no-global-assign","no-unsafe-negation",{"desc":"1234","fix":"1235"},{"desc":"1236","fix":"1237"},{"desc":"1238","fix":"1239"},{"desc":"1240","fix":"1241"},{"desc":"1242","fix":"1243"},{"desc":"1244","fix":"1245"},{"desc":"1246","fix":"1247"},{"desc":"1248","fix":"1249"},{"desc":"1250","fix":"1251"},{"desc":"1236","fix":"1252"},{"desc":"1238","fix":"1253"},{"desc":"1240","fix":"1254"},{"desc":"1242","fix":"1255"},{"desc":"1244","fix":"1256"},{"desc":"1236","fix":"1257"},{"desc":"1238","fix":"1258"},{"desc":"1240","fix":"1259"},{"desc":"1242","fix":"1260"},{"desc":"1244","fix":"1261"},{"desc":"1236","fix":"1262"},{"desc":"1238","fix":"1263"},{"desc":"1240","fix":"1264"},{"desc":"1242","fix":"1265"},{"desc":"1244","fix":"1266"},{"desc":"1236","fix":"1267"},{"desc":"1238","fix":"1268"},{"desc":"1240","fix":"1269"},{"desc":"1242","fix":"1270"},{"desc":"1244","fix":"1271"},{"desc":"1236","fix":"1272"},{"desc":"1238","fix":"1273"},{"desc":"1240","fix":"1274"},{"desc":"1242","fix":"1275"},{"desc":"1244","fix":"1276"},{"desc":"1236","fix":"1277"},{"desc":"1238","fix":"1278"},{"desc":"1240","fix":"1279"},{"desc":"1242","fix":"1280"},{"desc":"1244","fix":"1281"},{"desc":"1236","fix":"1282"},{"desc":"1238","fix":"1283"},{"desc":"1240","fix":"1284"},{"desc":"1242","fix":"1285"},{"desc":"1244","fix":"1286"},"Update the dependencies array to be: [props.location]",{"range":"1287","text":"1288"},"Update the dependencies array to be: [dispatch]",{"range":"1289","text":"1290"},"Update the dependencies array to be: [dispatch, selectedCompany]",{"range":"1291","text":"1292"},"Update the dependencies array to be: [addUserResponse, error.data.message]",{"range":"1293","text":"1294"},"Update the dependencies array to be: [deleteUserResponse, error.data.message]",{"range":"1295","text":"1296"},"Update the dependencies array to be: [error.data.message, updateUserResponse]",{"range":"1297","text":"1298"},"Update the dependencies array to be: [preUpdateUser, users]",{"range":"1299","text":"1300"},"Update the dependencies array to be: [props]",{"range":"1301","text":"1302"},"Update the dependencies array to be: [error.data.message, loginResponse]",{"range":"1303","text":"1304"},{"range":"1305","text":"1290"},{"range":"1306","text":"1292"},{"range":"1307","text":"1294"},{"range":"1308","text":"1296"},{"range":"1309","text":"1298"},{"range":"1310","text":"1290"},{"range":"1311","text":"1292"},{"range":"1312","text":"1294"},{"range":"1313","text":"1296"},{"range":"1314","text":"1298"},{"range":"1315","text":"1290"},{"range":"1316","text":"1292"},{"range":"1317","text":"1294"},{"range":"1318","text":"1296"},{"range":"1319","text":"1298"},{"range":"1320","text":"1290"},{"range":"1321","text":"1292"},{"range":"1322","text":"1294"},{"range":"1323","text":"1296"},{"range":"1324","text":"1298"},{"range":"1325","text":"1290"},{"range":"1326","text":"1292"},{"range":"1327","text":"1294"},{"range":"1328","text":"1296"},{"range":"1329","text":"1298"},{"range":"1330","text":"1290"},{"range":"1331","text":"1292"},{"range":"1332","text":"1294"},{"range":"1333","text":"1296"},{"range":"1334","text":"1298"},{"range":"1335","text":"1290"},{"range":"1336","text":"1292"},{"range":"1337","text":"1294"},{"range":"1338","text":"1296"},{"range":"1339","text":"1298"},[1351,1353],"[props.location]",[2211,2213],"[dispatch]",[2349,2366],"[dispatch, selectedCompany]",[2718,2735],"[addUserResponse, error.data.message]",[3036,3056],"[deleteUserResponse, error.data.message]",[3415,3435],"[error.data.message, updateUserResponse]",[5578,5585],"[preUpdateUser, users]",[1010,1012],"[props]",[1536,1551],"[error.data.message, loginResponse]",[2529,2531],[2667,2684],[3074,3091],[3392,3412],[3771,3791],[2526,2528],[2664,2681],[3071,3088],[3389,3409],[3768,3788],[2520,2522],[2658,2675],[3065,3082],[3383,3403],[3762,3782],[2521,2523],[2659,2676],[3066,3083],[3384,3404],[3763,3783],[2523,2525],[2661,2678],[3068,3085],[3386,3406],[3765,3785],[2530,2532],[2668,2685],[3075,3092],[3393,3413],[3772,3792],[2531,2533],[2669,2686],[3076,3093],[3394,3414],[3773,3793]]